{
  "info": {
    "_postman_id": "ac65d3ee-04c9-47c8-9319-f7efca0d9cc5",
    "name": "Imburse API",
    "description": "Welcome to the Imburse API. You can use our APIs to access Identity, Management, and Transaction API endpoints.\r\n\r\nFor more information on the API, please read the [developers documentation](https://developers.imbursepayments.com) where Core Concepts, a Started Guide, and Tutorials will be found.\r\n\r\n\r\n\r\n",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Identity API Reference",
      "item": [
        {
          "name": "Create Management API Bearer Token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bebb259f-e09d-4eef-87ce-010ad3c573fd",
                "exec": [
                  "var CryptoJS = require(\"crypto-js\");\r",
                  "\r",
                  "var publicKey = pm.environment.get(\"publicKey\");\r",
                  "var privateKey = CryptoJS.enc.Base64.parse(pm.environment.get(\"privateKey\"));\r",
                  "\r",
                  "var timestamp = (new Date).getTime() / 1000;\r",
                  "\r",
                  "var nonce = timestamp;\r",
                  "    \r",
                  "var body = request.data;\r",
                  "\r",
                  "if (body.length > 0){\r",
                  "    var utf8Body = CryptoJS.enc.Utf8.parse(body);\r",
                  "    var hashedBody = CryptoJS.SHA256(utf8Body);\r",
                  "    var bodySignature = CryptoJS.enc.Base64.stringify(hashedBody);\r",
                  "}\r",
                  "else {\r",
                  "    var bodySignature = \"\";\r",
                  "}\r",
                  "\r",
                  "var unsignedSignature = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + bodySignature;\r",
                  "\r",
                  "var utf8Signature = CryptoJS.enc.Utf8.parse(unsignedSignature);\r",
                  "var hashedSignature = CryptoJS.HmacSHA256(utf8Signature, privateKey);\r",
                  "var signedSignature = CryptoJS.enc.Base64.stringify(hashedSignature);\r",
                  "\r",
                  "var hmac = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + signedSignature;\r",
                  "\r",
                  "pm.variables.set(\"hmac-token\", hmac);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "1ddd267b-89d2-462e-9227-a0ee94e86805",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Hmac {{hmac-token}}"
              }
            ],
            "url": "{{baseApiUrl}}/v1/identity/hmac/management",
            "description": "#### Description\n\nCreates a new Management API bearer token from a given HMAC token. Please see [HMAC Authentication](#hmac-authentication) for more details."
          },
          "response": [
            {
              "id": "3365b3a8-75da-44db-9502-f9bc4aa40d87",
              "name": "Create Management API Bearer Token",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Hmac {{hmac-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{baseApiUrl}}/v1/identity/hmac/management"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "date",
                  "value": "Mon, 25 Feb 2019 16:00:49 GMT"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "server",
                  "value": "envoy"
                },
                {
                  "key": "api-supported-versions",
                  "value": "1.0"
                },
                {
                  "key": "x-envoy-upstream-service-time",
                  "value": "532"
                },
                {
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"accessToken\": \"\",\n    \"expires\": \"\"\n}"
            }
          ]
        },
        {
          "name": "Create Payout API Bearer Token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bebb259f-e09d-4eef-87ce-010ad3c573fd",
                "exec": [
                  "var CryptoJS = require(\"crypto-js\");\r",
                  "\r",
                  "var publicKey = pm.environment.get(\"publicKey\");\r",
                  "var privateKey = CryptoJS.enc.Base64.parse(pm.environment.get(\"privateKey\"));\r",
                  "\r",
                  "var timestamp = (new Date).getTime() / 1000;\r",
                  "\r",
                  "var nonce = timestamp;\r",
                  "    \r",
                  "var body = request.data;\r",
                  "\r",
                  "if (body.length > 0){\r",
                  "    var utf8Body = CryptoJS.enc.Utf8.parse(body);\r",
                  "    var hashedBody = CryptoJS.SHA256(utf8Body);\r",
                  "    var bodySignature = CryptoJS.enc.Base64.stringify(hashedBody);\r",
                  "}\r",
                  "else {\r",
                  "    var bodySignature = \"\";\r",
                  "}\r",
                  "\r",
                  "var unsignedSignature = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + bodySignature;\r",
                  "\r",
                  "var utf8Signature = CryptoJS.enc.Utf8.parse(unsignedSignature);\r",
                  "var hashedSignature = CryptoJS.HmacSHA256(utf8Signature, privateKey);\r",
                  "var signedSignature = CryptoJS.enc.Base64.stringify(hashedSignature);\r",
                  "\r",
                  "var hmac = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + signedSignature;\r",
                  "\r",
                  "pm.variables.set(\"hmac-token\", hmac);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "0a64a4a2-db8f-4503-9de8-592c03255bc3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Hmac {{hmac-token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"customerRef\": \"\",\n\t\"orderRef\": \"\",\n\t\"instructionRef\": \"\"\n}"
            },
            "url": "{{baseApiUrl}}/v1/identity/hmac/payout",
            "description": "#### Description\n\nCreates a new Payout API bearer token from a given HMAC token. Please see [HMAC Authentication](#hmac-authentication) for more details."
          },
          "response": [
            {
              "id": "6520de8d-c9ff-479c-baa3-ba6d2a00ebad",
              "name": "Create Payout API Bearer Token",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Hmac {{hmac-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{baseApiUrl}}/v1/identity/hmac/payout"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "date",
                  "value": "Mon, 25 Feb 2019 16:00:49 GMT"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "server",
                  "value": "envoy"
                },
                {
                  "key": "api-supported-versions",
                  "value": "1.0"
                },
                {
                  "key": "x-envoy-upstream-service-time",
                  "value": "532"
                },
                {
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"accessToken\": \"\",\n    \"expires\": \"\"\n}"
            }
          ]
        }
      ],
      "_postman_id": "f6bf99b9-ca03-47b5-a667-8e1a5a625b0e",
      "description": "This API describes how to create the three types of Bearer Token for our API's.\n\nThey are all based on the HMAC authentication scheme.",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "db9eddb4-5296-437c-bbec-91b623ccc3c3",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "7d90fbcd-bd8c-45f3-8d34-f3780fdeed47",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Management API Reference",
      "item": [
        {
          "name": "Accounts",
          "item": [
            {
              "name": "General Info",
              "item": [
                {
                  "name": "Get Account",
                  "_postman_id": "5add0f2a-961c-4bc0-8eb4-6d8579d3ff14",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{baseApiUrl}}/v1/account",
                    "description": "#### Description\n\nGets the current account assigned to the access token.\n\n#### Role required\n\n`acc.r`"
                  },
                  "response": [
                    {
                      "id": "f31cf356-e1c9-4018-a915-73c57a911104",
                      "name": "Get Account",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{baseApiUrl}}/v1/account"
                      },
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"accountId\": \"\",\n\t\"imburseAccountRef\": \"\",\n\t\"companyName\": \"\",\n\t\"billingContactFirstName\": \"\",\n\t\"billingContactLastName\": \"\",\n\t\"billingContactAddress\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                    }
                  ]
                }
              ],
              "_postman_id": "53e94c1d-bcfd-472d-b4e7-14289ab131c6",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "31ef9369-14ea-44bb-a91a-582c84aa056a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ea2a464-9b3c-4022-946b-74e1cf23e5ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Security Keys",
              "item": [
                {
                  "name": "Create a new Key",
                  "_postman_id": "978664ad-7c1e-4f13-b7ce-47cd9f330727",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"roles\": \"\"\n}"
                    },
                    "url": "{{baseApiUrl}}/v1/account/keys",
                    "description": "#### Description\n\nCreates a new account key to access account level API's.\n\n#### Role required\n\n`acc.keys.a`\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nroles | Yes | The [roles](#account-roles) to be assigned to the key."
                  },
                  "response": [
                    {
                      "id": "01702494-71c9-4993-a112-6d7bd78c2329",
                      "name": "Create a new Key",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[ \n\t{\n\t\t\"roles\": \"\"\n\t}\n]"
                        },
                        "url": "{{baseApiUrl}}/v1/account/keys"
                      },
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"accountId\": \"\",\n\t\"tenantId\": \"\",\n\t\"publicKey\": \"\",\n\t\"privateKey\": \"\",\n\t\"roles\": []\n}"
                    }
                  ]
                },
                {
                  "name": "Get All Keys",
                  "_postman_id": "75d7c37d-24f0-48c2-bdd7-48b1ad2fc463",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{baseApiUrl}}/v1/account/keys",
                    "description": "#### Description\n\nGets the existing account public keys and claims assigned to them. Private keys are not returned.\n\n#### Role required\n\n`acc.key.r`"
                  },
                  "response": [
                    {
                      "id": "b010e01a-f779-4cfe-baa7-57b0abaf7809",
                      "name": "Get All Keys",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{baseApiUrl}}/v1/account/keys"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n\t{\n\t\t\"publicKey\": \"\",\n\t\t\"roles\": []\n\t}\n]"
                    }
                  ]
                },
                {
                  "name": "Get Key by Public Key",
                  "_postman_id": "45d621ca-c618-40e9-a4c1-7240d88269b6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{baseApiUrl}}/v1/account/keys/{{publicKey}}",
                    "description": "#### Description\n\nGets a certain account key by its public key.\n\n#### Role required\n\n`acc.key.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\npublicKey | The public key of the desired account key"
                  },
                  "response": [
                    {
                      "id": "bed7ba38-801c-4aa2-bb0e-cb44b702d9dd",
                      "name": "Get Key by Public Key",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{baseApiUrl}}/v1/account/keys/{{publicKey}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"publicKey\": \"\",\n\t\"roles\": []\n}\n"
                    }
                  ]
                },
                {
                  "name": "Delete a Key",
                  "_postman_id": "879a0ffe-7ffa-4308-b378-481b47d866bb",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{baseApiUrl}}/v1/account/keys/{{publicKey}}",
                    "description": "#### Description\n\nDeletes a public and private key from the account. This is dangerous as it will stop the key from being used for future requests and will not be able to be undone.\n\n#### Role required\n\n`acc.key.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\npublicKey | The public key of the account keyset to delete."
                  },
                  "response": [
                    {
                      "id": "25bba2df-c501-4c2b-9780-14ca97dcffe4",
                      "name": "Delete a Key",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{baseApiUrl}}/v1/account/keys/{{accountKeyToDelete}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                }
              ],
              "_postman_id": "09e70593-2a88-4c91-a7cb-1b6d3934b979",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9b480cc3-5544-4953-a237-c89314b1f884",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "6bf6a158-ad2a-414b-8106-89c25d786454",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Tenants",
              "item": [
                {
                  "name": "Create new Tenant",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "e2a46408-c4b5-4525-8c92-e21fe2c58ba2",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ffe6bc62-fd06-4bce-82f4-768d541ef68b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"\",\n    \"streetAddress\": \"\",\n    \"extendedStreetAddress\": \"\",\n    \"locality\": \"\",\n    \"region\": \"\",\n    \"postCode\": \"\",\n    \"country\": \"\"\n}"
                    },
                    "url": "{{baseApiUrl}}/v1/account/tenants",
                    "description": "#### Description\n\nCreates a new tenant.\n\n#### Role required\n\n`acc.t.a`\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nname | Yes | The name of the new tenant.\naddress | No | An [address](address-object) for the new tenant."
                  },
                  "response": [
                    {
                      "id": "9d3ce5f9-02ad-4b41-9903-b9a61be375b4",
                      "name": "Create new Tenant",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{management-token}}"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"\",\n    \"streetAddress\": \"\",\n    \"extendedStreetAddress\": \"\",\n    \"locality\": \"\",\n    \"region\": \"\",\n    \"postCode\": \"\",\n    \"country\": \"\"\n}"
                        },
                        "url": "{{baseApiUrl}}/v1/account/tenants"
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"tenantId\": \"\",\n\t\"accountId\": \"\",\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                    }
                  ]
                },
                {
                  "name": "Get Tenants",
                  "_postman_id": "1e482fce-e553-4077-aa21-e7901ba6b85f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseApiUrl}}/v1/account/tenants?from={{from}}&take={{take}}&name={{name}}",
                      "host": [
                        "{{baseApiUrl}}"
                      ],
                      "path": [
                        "v1",
                        "account",
                        "tenants"
                      ],
                      "query": [
                        {
                          "key": "from",
                          "value": "{{from}}",
                          "description": "Index you want to take from. Default is 0."
                        },
                        {
                          "key": "take",
                          "value": "{{take}}",
                          "description": "How many results to bring back. Default is 20."
                        },
                        {
                          "key": "name",
                          "value": "{{name}}",
                          "description": "Optional - Filter by a tenant name. Default is nothing."
                        }
                      ]
                    },
                    "description": "#### Description\n\nGets all the tenants for this account.\n\n#### Role required\n\n`acc.t.r`\n\n#### Optional Params\n\nParameter | Description\n--------- | -----------\nfrom | The index to take from. Default is 0.\ntake | Amount of results to return. Default us 20.\nname | Tenant Name to filter by."
                  },
                  "response": [
                    {
                      "id": "58ed7744-c6fa-41ca-a8a0-1234e939b72f",
                      "name": "Get Tenants",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": {
                          "raw": "{{baseApiUrl}}/v1/account/tenants?from={{startingIndex}}&take={{resultsToGet}}&name={{tenantName}}",
                          "host": [
                            "{{baseApiUrl}}"
                          ],
                          "path": [
                            "v1",
                            "account",
                            "tenants"
                          ],
                          "query": [
                            {
                              "key": "from",
                              "value": "{{startingIndex}}",
                              "description": "Index you want to take from. Default is 0."
                            },
                            {
                              "key": "take",
                              "value": "{{resultsToGet}}",
                              "description": "How many results to bring back. Default is 20."
                            },
                            {
                              "key": "name",
                              "value": "{{tenantName}}",
                              "description": "Optional - Filter by a tenant name. Default is nothing."
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"currentPage\": 1,\n\t\"pageCount\": 1,\n\t\"rowCount\": 1,\n\t\"results\": [\n\t\t{\n\t\t\t\"id\": \"\",\n\t\t\t\"accountId\": \"\",\n\t\t\t\"name\": \"\",\n\t\t\t\"address\": \"\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Get Tenant by Id",
                  "_postman_id": "b92ec633-349b-4f21-aa35-23983be80ed2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{baseApiUrl}}/v1/account/tenants/{{tenantId}}",
                    "description": "#### Description\n\nGets a tenant by id\n\n#### Role required\n\n`acc.t.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantId | The ID of the tenant to get."
                  },
                  "response": [
                    {
                      "id": "63b066a4-1984-448a-8131-97fca597f590",
                      "name": "Get Tenant By Id",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{baseApiUrl}}/v1/account/tenants/{{tenantId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"id\": \"\",\n\t\"accountId\": \"\",\n\t\"name\": \"\",\n\t\"address\": \"\"\n}\n"
                    }
                  ]
                },
                {
                  "name": "Update Tenant",
                  "_postman_id": "94282eb1-d0e4-4ad4-88a6-10f82b9ba66e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"\",\n\t\"streetAddress\": \"\",\n\t\"extendedStreetAddress\": \"\",\n\t\"locality\": \"\",\n\t\"region\": \"\",\n\t\"postCode\": \"\",\n\t\"country\": \"\"\n}"
                    },
                    "url": "{{baseApiUrl}}/v1/account/tenants/{{tenantId}}",
                    "description": "#### Description\n\nUpdates a tenant.\n\n#### Role required\n\n`acc.t.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantId | The ID of the tenant to update\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nname | Yes | The name of the tenant.\naddress | No | An [address](address-object) for the tenant."
                  },
                  "response": [
                    {
                      "id": "e0245da2-ae0d-44be-a0dc-005eb463f595",
                      "name": "Update Tenant",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"\",\n    \"streetAddress\": \"\",\n    \"extendedStreetAddress\": \"\",\n    \"locality\": \"\",\n    \"region\": \"\",\n    \"postCode\": \"\",\n    \"country\": \"\"\n}"
                        },
                        "url": "{{baseApiUrl}}/v1/account/tenants/{{tenantId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                },
                {
                  "name": "Create Key",
                  "_postman_id": "87a98404-40fd-4a28-801f-af5eaaa73d27",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"roles\": []\n}"
                    },
                    "url": "{{baseApiUrl}}/v1/tenant/{{tenantId}}/keys",
                    "description": "#### Description\n\nCreates a new key for a specific tenant.\n\n#### Role required\n\n`t.key.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantId | The ID of the specific tenant.\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nroles | Yes | The [roles](#tenant-roles) to be assigned to the key."
                  },
                  "response": [
                    {
                      "id": "317dfa2e-7ce9-44c4-b611-a6cb76f5fbc0",
                      "name": "Create Key",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"roles\": []\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/{{tenantId}}/keys"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"accountId\": \"\",\n    \"tenantId\": \"\",\n    \"publicKey\": \"\",\n    \"privateKey\": \"\",\n    \"roles\": []\n}"
                    }
                  ]
                },
                {
                  "name": "Get All Keys",
                  "_postman_id": "de93b675-8cdd-4084-a530-0d0f80c9aee1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{managementApiUrl}}/v1/tenant/{{tenantId}}/keys",
                    "description": "#### Description\n\nGets the keys for a specific tenant. \n\n#### Role required\n\n`t.key.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantId | The ID of the tenant"
                  },
                  "response": [
                    {
                      "id": "4dc1022e-d159-48ee-81df-11877a29cc02",
                      "name": "Get All Keys",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{managementApiUrl}}/v1/tenant/keys"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"publicKey\": \"\",\n        \"roles\": []\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "Get Key By PublicKey",
                  "_postman_id": "5ae170a1-0c7b-4d19-b455-5ca9cca21e2c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": "{{managementApiUrl}}/v1/tenant/{{tenantId}}/keys/{{publicKey}}",
                    "description": "#### Description\n\nGets a key by a specific tenant Id and public key\n\n#### Role required\n\n`t.key.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantId | The ID of the tenant\npublicKey | The public key of the desired tenant key"
                  },
                  "response": [
                    {
                      "id": "3850a071-0fbc-4a96-b29a-b04d17b786b8",
                      "name": "Get Key By PublicKey",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"publicKey\": \"\",\n    \"roles\": []\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a Key",
                  "_postman_id": "cca92015-0f89-4dc7-ac46-532bd2764bf4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/tenant/{{tenantId}}/keys/{{publicKey}}",
                    "description": "#### Description\n\nRemoves a spefic key set for a specific tenant by it's public key. This is dangerous as it will stop the key from being used for future requests and will not be able to be undone.\n\n#### Role required\n\n`t.key.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantID | The ID of the specific tenant.\npublicKey | The public key of the key set to delete."
                  },
                  "response": [
                    {
                      "id": "facf90a9-89bd-44fa-b8ae-ec05374b00be",
                      "name": "Remove Key by Public Key",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                }
              ],
              "_postman_id": "b195ab08-dd5a-4639-b975-f9842b87e7b5",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "38080366-1aef-41b1-b132-0264a98f1a8c",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "570280c6-3f62-4e60-8920-ac77cdc572da",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "d4a8fee4-7343-464f-9b3f-bf42e81619e2",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "3d3ef99c-2ae8-4cec-8eab-c2034155fcd1",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4b1e4156-1309-416d-ba90-fd32a5e0b00c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Tenants",
          "item": [
            {
              "name": "Security Keys",
              "item": [
                {
                  "name": "Create Key",
                  "_postman_id": "3bbc7e0a-c7b7-4b45-9d21-270b9c0d826a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"roles\": []\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/tenant/keys",
                    "description": "#### Description\n\nCreates a new key for a tenant.\n\n##### Role required\n\n`t.key.a`\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nroles | Yes | The [roles](#tenant-roles) to be assigned to the key."
                  },
                  "response": [
                    {
                      "id": "3514510b-3aa1-486d-8c17-cd880d55696d",
                      "name": "Create Key",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"roles\": []\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/keys"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"accountId\": \"\",\n    \"tenantId\": \"\",\n    \"publicKey\": \"\",\n    \"privateKey\": \"\",\n    \"roles\": []\n}"
                    }
                  ]
                },
                {
                  "name": "Get All Keys",
                  "_postman_id": "59d00071-d648-48e0-90e1-1ec41175c862",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/tenant/keys",
                    "description": "#### Description\n\nGets the Api keys for the tenant to define in the bearer token.\n\n#### Role required\n\n`t.key.r`"
                  },
                  "response": [
                    {
                      "id": "cee7c56a-c24a-42d9-b71d-9c0a4592f8ee",
                      "name": "Get All Keys",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{managementApiUrl}}/v1/tenant/keys"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"tenantId\": \"\",\n        \"publicKey\": \"\",\n        \"roles\": []\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "Get Key By PublicKey",
                  "_postman_id": "b3a432cb-2cf5-4263-a7d0-f69de94b10a4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}",
                    "description": "#### Description\n\nGets a specific key by its public key.\n\n#### Role required\n\n`t.key.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\npublicKey | The public key of the specific key"
                  },
                  "response": [
                    {
                      "id": "8771bc08-d3a5-42f1-8e8c-ac97442d29ed",
                      "name": "Get Key By PublicKey",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"tenantId\": \"\",\n    \"publicKey\": \"\",\n    \"roles\": []\n}"
                    }
                  ]
                },
                {
                  "name": "Remove Key by Public Key",
                  "_postman_id": "77350897-25c9-44f8-a79f-600b890ba378",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}",
                    "description": "#### Description\n\nRemoves a spefic key set by it's public key. This is dangerous as it will stop the key from being used for future requests and will not be able to be undone.\n\n#### Role required\n\n`t.key.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\npublicKey | The public key of the key set to delete."
                  },
                  "response": [
                    {
                      "id": "6a863216-e618-4b2d-8f0a-a3d6ba2856a6",
                      "name": "Remove Key by Public Key",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{management-token}}",
                            "type": "text"
                          }
                        ],
                        "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                }
              ],
              "_postman_id": "a41b9350-8cff-475e-a747-b242bc1c1a83",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "2db95add-3a76-4424-ada5-fa1fc865011c",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "3d3ef99c-2ae8-4cec-8eab-c2034155fcd1",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4b1e4156-1309-416d-ba90-fd32a5e0b00c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Marketplace",
          "item": [
            {
              "name": "Get all Apps",
              "_postman_id": "118057f9-ed88-4c23-949e-d7d08c19f468",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}v1/marketplace/apps",
                "description": "#### Description\n\nGets a list of all Apps.\n\n#### Role required\n\n`t.psp.r`"
              },
              "response": [
                {
                  "id": "5d409ba2-40b4-4f91-952b-aa8032b55928",
                  "name": "Get all Apps",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}v1/marketplace/apps"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"apps\": [\n        {\n            \"developerId\": \"IMBURSE\",\n            \"developerName\": \"Imburse\",\n            \"appId\": \"BRAINTREE_SDK\",\n            \"name\": \"Braintree SDK\"\n        },\n        {\n            \"developerId\": \"IMBURSE\",\n            \"developerName\": \"Imburse\",\n            \"appId\": \"TANGOCARD_RAAS\",\n            \"name\": \"Tango Card RaaS\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get an App",
              "_postman_id": "19dc5f35-4b3e-4223-aa83-b9e7aea9586a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/marketplace/apps/{{app-id}}",
                "description": "#### Description\n\nGet an App.\n\n#### Role required\n\n`t.psp.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\napp-id | The app-id of the App to get."
              },
              "response": [
                {
                  "id": "445cf9c6-a62f-4aba-8711-6f758731b7a6",
                  "name": "Get an App",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/marketplace/apps/{{app-id}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"developerId\": \"IMBURSE\",\n    \"developerName\": \"Imburse\",\n    \"appId\": \"BRAINTREE_SDK\",\n    \"name\": \"Braintree SDK\"\n}"
                }
              ]
            },
            {
              "name": "Install an App",
              "_postman_id": "38ffc66f-518a-4095-8009-19d5544f2e1c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "url": "{{managementApiUrl}}/v1/marketplace/apps/{{app-id}}/install",
                "description": "#### Description\n\nInstall an App\n\n#### Role required\n\n`t.psp.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\napp-id | The app-id of the App to install."
              },
              "response": [
                {
                  "id": "496b7a89-8bc7-4c89-bc5f-db68eeaae45f",
                  "name": "Install an App",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": "{{managementApiUrl}}/v1/marketplace/apps/{{app-id}}/install"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": null,
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": null
                }
              ]
            }
          ],
          "_postman_id": "b95fd47a-8300-4d58-86f5-0c643cb54482",
          "_postman_isSubFolder": true
        },
        {
          "name": "Apps",
          "item": [
            {
              "name": "Get installed Apps",
              "_postman_id": "0a584ecd-7de8-4688-bc40-1c32fdbc3ff1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/apps/installed",
                "description": "#### Description\n\nGet the installed Apps for your Tenant.\n\n#### Role required\n\n`t.psp.r`"
              },
              "response": [
                {
                  "id": "87518bb8-b1b6-41b2-b06b-40b4c3f52bc5",
                  "name": "Get installed Apps ",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/apps/installed"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"apps\": [\n        \"BRAINTREE_SDK\",\n        \"TANGOCARD_RAAS\"\n    ]\n}"
                }
              ]
            },
            {
              "name": "Uninstall an App",
              "_postman_id": "7fce56cd-b210-4add-b632-f16c73b96000",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/apps/installed/{{app-id}}/uninstall",
                "description": "#### Description\n\nUninstall an App.\n\n#### Role required\n\n`t.psp.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\napp-id | The app-id of the App to uninstall."
              },
              "response": [
                {
                  "id": "c5d86c78-deee-4e68-bad9-a2fd1daf363f",
                  "name": "Uninstall App",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "url": "{{managementApiUrl}}/v1/apps/installed/{{app-id}}/uninstall"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": null,
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": null
                }
              ]
            },
            {
              "name": "Configure the Braintree SDK App",
              "_postman_id": "6dc5414b-0ce5-4408-87d2-b96bd3909b9b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"merchantId\": \"Ov6Y2kneVSyJSpoXBVnAGw0OTDzl0Jkg\",\n    \"privateKey\": \"gnD1Yrrw6KLes64J5A3Eb8vs4a8Zj2sA\",\n    \"publicKey\": \"NU0uRxhTpvCiF8QdkxFqEgAsOqmpX7i4\",\n    \"settings\": [\n        {\n            \"currency\": \"EUR\",\n            \"countries\": [],\n            \"merchantAccountId\": \"euro-account\",\n            \"description\": \"Euro Account\"\n        }\n    ]\n}"
                },
                "url": "{{managementApiUrl}}/v1/apps/installed/BRAINTREE_SDK/configure",
                "description": "#### Description\n\nConfigure the Braintree SDK App\n\n#### Role required\n\n`t.psp.a`"
              },
              "response": [
                {
                  "id": "9a927fd6-7c64-4662-b1bf-48db99e1b16d",
                  "name": "Configure Braintree SDK App",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"merchantId\": \"Ov6Y2kneVSyJSpoXBVnAGw0OTDzl0Jkg\",\n    \"privateKey\": \"gnD1Yrrw6KLes64J5A3Eb8vs4a8Zj2sA\",\n    \"publicKey\": \"NU0uRxhTpvCiF8QdkxFqEgAsOqmpX7i4\",\n    \"settings\": [\n        {\n            \"currency\": \"EUR\",\n            \"countries\": [],\n            \"merchantAccountId\": \"euro-account\",\n            \"description\": \"Euro Account\"\n        }\n    ]\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/apps/installed/BRAINTREE_SDK/configure"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"merchantId\": \"Ov6Y2kneVSyJSpoXBVnAGw0OTDzl0Jkg\",\n    \"privateKey\": \"gnD1Yrrw6KLes64J5A3Eb8vs4a8Zj2sA\",\n    \"publicKey\": \"NU0uRxhTpvCiF8QdkxFqEgAsOqmpX7i4\",\n    \"settings\": [\n        {\n            \"currency\": \"EUR\",\n            \"countries\": [],\n            \"merchantAccountId\": \"euro-account\",\n            \"description\": \"Euro Account\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Configure the Tango Card RaaS App",
              "_postman_id": "d5d4d950-833d-4129-8c41-ed44cc7d90a0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customerIdentifier\": \"tangocard-customer-id\",\n    \"accountIdentifier\": \"tangocard-account-id\"\n}"
                },
                "url": "{{managementApiUrl}}/v1/apps/installed/TANGOCARD_RAAS/configure",
                "description": "#### Description\n\nConfigure the Tango Card RaaS App.\n\n#### Role required\n\n`t.psp.a`"
              },
              "response": [
                {
                  "id": "f53b8417-8029-4124-b132-0131a4477323",
                  "name": "Configure the Tango Card RaaS App",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"customerIdentifier\": \"tangocard-customer-id\",\n    \"accountIdentifier\": \"tangocard-account-id\"\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/apps/installed/TANGOCARD_RAAS/configure"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"customerIdentifier\": \"tangocard-customer-id\",\n    \"accountIdentifier\": \"tangocard-account-id\"\n}"
                }
              ]
            }
          ],
          "_postman_id": "1272cb75-3e30-4ac1-8d5e-c38c4aad1f4d",
          "_postman_isSubFolder": true
        },
        {
          "name": "Rewards Catalog",
          "item": [
            {
              "name": "Get a list of Rewards by Ids",
              "_postman_id": "1a4c0368-7977-41b6-9617-bf7eae739ca1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{managementApiUrl}}/v1/catalog/rewards?id={{reward-id-1}}&id={{reward-id-2}}",
                  "host": [
                    "{{managementApiUrl}}"
                  ],
                  "path": [
                    "v1",
                    "catalog",
                    "rewards"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{reward-id-1}}"
                    },
                    {
                      "key": "id",
                      "value": "{{reward-id-2}}"
                    }
                  ]
                },
                "description": "#### Description\n\nGets a list of rewards from the catalog by their ID's\n\n#### Role required\n\n`t.cat.r`\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nrewardIds | Yes | An array of GUID's for the requested rewards."
              },
              "response": [
                {
                  "id": "6655c8f7-bcfd-4935-83cd-1df70a17ca0c",
                  "name": "Get a list of Rewards by Ids",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{managementApiUrl}}/v1/catalog/rewards?id=ffdae9c9-1bfd-55d3-f6cc-9b1de1874241",
                      "host": [
                        "{{managementApiUrl}}"
                      ],
                      "path": [
                        "v1",
                        "catalog",
                        "rewards"
                      ],
                      "query": [
                        {
                          "key": "id",
                          "value": "ffdae9c9-1bfd-55d3-f6cc-9b1de1874241"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "description": "",
                      "type": "text"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"brand\": {\n            \"brandKey\": \"B644898\",\n            \"brandName\": \"Amazon.co.uk\",\n            \"createdDate\": \"2016-07-12T23:53:33Z\",\n            \"description\": \"<p>Amazon.co.uk Gift Cards* can be redeemed towards millions of items at www.amazon.co.uk. Amazon.co.uk&#39;s huge selection includes products in Books, Electronics, Music, MP3 Downloads, Film &amp; TV, Clothing, Video Games, Software, Sports &amp; Outdoors, Toys, Baby, Computers &amp; Office, Home &amp; Garden, Jewellery, Beauty, DIY &amp; Home Improvement, Office Products, Camera &amp; Photo, Pet Supplies, and more. Amazon.co.uk is the place to find and discover almost anything you want to buy online at a great price.</p>\\r\\n\",\n            \"disclaimer\": \"<p>*Restrictions apply. For complete terms and conditions, visit:&nbsp;<a href=\\\"http://www.amazon.co.uk/gc-legal\\\">www.amazon.co.uk/gc-legal</a>.</p>\\r\\n\",\n            \"imageUrls\": [\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-80w-326ppi.png\",\n                    \"width\": 80\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-130w-326ppi.png\",\n                    \"width\": 130\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-200w-326ppi.png\",\n                    \"width\": 200\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-278w-326ppi.png\",\n                    \"width\": 278\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-300w-326ppi.png\",\n                    \"width\": 300\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-1200w-326ppi.png\",\n                    \"width\": 1200\n                }\n            ],\n            \"lastUpdateDate\": \"2017-12-28T19:11:48Z\",\n            \"requirements\": {\n                \"alwaysShowDisclaimer\": false,\n                \"disclaimerInstructions\": \"\",\n                \"displayInstructions\": \"<ol>\\r\\n\\t<li><strong>Guidelines for use of the logo:&nbsp;</strong>&nbsp;The logos and graphics can not be changed in any way and must be used according to the&nbsp;usage&nbsp;guidelines available at&nbsp;<a href=\\\"https://www.amazon.co.uk/b?node=14235247031\\\">https://www.amazon.co.uk/b?node=14235247031</a>.&nbsp;&nbsp;Download our logos from the &quot;Additional Resources&quot; section.&nbsp; Please only use the logos provided on this page.</li>\\r\\n\\t<li><strong>Use the correct product name:</strong>&nbsp; &quot;Amazon.co.uk Gift Card&quot; is our name.&nbsp; Our three-word product name is always capitalized and should not be broken up.&nbsp; It is not a gift certificate or e-gift card. If you are describing the gift card value display the pound amount first &ldquo;&pound;XX&nbsp;<a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a>&nbsp;Gift Card&rdquo;.</li>\\r\\n\\t<li><strong>Display the disclaimer:&nbsp;</strong>&nbsp;When using our logo or product name, please always display the following disclaimer: &quot;*Restrictions apply. For complete terms and conditions, visit:&nbsp;<a href=\\\"https://www.amazon.de/gp/help/customer/display.html/ref=s9_acss_bw_cg_GCBCDTM_md1_w?nodeId=505028&amp;pf_rd_m=A3JWKAKR8XB7XF&amp;pf_rd_s=merchandised-search-1&amp;pf_rd_r=PYRMZX6Z9K41WE13H40E&amp;pf_rd_t=101&amp;pf_rd_p=bc3e74fb-34f0-4efb-b327-851efc3bddc4&amp;pf_rd_i=14235495031\\\">amazon.com/gc-legal</a>.&quot;</li>\\r\\n\\t<li><strong>Amazon is not a sponsor:</strong>&nbsp;&nbsp;Your use of the Amazon brand should not imply partnership or sponsorship.&nbsp; You agree not to misrepresent the relationship between Amazon and your business.</li>\\r\\n\\t<li><strong>Nothing is &quot;free&quot;:&nbsp;&nbsp;</strong>No statements can refer to the vouchers for free, free or for free as these terms have strong implications for customers.</li>\\r\\n\\t<li><strong>Subject Line:</strong>&nbsp; If you deliver the Amazon.co.uk Gift Card by email, the&nbsp;Subject Line cannot&nbsp;imply that Amazon has sent the gift card.&nbsp; An example of a&nbsp;GOOD&nbsp;Subject Line is: &quot;MyCompany sent you an Amazon.co.uk Gift Card!&quot;&nbsp; An example of a&nbsp;BAD Subject Line is:&nbsp; &quot;Amazon.co.uk sent you a gift card!&quot;</li>\\r\\n</ol>\\r\\n\",\n                \"termsAndConditionsInstructions\": \"\"\n            },\n            \"shortDescription\": \"<p>Amazon.co.uk Gift Cards* can be redeemed towards millions of items at <a href=\\\"http://www.amazon.co.uk\\\">www.amazon.co.uk</a>.</p>\\r\\n\",\n            \"status\": \"active\",\n            \"terms\": \"<p>*<a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a>&nbsp;is not a sponsor of this promotion.&nbsp;<a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a>&nbsp;Gift Cards (&quot;GCs&quot;) may be redeemed on the&nbsp;<a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a>&nbsp;website towards the purchase of eligible products available on&nbsp;<a href=\\\"http://www.amazon.co.uk/\\\">www.amazon.co.uk</a>. GCs cannot be reloaded, resold, transferred for value, redeemed for cash or applied to any other account.&nbsp;<a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a>&nbsp;is not responsible if a GC is lost, stolen, destroyed or used without permission. See&nbsp;<a href=\\\"http://www.amazon.co.uk/gc-legal\\\">www.amazon.co.uk/gc-legal</a>for complete terms and conditions. GCs are issued by Amazon EU S.&agrave; r.l. All Amazon &reg;, &trade; &amp; &copy; are IP of&nbsp;<a href=\\\"http://amazon.com/\\\">Amazon.com</a>, Inc. or its affiliates.</p>\\r\\n\"\n        },\n        \"countries\": [\n            \"GB\",\n            \"IE\"\n        ],\n        \"createdDate\": \"2016-08-26T00:38:00.445Z\",\n        \"credentialTypes\": [\n            \"cardNumber\",\n            \"expirationDate\"\n        ],\n        \"currencyCode\": \"GBP\",\n        \"exchangeRateRule\": \"\",\n        \"isWholeAmountValueRequired\": false,\n        \"lastUpdateDate\": \"2018-03-22T00:19:38.988Z\",\n        \"provider\": {\n            \"id\": \"TANGOCARD\",\n            \"name\": \"Tango Card\"\n        },\n        \"providerRewardId\": \"U139281\",\n        \"redemptionInstructions\": \"<p>|&nbsp;&nbsp;<a href=\\\"https://www.amazon.co.uk/gp/css/gc/payment/view-gc-balance?claimCode=\\\">Apply to Account</a>&nbsp; |&nbsp;&nbsp;<a href=\\\"http://www.amazon.co.uk/gc-redeem\\\">How to Use</a>&nbsp; |</p>\\r\\n\\r\\n<p>To redeem your gift card, follow these steps:</p>\\r\\n\\r\\n<ol>\\r\\n\\t<li>Visit <a href=\\\"http://www.amazon.co.uk/redeem\\\">www.amazon.co.uk/redeem</a></li>\\r\\n\\t<li>Enter the claim code when prompted.</li>\\r\\n</ol>\\r\\n\\r\\n<p>Your gift card claim code may also be entered when prompted during the checkout process but you will not be able to redeem your gift card using the <a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a> 1-Click&reg; service or downloadable e-books unless you first redeem the gift card through Your Account.</p>\\r\\n\\r\\n<p>If you have questions about redeeming your gift card, please visit <a href=\\\"http://www.amazon.co.uk/gc-redeem\\\">www.amazon.co.uk/gc-redeem</a>.&nbsp;</p>\\r\\n\",\n        \"rewardId\": \"ffdae9c9-1bfd-55d3-f6cc-9b1de1874241\",\n        \"rewardName\": \"Amazon.co.uk Gift Card\",\n        \"rewardType\": \"gift card\",\n        \"status\": \"active\",\n        \"tags\": [\n            \"\"\n        ],\n        \"value\": {\n            \"greaterThan\": null,\n            \"greaterThanOrEqualTo\": 0.01,\n            \"lessThan\": null,\n            \"lessThanOrEqualTo\": 1000\n        },\n        \"valueType\": \"VARIABLE_VALUE\",\n        \"maxValue\": 1000,\n        \"minValue\": 0.01\n    }\n]"
                }
              ]
            },
            {
              "name": "Search Catalog",
              "_postman_id": "f15191e6-1145-489d-9b53-ed214edd84eb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{managementApiUrl}}/v1/catalog?appId={{appId}}&brandName={{brandName}}&country={{country}}&currencies={{currency}}&amount={{amount}}",
                  "host": [
                    "{{managementApiUrl}}"
                  ],
                  "path": [
                    "v1",
                    "catalog"
                  ],
                  "query": [
                    {
                      "key": "appId",
                      "value": "{{appId}}"
                    },
                    {
                      "key": "brandName",
                      "value": "{{brandName}}",
                      "description": "The brand name to search for."
                    },
                    {
                      "key": "country",
                      "value": "{{country}}"
                    },
                    {
                      "key": "currencies",
                      "value": "{{currency}}",
                      "description": "A comma seperated string of the currencies to search for."
                    },
                    {
                      "key": "amount",
                      "value": "{{amount}}",
                      "description": "Filter the rewards that support the specified amount. ie 5, 10, 20 etc. Leave empty to search for all."
                    }
                  ]
                },
                "description": "#### Description\n\nSearches the catalog for rewards that match the given parameters\n\n#### Role required\n\n`t.cat.r`"
              },
              "response": [
                {
                  "id": "7bc3759e-7e4a-4b7b-a10e-24e9984fb859",
                  "name": "Successful request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{managementApiUrl}}/v1/catalog?appId=TANGOCARD&brandName=Amazon&country=UK&currency=GBP&amount=10",
                      "host": [
                        "{{managementApiUrl}}"
                      ],
                      "path": [
                        "v1",
                        "catalog"
                      ],
                      "query": [
                        {
                          "key": "appId",
                          "value": "TANGOCARD"
                        },
                        {
                          "key": "brandName",
                          "value": "Amazon"
                        },
                        {
                          "key": "country",
                          "value": "UK"
                        },
                        {
                          "key": "currency",
                          "value": "GBP"
                        },
                        {
                          "key": "amount",
                          "value": "10"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "content-type",
                      "value": "application/json; charset=utf-8a",
                      "description": "",
                      "type": "text"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"brand\": {\n            \"brandKey\": \"B644898\",\n            \"brandName\": \"Amazon.co.uk\",\n            \"createdDate\": \"2016-07-12T23:53:33Z\",\n            \"description\": \"<p>Amazon.co.uk Gift Cards* can be redeemed towards millions of items at www.amazon.co.uk. Amazon.co.uk&#39;s huge selection includes products in Books, Electronics, Music, MP3 Downloads, Film &amp; TV, Clothing, Video Games, Software, Sports &amp; Outdoors, Toys, Baby, Computers &amp; Office, Home &amp; Garden, Jewellery, Beauty, DIY &amp; Home Improvement, Office Products, Camera &amp; Photo, Pet Supplies, and more. Amazon.co.uk is the place to find and discover almost anything you want to buy online at a great price.</p>\\r\\n\",\n            \"disclaimer\": \"<p>*Restrictions apply. For complete terms and conditions, visit:&nbsp;<a href=\\\"http://www.amazon.co.uk/gc-legal\\\">www.amazon.co.uk/gc-legal</a>.</p>\\r\\n\",\n            \"imageUrls\": [\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-80w-326ppi.png\",\n                    \"width\": 80\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-130w-326ppi.png\",\n                    \"width\": 130\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-200w-326ppi.png\",\n                    \"width\": 200\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-278w-326ppi.png\",\n                    \"width\": 278\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-300w-326ppi.png\",\n                    \"width\": 300\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"https://dwwvg90koz96l.cloudfront.net/images/brands/b314742-1200w-326ppi.png\",\n                    \"width\": 1200\n                }\n            ],\n            \"lastUpdateDate\": \"2017-12-28T19:11:48Z\",\n            \"requirements\": {\n                \"alwaysShowDisclaimer\": false,\n                \"disclaimerInstructions\": \"\",\n                \"displayInstructions\": \"<ol>\\r\\n\\t<li><strong>Guidelines for use of the logo:&nbsp;</strong>&nbsp;The logos and graphics can not be changed in any way and must be used according to the&nbsp;usage&nbsp;guidelines available at&nbsp;<a href=\\\"https://www.amazon.co.uk/b?node=14235247031\\\">https://www.amazon.co.uk/b?node=14235247031</a>.&nbsp;&nbsp;Download our logos from the &quot;Additional Resources&quot; section.&nbsp; Please only use the logos provided on this page.</li>\\r\\n\\t<li><strong>Use the correct product name:</strong>&nbsp; &quot;Amazon.co.uk Gift Card&quot; is our name.&nbsp; Our three-word product name is always capitalized and should not be broken up.&nbsp; It is not a gift certificate or e-gift card. If you are describing the gift card value display the pound amount first &ldquo;&pound;XX&nbsp;<a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a>&nbsp;Gift Card&rdquo;.</li>\\r\\n\\t<li><strong>Display the disclaimer:&nbsp;</strong>&nbsp;When using our logo or product name, please always display the following disclaimer: &quot;*Restrictions apply. For complete terms and conditions, visit:&nbsp;<a href=\\\"https://www.amazon.de/gp/help/customer/display.html/ref=s9_acss_bw_cg_GCBCDTM_md1_w?nodeId=505028&amp;pf_rd_m=A3JWKAKR8XB7XF&amp;pf_rd_s=merchandised-search-1&amp;pf_rd_r=PYRMZX6Z9K41WE13H40E&amp;pf_rd_t=101&amp;pf_rd_p=bc3e74fb-34f0-4efb-b327-851efc3bddc4&amp;pf_rd_i=14235495031\\\">amazon.com/gc-legal</a>.&quot;</li>\\r\\n\\t<li><strong>Amazon is not a sponsor:</strong>&nbsp;&nbsp;Your use of the Amazon brand should not imply partnership or sponsorship.&nbsp; You agree not to misrepresent the relationship between Amazon and your business.</li>\\r\\n\\t<li><strong>Nothing is &quot;free&quot;:&nbsp;&nbsp;</strong>No statements can refer to the vouchers for free, free or for free as these terms have strong implications for customers.</li>\\r\\n\\t<li><strong>Subject Line:</strong>&nbsp; If you deliver the Amazon.co.uk Gift Card by email, the&nbsp;Subject Line cannot&nbsp;imply that Amazon has sent the gift card.&nbsp; An example of a&nbsp;GOOD&nbsp;Subject Line is: &quot;MyCompany sent you an Amazon.co.uk Gift Card!&quot;&nbsp; An example of a&nbsp;BAD Subject Line is:&nbsp; &quot;Amazon.co.uk sent you a gift card!&quot;</li>\\r\\n</ol>\\r\\n\",\n                \"termsAndConditionsInstructions\": \"\"\n            },\n            \"shortDescription\": \"<p>Amazon.co.uk Gift Cards* can be redeemed towards millions of items at <a href=\\\"http://www.amazon.co.uk\\\">www.amazon.co.uk</a>.</p>\\r\\n\",\n            \"status\": \"active\",\n            \"terms\": \"<p>*<a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a>&nbsp;is not a sponsor of this promotion.&nbsp;<a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a>&nbsp;Gift Cards (&quot;GCs&quot;) may be redeemed on the&nbsp;<a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a>&nbsp;website towards the purchase of eligible products available on&nbsp;<a href=\\\"http://www.amazon.co.uk/\\\">www.amazon.co.uk</a>. GCs cannot be reloaded, resold, transferred for value, redeemed for cash or applied to any other account.&nbsp;<a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a>&nbsp;is not responsible if a GC is lost, stolen, destroyed or used without permission. See&nbsp;<a href=\\\"http://www.amazon.co.uk/gc-legal\\\">www.amazon.co.uk/gc-legal</a>for complete terms and conditions. GCs are issued by Amazon EU S.&agrave; r.l. All Amazon &reg;, &trade; &amp; &copy; are IP of&nbsp;<a href=\\\"http://amazon.com/\\\">Amazon.com</a>, Inc. or its affiliates.</p>\\r\\n\"\n        },\n        \"countries\": [\n            \"GB\",\n            \"IE\"\n        ],\n        \"createdDate\": \"2016-08-26T00:38:00.445Z\",\n        \"credentialTypes\": [\n            \"cardNumber\",\n            \"expirationDate\"\n        ],\n        \"currencyCode\": \"GBP\",\n        \"exchangeRateRule\": \"\",\n        \"isWholeAmountValueRequired\": false,\n        \"lastUpdateDate\": \"2018-03-22T00:19:38.988Z\",\n        \"provider\": {\n            \"id\": \"TANGOCARD\",\n            \"name\": \"Tango Card\"\n        },\n        \"providerRewardId\": \"U139281\",\n        \"redemptionInstructions\": \"<p>|&nbsp;&nbsp;<a href=\\\"https://www.amazon.co.uk/gp/css/gc/payment/view-gc-balance?claimCode=\\\">Apply to Account</a>&nbsp; |&nbsp;&nbsp;<a href=\\\"http://www.amazon.co.uk/gc-redeem\\\">How to Use</a>&nbsp; |</p>\\r\\n\\r\\n<p>To redeem your gift card, follow these steps:</p>\\r\\n\\r\\n<ol>\\r\\n\\t<li>Visit <a href=\\\"http://www.amazon.co.uk/redeem\\\">www.amazon.co.uk/redeem</a></li>\\r\\n\\t<li>Enter the claim code when prompted.</li>\\r\\n</ol>\\r\\n\\r\\n<p>Your gift card claim code may also be entered when prompted during the checkout process but you will not be able to redeem your gift card using the <a href=\\\"http://amazon.co.uk/\\\">Amazon.co.uk</a> 1-Click&reg; service or downloadable e-books unless you first redeem the gift card through Your Account.</p>\\r\\n\\r\\n<p>If you have questions about redeeming your gift card, please visit <a href=\\\"http://www.amazon.co.uk/gc-redeem\\\">www.amazon.co.uk/gc-redeem</a>.&nbsp;</p>\\r\\n\",\n        \"rewardId\": \"ffdae9c9-1bfd-55d3-f6cc-9b1de1874241\",\n        \"rewardName\": \"Amazon.co.uk Gift Card\",\n        \"rewardType\": \"gift card\",\n        \"status\": \"active\",\n        \"tags\": [\n            \"\"\n        ],\n        \"value\": {\n            \"greaterThan\": null,\n            \"greaterThanOrEqualTo\": 0.01,\n            \"lessThan\": null,\n            \"lessThanOrEqualTo\": 1000\n        },\n        \"valueType\": \"VARIABLE_VALUE\",\n        \"maxValue\": 1000,\n        \"minValue\": 0.01\n    }\n]"
                }
              ]
            }
          ],
          "_postman_id": "7fba9a88-e916-43b1-955e-dd2efb7645d6",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "89c4dfe8-1a09-47c5-b5e5-70ac9b0dfa64",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "8870720e-117d-424a-b05c-933b3c345864",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Reward Groups",
          "item": [
            {
              "name": "Add a Reward Group",
              "_postman_id": "b982e1d4-0b56-4df0-822f-370fb039bb8c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"name\": \"My Amazon Voucher Group\",\r\n  \"rewards\": [\r\n  \t{\r\n    \t\"rewardId\": \"dummy-amazon-reward-id\",\r\n    \t\"enabled\": true\r\n  \t}\r\n  ]\r\n}\r\n"
                },
                "url": "{{managementApiUrl}}/v1/reward-groups",
                "description": "#### Description \r\n\r\nCreate a Reward Group.\r\n\r\n#### Role required\r\n\r\n`t.cat.a`"
              },
              "response": [
                {
                  "id": "250dbe20-df49-4a2f-b650-498a640b6e20",
                  "name": "Add a Reward Group",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"name\": \"My Amazon Voucher Group\",\r\n  \"rewards\": [\r\n  \t{\r\n    \t\"rewardId\": \"dummy-amazon-reward-id\",\r\n    \t\"enabled\": true\r\n  \t}\r\n  ]\r\n}\r\n"
                    },
                    "url": "{{managementApiUrl}}/v1/reward-groups"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"rewardGroupId\": \"9dc777db-41e8-4d2d-a89a-ef384bd3202\",\n    \"name\": \"My Amazon Voucher Group\",\n    \"rewards\": [\n        {\n            \"rewardId\": \"dummy-amazon-reward-id\",\n            \"enabled\": true\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get all Reward Groups",
              "_postman_id": "b448dc89-b259-43f5-9fec-e44d6919de26",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/reward-groups",
                "description": "#### Description \r\n\r\nGet all Reward Groups.\r\n\r\n#### Role required\r\n\r\n`t.cat.r`"
              },
              "response": [
                {
                  "id": "00a7dfa1-0314-46ea-91fc-1fa02ee4b7ed",
                  "name": "Get all Reward Groups",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/reward-groups"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"rewardGroupId\": \"9dc777db-41e8-4d2d-a89a-ef384bd3202\",\n        \"name\": \"My Amazon Voucher Group\",\n        \"rewards\": [\n            {\n                \"rewardId\": \"dummy-amazon-reward-id\",\n                \"enabled\": true\n            }\n        ]\n    }\n]"
                }
              ]
            },
            {
              "name": "Get a Reward Group",
              "_postman_id": "c61ba6d2-f871-4d09-ad4a-f199b4abaae3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/reward-groups/{{reward-group-id}}",
                "description": "#### Description \r\n\r\nGet a Reward Group.\r\n\r\n#### Role required\r\n\r\n`t.cat.r`"
              },
              "response": [
                {
                  "id": "afd3cb1a-4dd8-431a-aa5e-2e6a76e12cfc",
                  "name": "Get a Reward Group",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/reward-groups/{{reward-group-id}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"rewardGroupId\": \"9dc777db-41e8-4d2d-a89a-ef384bd3202\",\n    \"name\": \"My Amazon Voucher Group\",\n    \"rewards\": [\n        {\n            \"rewardId\": \"dummy-amazon-reward-id\",\n            \"enabled\": true\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Update a Reward Group",
              "_postman_id": "bff914fd-039d-47b2-85c4-c227cb711a0f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"My Amazon Voucher Group\",\n    \"rewards\": [\n        {\n            \"rewardId\": \"dummy-amazon-reward-id\",\n            \"enabled\": true\n        }\n    ]\n}"
                },
                "url": "{{managementApiUrl}}/v1/reward-groups/{{reward-group-id}}",
                "description": "#### Description \r\n\r\nUpdate a Reward Group.\r\n\r\n#### Role required\r\n\r\n`t.cat.a`"
              },
              "response": [
                {
                  "id": "56df0bbf-3d7a-49bc-9bcb-86c1e5cdfc06",
                  "name": "Update a Reward Group",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"My Amazon Voucher Group\",\n    \"rewards\": [\n        {\n            \"rewardId\": \"dummy-amazon-reward-id\",\n            \"enabled\": true\n        }\n    ]\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/reward-groups/{{reward-group-id}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"rewardGroupId\": \"9dc777db-41e8-4d2d-a89a-ef384bd3202\",\n    \"name\": \"My Amazon Voucher Group\",\n    \"rewards\": [\n        {\n            \"rewardId\": \"dummy-amazon-reward-id\",\n            \"enabled\": true\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Delete a Reward Group",
              "_postman_id": "2eb2febf-29b0-4ce8-ba8a-d2f8ebbf92f7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/reward-groups/{{reward-group-id}}",
                "description": "#### Description \r\n\r\nDelete a Reward Group.\r\n\r\n#### Role required\r\n\r\n`t.cat.a`"
              },
              "response": [
                {
                  "id": "f5d8124f-810f-4f09-9c4a-35fdb32ecb1e",
                  "name": "Delete a Reward Group",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/reward-groups/{{reward-group-id}}"
                  },
                  "_postman_previewlanguage": null,
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": null
                }
              ]
            }
          ],
          "_postman_id": "f88d2826-5b6c-4319-88fa-2769483b15ba",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c5ef8f11-4101-4d3d-9a69-811a261e0cb7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "20827dcf-380e-4a13-afb3-b9247b9a3882",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": " Collect Schemes",
          "item": [
            {
              "name": "Create a Scheme",
              "_postman_id": "dad3826c-9222-4228-baf5-681bb457279a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Motor Insurance Scheme - EUROPE\",\n    \"code\": \"MI-EUR\",\n    \"rules\": [\n        {\n            \"currencies\": [\n                \"EUR\"\n            ],\n            \"countries\": [\n                \"\"\n            ],\n            \"highValueInclusive\": 1000,\n            \"lowValueInclusive\": 1,\n            \"apps\": [\n                {\n                    \"appId\": \"BRAINTREE_SDK\",\n                    \"excludedPaymentMethods\": [ \"AMEX\" ]\n                }\n            ]\n        }\n    ]\n}"
                },
                "url": "{{managementApiUrl}}/v1/schemes/collect",
                "description": "#### Description \n\nCreate a Collect Scheme.\n\n#### Role required\n\n`t.sch.a`"
              },
              "response": [
                {
                  "id": "1ac6eb31-22f4-423a-b14b-872d8cb80494",
                  "name": "Create a Scheme",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Motor Insurance Scheme - EUROPE\",\n    \"code\": \"MI-EUR\",\n    \"rules\": [\n        {\n            \"currencies\": [\n                \"EUR\"\n            ],\n            \"countries\": [\n                \"\"\n            ],\n            \"highValueInclusive\": 1000,\n            \"lowValueInclusive\": 1,\n            \"apps\": [\n                {\n                    \"appId\": \"BRAINTREE_SDK\",\n                    \"excludedPaymentMethods\": [ \"AMEX\" ]\n                }\n            ]\n        }\n    ]\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/schemes/collect"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"schemeId\": \"9f5154c4-d683-4de2-b71c-f4d6d8d90679\",\n    \"publishedDraftId\": null,\n    \"drafts\": [\n        {\n            \"draftId\": \"19a659fa-0768-4739-a374-ea05480aba7a\",\n            \"name\": \"Motor Insurance Scheme - EUROPE\",\n            \"code\": \"MI-EUR\",\n            \"rules\": [\n                {\n                    \"currencies\": [\n                        \"EUR\"\n                    ],\n                    \"countries\": [\n                        \"\"\n                    ],\n                    \"highValueInclusive\": 1000,\n                    \"lowValueInclusive\": 1,\n                    \"apps\": [\n                        {\n                            \"appId\": \"BRAINTREE_SDK\",\n                            \"excludedPaymentMethods\": [\n                                \"AMEX\"\n                            ],\n                            \"availablePaymentMethods\": [ \"VISA\", \"MASTERCARD\", \"AMEX\", \"MAESTRO\", \"DISCOVER\" ]\n                        }\n                    ]\n                }\n            ],\n            \"lastModified\": \"2019-06-03T08:48:35.3927629Z\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get a Scheme",
              "_postman_id": "146cdf94-47de-4e7e-9739-61514805709c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}",
                "description": "#### Description \n\nGet a Collect Scheme.\n\n#### Role required\n\n`t.sch.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nscheme-id | The id of the Collect Scheme to get."
              },
              "response": [
                {
                  "id": "ecdd38bc-9000-405e-8503-c0f6139585bf",
                  "name": "Get a Scheme",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"schemeId\": \"9f5154c4-d683-4de2-b71c-f4d6d8d90679\",\n    \"publishedDraftId\": null,\n    \"drafts\": [\n        {\n            \"draftId\": \"19a659fa-0768-4739-a374-ea05480aba7a\",\n            \"name\": \"Motor Insurance Scheme - EUROPE\",\n            \"code\": \"MI-EUR\",\n            \"rules\": [\n                {\n                    \"currencies\": [\n                        \"EUR\"\n                    ],\n                    \"countries\": [\n                        \"\"\n                    ],\n                    \"highValueInclusive\": 1000,\n                    \"lowValueInclusive\": 1,\n                    \"apps\": [\n                        {\n                            \"appId\": \"BRAINTREE_SDK\",\n                            \"excludedPaymentMethods\": [\n                                \"AMEX\"\n                            ],\n                            \"availablePaymentMethods\": [ \"VISA\", \"MASTERCARD\", \"AMEX\", \"MAESTRO\", \"DISCOVER\" ]\n                        }\n                    ]\n                }\n            ],\n            \"lastModified\": \"2019-06-03T08:48:35.3927629Z\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get all Schemes",
              "_postman_id": "1b6e3f4f-569a-43e2-bd13-258e4f57effb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/schemes/collect",
                "description": "#### Description \n\nGet all Collect Schemes.\n\n#### Role required\n\n`t.sch.r`"
              },
              "response": [
                {
                  "id": "6468e140-cd9d-4f2f-b3ef-1b37f06e6f49",
                  "name": "Get all Schemes",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/schemes/collect"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"schemeId\": \"9f5154c4-d683-4de2-b71c-f4d6d8d90679\",\n        \"publishedDraftId\": null,\n        \"drafts\": [\n            {\n                \"draftId\": \"19a659fa-0768-4739-a374-ea05480aba7a\",\n                \"name\": \"Motor Insurance Scheme - EUROPE\",\n                \"code\": \"MI-EUR\",\n                \"rules\": [\n                    {\n                        \"currencies\": [\n                            \"EUR\"\n                        ],\n                        \"countries\": [\n                            \"\"\n                        ],\n                        \"highValueInclusive\": 1000,\n                        \"lowValueInclusive\": 1,\n                        \"apps\": [\n                            {\n                                \"appId\": \"BRAINTREE_SDK\",\n                                \"excludedPaymentMethods\": [\n                                    \"AMEX\"\n                                ],\n                                \"availablePaymentMethods\": [\n                                    \"VISA\",\n                                    \"MASTERCARD\",\n                                    \"AMEX\",\n                                    \"MAESTRO\",\n                                    \"DISCOVER\"\n                                ]\n                            }\n                        ]\n                    }\n                ],\n                \"lastModified\": \"2019-06-03T08:48:35.3927629Z\"\n            }\n        ]\n    }\n]"
                }
              ]
            },
            {
              "name": "Create a Draft",
              "_postman_id": "0b58110b-7c73-498f-8b71-539b0b77a4d4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"draftId\": \"19a659fa-0768-4739-a374-ea05480aba7a\",\n    \"name\": \"Motor Insurance Scheme - EUROPE\",\n    \"code\": \"MI-EUR\",\n    \"rules\": [\n        {\n            \"currencies\": [\n                \"EUR\"\n            ],\n            \"countries\": [\n                \"\"\n            ],\n            \"highValueInclusive\": 1000,\n            \"lowValueInclusive\": 1,\n            \"apps\": [\n                {\n                    \"appId\": \"BRAINTREE_SDK\",\n                    \"excludedPaymentMethods\": [\n                        \"AMEX\"\n                    ]\n                }\n            ]\n        }\n    ]\n}"
                },
                "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}/draft",
                "description": "#### Description \n\nCreate a new Draft for a Collect Scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nscheme-id | The id of the Collect Scheme to create the Draft for."
              },
              "response": [
                {
                  "id": "de4699d6-c15a-4951-888f-c4a658973fc5",
                  "name": "Create a Draft",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"Motor Insurance Scheme - EUROPE\",\n    \"code\": \"MI-EUR\",\n    \"rules\": [\n        {\n            \"currencies\": [\n                \"EUR\"\n            ],\n            \"countries\": [\n                \"\"\n            ],\n            \"highValueInclusive\": 1000,\n            \"lowValueInclusive\": 1,\n            \"apps\": [\n                {\n                    \"appId\": \"BRAINTREE_SDK\",\n                    \"excludedPaymentMethods\": [\n                        \"AMEX\"\n                    ]\n                }\n            ]\n        }\n    ]\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}/draft"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"schemeId\": \"9f5154c4-d683-4de2-b71c-f4d6d8d90679\",\n    \"publishedDraftId\": null,\n    \"drafts\": [\n        {\n            \"draftId\": \"19a659fa-0768-4739-a374-ea05480aba7a\",\n            \"name\": \"Motor Insurance Scheme - EUROPE\",\n            \"code\": \"MI-EUR\",\n            \"rules\": [\n                {\n                    \"currencies\": [\n                        \"EUR\"\n                    ],\n                    \"countries\": [\n                        \"\"\n                    ],\n                    \"highValueInclusive\": 1000,\n                    \"lowValueInclusive\": 1,\n                    \"apps\": [\n                        {\n                            \"appId\": \"BRAINTREE_SDK\",\n                            \"excludedPaymentMethods\": [\n                                \"AMEX\"\n                            ],\n                            \"availablePaymentMethods\": [ \"VISA\", \"MASTERCARD\", \"AMEX\", \"MAESTRO\", \"DISCOVER\" ]\n                        }\n                    ]\n                }\n            ],\n            \"lastModified\": \"2019-06-03T08:48:35.3927629Z\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get a Draft",
              "_postman_id": "24b85fd4-9227-47f8-835f-eaba0f5c7ea0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}/draft/{{draft-id}}",
                "description": "#### Description \n\nGet a Draft for a Collect Scheme.\n\n#### Role required\n\n`t.sch.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nscheme-id | The id of the Collect Scheme that owns the Draft.\ndraft-id | The id of the Draft to get."
              },
              "response": [
                {
                  "id": "1965e95b-d587-4c41-bda3-d41852f01b2c",
                  "name": "Get a Draft",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}/draft/{{draft-id}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"draftId\": \"19a659fa-0768-4739-a374-ea05480aba7a\",\n    \"name\": \"Motor Insurance Scheme - EUROPE\",\n    \"code\": \"MI-EUR\",\n    \"rules\": [\n        {\n            \"currencies\": [\n                \"EUR\"\n            ],\n            \"countries\": [\n                \"\"\n            ],\n            \"highValueInclusive\": 1000,\n            \"lowValueInclusive\": 1,\n            \"apps\": [\n                {\n                    \"appId\": \"BRAINTREE_SDK\",\n                    \"excludedPaymentMethods\": [\n                        \"AMEX\"\n                    ],\n                    \"availablePaymentMethods\": [\n                        \"VISA\",\n                        \"MASTERCARD\",\n                        \"AMEX\",\n                        \"MAESTRO\",\n                        \"DISCOVER\"\n                    ]\n                }\n            ]\n        }\n    ],\n    \"lastModified\": \"2019-06-03T08:48:35.3927629Z\"\n}"
                }
              ]
            },
            {
              "name": "Publish a Draft",
              "_postman_id": "8d3c0bcb-feb5-4c37-ab7e-96082fed40e7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}/draft/{{draft-id}}/publish",
                "description": "#### Description \n\nPublish a Draft for a Collect Scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nscheme-id | The id of the Collect Scheme.\ndraft-id | The id of the Draft to publish."
              },
              "response": [
                {
                  "id": "ab210ed3-ccf6-4e90-ac27-8f2ca886adee",
                  "name": "Publish a Draft",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}/draft/{{draft-id}}/publish"
                  },
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"schemeId\": \"9f5154c4-d683-4de2-b71c-f4d6d8d90679\",\n    \"publishedDraftId\": \"19a659fa-0768-4739-a374-ea05480aba7a\",\n    \"drafts\": [\n        {\n            \"draftId\": \"19a659fa-0768-4739-a374-ea05480aba7a\",\n            \"name\": \"Motor Insurance Scheme - EUROPE\",\n            \"code\": \"MI-EUR\",\n            \"rules\": [\n                {\n                    \"currencies\": [\n                        \"EUR\"\n                    ],\n                    \"countries\": [\n                        \"\"\n                    ],\n                    \"highValueInclusive\": 1000,\n                    \"lowValueInclusive\": 1,\n                    \"apps\": [\n                        {\n                            \"appId\": \"BRAINTREE_SDK\",\n                            \"excludedPaymentMethods\": [\n                                \"AMEX\"\n                            ],\n                            \"availablePaymentMethods\": [ \"VISA\", \"MASTERCARD\", \"AMEX\", \"MAESTRO\", \"DISCOVER\" ]\n                        }\n                    ]\n                }\n            ],\n            \"lastModified\": \"2019-06-03T08:48:35.3927629Z\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get the Published Draft",
              "_postman_id": "0fa5c054-21f1-4bfc-97cc-05416c6be174",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}/published",
                "description": "#### Description \n\nGet a Published Draft for a given Collect Scheme.\n\n#### Role required\n\n`t.sch.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nscheme-id | The id of the Collect Sheme to get."
              },
              "response": [
                {
                  "id": "e520088a-101a-44c5-84ac-ed3cf8a8a858",
                  "name": "Get the Published Draft",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}/published"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"draftId\": \"19a659fa-0768-4739-a374-ea05480aba7a\",\n    \"name\": \"Motor Insurance Scheme - EUROPE\",\n    \"code\": \"MI-EUR\",\n    \"rules\": [\n        {\n            \"currencies\": [\n                \"EUR\"\n            ],\n            \"countries\": [\n                \"\"\n            ],\n            \"highValueInclusive\": 1000,\n            \"lowValueInclusive\": 1,\n            \"apps\": [\n                {\n                    \"appId\": \"BRAINTREE_SDK\",\n                    \"excludedPaymentMethods\": [\n                        \"AMEX\"\n                    ],\n                    \"availablePaymentMethods\": [\n                        \"VISA\",\n                        \"MASTERCARD\",\n                        \"AMEX\",\n                        \"MAESTRO\",\n                        \"DISCOVER\"\n                    ]\n                }\n            ]\n        }\n    ],\n    \"lastModified\": \"2019-06-03T08:48:35.3927629Z\"\n}"
                }
              ]
            },
            {
              "name": "Delete Scheme",
              "_postman_id": "9d884804-266f-49a0-9222-c5c42185b77f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{management-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}",
                "description": "#### Description \n\nDelete a Collect Scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nscheme-id | The id of the Collect Scheme to delete."
              },
              "response": [
                {
                  "id": "58bf490e-4ce6-4703-b7ff-c5292591105b",
                  "name": "Delete Scheme",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/schemes/collect/{{scheme-id}}"
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": null,
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": null
                }
              ]
            }
          ],
          "_postman_id": "196bd856-0caa-4bbb-8f64-814d3bd0d885",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a05c537b-b783-4a52-ae62-0e084997e581",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "263115c0-6dde-4bc9-8bb8-908a534f909d",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Payout Schemes",
          "item": [],
          "_postman_id": "7a248b7a-0b3d-4f2e-8b64-a432866b202e",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "1aa9e687-1a57-47c4-889c-1548fd995a00",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "f2d1e9c1-cc35-46d9-a79e-e9fd9b945d07",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Notifications",
          "item": [
            {
              "name": "Create a Webhook",
              "_postman_id": "541b4c1b-866c-4864-a37b-11448d9f9e9b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"eventTypes\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
                },
                "url": "{{managementApiUrl}}/v1/notifications/webhooks",
                "description": "#### Description\r\n\r\nCreates a Webhook.\r\n\r\n#### Role required\r\n\r\n`t.whk.a`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n- | - | -\r\neventType | Yes | The event type that the webhook will be subscribing to.\r\nurl | Yes | The url of the webhook.\r\nisEnabled | Yes | Sets if the webhook is enabled or not."
              },
              "response": [
                {
                  "id": "3a93b10d-e231-4ee8-bed1-4d4913511d82",
                  "name": "Succesful Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"eventTypes\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/notifications/webhooks"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"\",\n    \"eventTypes\": \"\",\n    \"url\": \"\",\n    \"isEnabled\": true\n}"
                }
              ]
            },
            {
              "name": "Get a Webhook",
              "_postman_id": "a5ea5c32-7522-4c55-8d01-76724a2beb19",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{managementApiUrl}}/v1/notifications/webhooks/{{id}}",
                "description": "#### Description\r\n\r\nGets a Webhook.\r\n\r\n#### Role required\r\n\r\n`t.whk.r`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n- | -\r\nid | The id of the Webhook to retrieve."
              },
              "response": [
                {
                  "id": "71b47a9c-aeca-4b0c-a719-91569e2ebd3a",
                  "name": "Successful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/notifications/webhooks/{{id}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"\",\n    \"eventTypes\": \"\",\n    \"url\": \"\",\n    \"isEnabled\": true\n}\n"
                }
              ]
            },
            {
              "name": "Get list of Webhooks",
              "_postman_id": "fb876542-d4cc-4566-a836-c5e475450690",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{managementApiUrl}}/v1/notifications/webhooks",
                "description": "#### Description\r\n\r\nGets a list of Webhooks.\r\n\r\n#### Role required\r\n\r\n`t.whk.r`"
              },
              "response": [
                {
                  "id": "f7e896b5-ef3a-4bac-98c2-4e46539b1a3c",
                  "name": "Successful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/notifications/webhooks"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": \"\",\n        \"eventTypes\": \"\",\n        \"url\": \"\",\n        \"isEnabled\": true\n    }\n]"
                }
              ]
            },
            {
              "name": "Update a Webhook",
              "_postman_id": "385b7c96-3e5b-4151-bef1-024ed0f4b751",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"eventTypes\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": trues\n}"
                },
                "url": "{{managementApiUrl}}/v1/notifications/webhooks/{{id}}",
                "description": "#### Description\r\n\r\nUpdates a Webhook.\r\n\r\n#### Role required\r\n\r\n`t.whk.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n- | -\r\nid | The id of the Webhook to update.\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n- | - | -\r\neventType | Yes | The event type that the webhook will be subscribing to.\r\nurl | Yes | The url of the webhook.\r\nisEnabled | Yes | Sets if the webhook is enabled or not."
              },
              "response": [
                {
                  "id": "35e022e1-1429-41d4-9ed5-e7d43a98adaa",
                  "name": "Successful Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"eventType\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/notifications/webhooks/{{id}}"
                  },
                  "status": "Accepted",
                  "code": 202,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"\",\n    \"eventTypes\": \"\",\n    \"url\": \"\",\n    \"isEnabled\": true\n}"
                }
              ]
            },
            {
              "name": "Delete a Webhook",
              "_postman_id": "7006f3b7-5d94-4d6f-bf68-4c3f2532af16",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "url": "{{managementApiUrl}}/v1/notifications/webhooks/{{id}}",
                "description": "#### Description\r\n\r\nDeletes a Webhook.\r\n\r\n#### Role required\r\n\r\n`t.whk.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n- | -\r\nid | The id of the Webhook to delete."
              },
              "response": [
                {
                  "id": "100d6a2e-26fe-4a27-a65c-c5df1da14ef3",
                  "name": "Successful Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/notifications/webhooks/{{id}}"
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": null,
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": null
                }
              ]
            }
          ],
          "_postman_id": "2d3ce1f5-408c-461c-ab73-f2ffb2f3cf35",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "277d68da-ac25-49cc-8ab0-f5bff65f34c7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "40670cbf-5237-4526-a97a-fde0ab6ba1e1",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Transactions",
          "item": [
            {
              "name": "Create Order",
              "_postman_id": "f3887367-fe71-4821-94fe-cb56aeb275da",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"orderRef\": \"\",\r\n\t\"currency\": \"\",\r\n\t\"country\": \"\",\r\n\t\"scheme\": \"\"\r\n}"
                },
                "url": "{{managementApiUrl}}/v1/transaction/customer/{{customerRef}}/order",
                "description": "This is the first stage required to make a payment.\r\n\r\nAn order must be given both a unique `customerRef` and `orderRef`. Both of these values are created and owned by you, the API consumer. In both cases the reference fields can be used to query current status, view audit history, or to cancel, void, or reconcile payments.\r\n\r\n#### Request Body\r\n\r\nThe following parameters are sent in JSON format.\r\n\r\nParameter | Type | Description\r\n- | - | -\r\norderRef | string (50 char max) | A unique identifier used to group one or many payment instructions.\r\ncurrency | ISO3 | The currency to make the payment in.\r\ncountry | ISO2 | The country in which the customer resides to localize payment options.\r\nscheme | string | The identifier of the `Scheme` in which to use.\r\n\r\n#### Validation errors\r\n\r\nOne or many of the following errors may be returned if there were issues validating the request.\r\n\r\nCode | Description\r\n- | - \r\n`CUSTOMER_REF_IS_REQUIRED` | Reference is required.\r\n`CUSTOMER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`CUSTOMER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`ORDER_REF_IS_REQUIRED` | Reference is required.\r\n`ORDER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`ORDER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`CURRENCY_IS_REQUIRED` | Currency is required.\r\n`CURRENCY_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 3 characters.\r\n`COUNTRY_IS_REQUIRED` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`COUNTRY_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 2 characters.\r\n`SCHEME_IS_REQUIRED` | Scheme is required.\r\n`SCHEME_FORMAT_NOT_RECOGNISED` | Scheme was not recognised as a valid `GUID`."
              },
              "response": []
            },
            {
              "name": "Get Order",
              "_postman_id": "11aa4668-3658-4946-bacb-3eaa00c1bde3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/transaction/customer/{{customerRef}}/order/{{orderRef}}",
                "description": "The following endpoint will return the current state of an order.\n\nOrders must be created before they can be queried.\n\nThe order is identified by both a `customerRef` and an `orderRef`. Both of these values are provided from your own system to ours.\n\nAn `orderRef` needs to be unique to the customer but does not need to be globally unique."
              },
              "response": [
                {
                  "id": "62f1d234-8c81-4945-93ea-1a2fac1dd4a5",
                  "name": "Get Order",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{management-token}}"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/transaction/customer/{{customerRef}}/order/{{orderRef}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\n  \"customerRef\": \"\",\r\n  \"orderRef\": \"\",\r\n  \"status\": \"\",\r\n  \"detail\": {\r\n    \"currency\": \"\",\r\n    \"country\": \"\",\r\n    \"scheme\": \"\",\r\n    \"paymentMethodRef\": \"\"\r\n  },\r\n  \"instructions\": []\r\n}"
                }
              ]
            },
            {
              "name": "Get Order Audit History",
              "_postman_id": "9f47b869-1c03-460e-8455-e732f1746dca",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/transaction/customer/{{customerRef}}/order/{{orderRef}}/audit-history",
                "description": "The following endpoint will return an unstructured list of order events."
              },
              "response": []
            },
            {
              "name": "Get Customer",
              "_postman_id": "85fd3494-d41e-4f4a-b24c-7bb3937d4144",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/transaction/customer/{{customerRef}}",
                "description": "The following endpoint will return the current state of a customer.\n\nCustomers don't need to be created and as such an authorized API user can query non-existent customers.\n\nThe customer is identified by a `customerRef` - A value provided from your own system to ours."
              },
              "response": []
            },
            {
              "name": "Get Customer Audit History",
              "_postman_id": "6e39f47b-0ec8-4e45-82e1-e7b2eed8d6b8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/transaction/customer/{{customerRef}}/audit-history",
                "description": "The following endpoint will return an unstructured list of customer events."
              },
              "response": []
            },
            {
              "name": "Create Instruction",
              "_postman_id": "cf8a2d98-f21b-4b81-8733-c33f5d1b3655",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"instructionRef\": \"\",\r\n\t\"amount\": \"\",\r\n\t\"openDate\": \"\",\r\n\t\"dueDate\": \"\"\r\n}"
                },
                "url": "{{managementApiUrl}}/v1/transaction/customer/{{customerRef}}/order/{{orderRef}}/instruction",
                "description": "An order requires one or many payment instructions to be set up. These instructions act as a payment schedule and contain the amount to be paid out, the open date and the due date of the payment. NOTE: Only one payment instruction is currently supported.\r\n\r\nAn instruction must be given a unique `instructionRef` (unique to the customer's order). This reference can be used in the future to look up or make amendments to an instruction.\r\n\r\nUn-like collection instructions, this instruction being created will be used later for either a reward or cash transaction.\r\n\r\n#### Request Body\r\n\r\nThe following parameters are sent in JSON format.\r\n\r\nParameter | Type | Description\r\n- | - | -\r\ninstructionRef | string (50 char max) | A unique identifier used to represent a single payment instruction.\r\namount | Decimal | The amount to pay out.\r\nopenDate | Date (YYYY-MM-DD) | The date in which a manual payment can be made from.\r\ndueDate | Date (YYYY-MM-DD) | The date in which a manual payment is to be settled by, or if automated will be taken on.\r\n\r\n#### Validation errors\r\n\r\nOne or many of the following errors may be returned if there were issues validating the request.\r\n\r\nCode | Description\r\n- | - \r\n`CUSTOMER_REF_IS_REQUIRED` | Reference is required.\r\n`CUSTOMER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`CUSTOMER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`ORDER_REF_IS_REQUIRED` | Reference is required.\r\n`ORDER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`ORDER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`INSTRUCTION_REF_IS_REQUIRED` | Reference is required.\r\n`INSTRUCTION_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`INSTRUCTION_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`AMOUNT_IS_REQUIRED` | Amount is required.\r\n`AMOUNT_FORMAT_NOT_RECOGNISED` | Amount must be in decimal form.\r\n`AMOUNT_OUT_OF_RANGE` | Amount must be greater than zero.\r\n`OPEN_DATE_IS_REQUIRED` | Open Date is required.\r\n`OPEN_DATE_FORMAT_NOT_RECOGNISED` | Due Date could not be read as a valid date.\r\n`DUE_DATE_IS_REQUIRED` | Due Date is required.\r\n`DUE_DATE_FORMAT_NOT_RECOGNISED` | Due Date could not be read as a valid date."
              },
              "response": []
            },
            {
              "name": "Get Instruction",
              "_postman_id": "dd7b93cd-37fc-4b4e-9f85-659f30f4d8a4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/transaction/customer/{{customerRef}}/order/{{orderRef}}/instruction/{{instructionRef}}",
                "description": "The following endpoint will return the current state of an instruction.\n\nInstructions must be created before they can be queried.\n\nThe instruction is identified by a `customerRef`, an `orderRef` and an `instructionRef`. These values are provided from your own system to ours.\n\nAn `instructionRef` needs to be unique to the order but does not need to be globally unique."
              },
              "response": []
            },
            {
              "name": "Get Instruction Audit History",
              "_postman_id": "bbed1b37-5a4c-47b6-a466-18b2fd33303a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/transaction/customer/{{customerRef}}/order/{{orderRef}}",
                "description": "The following endpoint will return an unstructured list of instruction events."
              },
              "response": []
            }
          ],
          "_postman_id": "36db645f-b09a-4ef1-9275-d6011cba3ae1",
          "description": "\r\n##### Request structure\r\n\r\nThe following endpoints to manage customers, with orders and payment instructions. While the style is RESTful in nature, the collect API is not a fully REST service.\r\n\r\nIn most cases entities have an `/audit-history` endpoint which can be used to diagnose changes or problems a customer may have settling a payment.\r\n\r\n##### Error Handling\r\n\r\nValidation errors will return a common `400 Bad Request` HTTP status code with a response body in a common format.\r\n\r\nProperty | Type | Description\r\n- | - | -\r\n`errors` | Array[string] | One or many standardized error codes representing the failure.\r\n\r\n",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7737b2e2-4b03-4a69-be26-4a37d2c57250",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b217333c-bf6a-427c-a1fd-da42c032f13f",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Miscellaneous",
          "item": [
            {
              "name": "Get list of Countries",
              "_postman_id": "aab14497-2a50-4982-b565-b25b8dc076a1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/countries"
              },
              "response": [
                {
                  "id": "798a54de-947d-46ba-b6e8-460f6ba739fe",
                  "name": "Get list of Countries",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/countries"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n\t{\n\t\t\"id\": \"GB\",\n\t\t\"code\": \"GB\",\n\t\t\"name\": \"United Kingdom\",\n\t\t\"currency\": \"GBP\"\n\t}\n]"
                }
              ]
            },
            {
              "name": "Get list of Currencies",
              "_postman_id": "62b3df4f-d02e-47b7-a992-599a81c4a86d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{management-token}}"
                  }
                ],
                "url": "{{managementApiUrl}}/v1/currencies"
              },
              "response": [
                {
                  "id": "8c078558-c697-495b-a5c1-1a50f837f056",
                  "name": "Get list of Currencies",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{management-token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{managementApiUrl}}/v1/currencies"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n\t{\n\t\t\"id\": \"GBP\",\n\t\t\"code\": \"GBP\",\n\t\t\"name\": \"Pound Sterling\",\n\t\t\"symbol\": \"\u00a3\"\n\t}\n]"
                }
              ]
            }
          ],
          "_postman_id": "b1eb646e-6cf6-4f8b-b395-5083dd6c1490",
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "6ccbe271-e09d-4ed2-9599-7a0531e9e57f",
      "auth": {
        "type": "bearer",
        "bearer": {
          "token": "{{management-token}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "7535bfe1-dcea-4273-a52c-a8f068206cd3",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "5d9d07db-9d10-4383-989e-f317a8666172",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Transactions API Reference",
      "item": [
        {
          "name": "Get Payout Options",
          "_postman_id": "f346e216-428b-4d94-a054-a3a3b5f342ab",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{payout-token}}",
                "type": "text"
              }
            ],
            "url": "{{transactionsApiUrl}}/v1/reward/options",
            "description": "Gets the payout options.\n\n\n## Response object\n\nName | Type | Description\n-|-|-\nrewards | [Reward](#the-reward-object) object array | An array of reward objects\n\n\n## The Reward object\nName | Type | Description\n-|-|-\nbrand | [Brand](#the-brand-object) object | The brand object\ncountries | string array | An array of country codes this reward is setup for\ncreatedDate | date time | Date created\ncredentialTypes | - |\ncurrencyCode | string | The currency code of this reward\nexchangeRateRule | - | \nisWholeAmountValueRequired | bool |\nlastUpdateDate | date time | Date updated\nprovider | [Reward Provider](#the-reward-provider-object) object | The reward provider for this reward. For example, Tangocard\nredemptionInstructions | string | Redemtion instructions\nrewardId | guid | The unique reward id\nrewardName | string | The name of the reward\nrewardType | - | - \nstatus | - | - \ntags | string | Not currently used\nvalue | [Reward Value](#the-reward-value-object) | The value of the reward\nvalueType | - | - \n\n\n## The Brand object\nName | Type | Description\n-|-|-\nbrandKey | string | The brand key\nbrandName | string | The brand name\ncreatedDate | date time | Date created\ndescription | string | Brand description\ndisclaimer | string | Brand disclaimer\nimageUrls | [Image Url](#the-image-url-object) array | Brand Images in various sizes\nlastUpdateDate | date time | Date last updated\nrequirements | [Reward Requirements](#the-reward-requirements-object) | Brand requirements\nshortDescription | string | Brandh short description\nstatus | string | -\nterms | string | Brand terms and conditions\n\n\n## The Image Url object\nName | Type | Description\n-|-|-\nppi | int | The Pixels Per Inch of the image\nratioHeight | int | The height ratio factor\nratioWidth | int | The width ratio factor\nurl | string | The url for the image\nwidth | int | The pixel width of the image\n\n\n## The Reward Requirements object\nName | Type | Description\n-|-|-\nalwaysShowDisclaimer | bool | Should the disclaimer always be shown\ndisclaimerInstructions | string  The disclaimer instructions\ndisplayInstructions | bool | The instructions to display to the end user\ntermsAndConditionsInstructions | string | The terms and conditions instructions\n\n\n## The Reward Value object\nName | Type | Description\n-|-|-\ngreaterThan | int | - \ngreaterThanOrEqualTo | int | -\nlessThan | int | - \nlessThanOrEqualTo | int | -"
          },
          "response": [
            {
              "id": "816caa62-b875-41c8-9787-5454473ef6d7",
              "name": "Get Payout Options",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{payout-token}}",
                    "type": "text"
                  }
                ],
                "url": "{{transactionsApiUrl}}/v1/reward/options"
              },
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n\t\"rewards\": [\n\t    \"brand\": {\n\t        \"brandKey\": \"\",\n\t        \"brandName\": \"\",\n\t        \"createdDate\": \"\",\n\t        \"description\": \"\",\n\t        \"disclaimer\": \"\",\n\t        \"imageUrls\": [\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 80\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 130\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 200\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 278\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 300\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 1200\n\t            }\n\t        ],\n\t        \"lastUpdateDate\": \"\",\n\t        \"requirements\": {\n\t            \"alwaysShowDisclaimer\": false,\n\t            \"disclaimerInstructions\": \"\",\n\t            \"displayInstructions\": \"\",\n\t            \"termsAndConditionsInstructions\": \"\"\n\t        },\n\t        \"shortDescription\": \"\",\n\t        \"status\": \"\",\n\t        \"terms\": \"\"\n\t    },\n\t    \"countries\": [],\n\t    \"createdDate\": \"\",\n\t    \"credentialTypes\": [],\n\t    \"currencyCode\": \"\",\n\t    \"exchangeRateRule\": \"\",\n\t    \"isWholeAmountValueRequired\": false,\n\t    \"lastUpdateDate\": \"\",\n\t    \"provider\": {\n\t        \"id\": \"\",\n\t        \"name\": \"\"\n\t    },\n\t    \"redemptionInstructions\": \"\",\n\t    \"rewardId\": \"\",\n\t    \"rewardName\": \"\",\n\t    \"rewardType\": \"\",\n\t    \"status\": \"\",\n\t    \"tags\": [],\n\t    \"value\": {\n\t        \"greaterThan\": null,\n\t        \"greaterThanOrEqualTo\": 0,\n\t        \"lessThan\": null,\n\t        \"lessThanOrEqualTo\": 0\n\t    },\n\t    \"valueType\": \"\"\n\t]\n}"
            }
          ]
        },
        {
          "name": "Process Reward Payout",
          "_postman_id": "dc76a6ca-66a3-4d13-b316-0a687e16c931",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer  {{payout-token}}"
              }
            ],
            "url": "{{transactionsApiUrl}}/v1/transaction/reward/{{id}}",
            "description": "#### Description \n\nSubmit a payout instruction for processing.\n\n#### Params\n\nParameter | Description\n--------- | -----------\nid | The id of the reward to process\n\n\n#### Response object\n\nName | Type | Description\n-|-|-\nexternalOrderRef | string | \namountCharged | |\ndenomination | |\nrewardId | |\nrewardName | | \nstatus | |\ncreatedAt | |\nrewardDetails | |"
          },
          "response": [
            {
              "id": "d69c8c41-05f3-4ef4-a39a-cabe5e7c35b9",
              "name": "Process Reward Payout",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{payout-token}}"
                  }
                ],
                "url": "{{transactionsApiUrl}}/v1/transaction/reward/{{id}}"
              },
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n  \"credentials\": {\n    \"Expiration Date\": \"\",\n    \"Claim Code\": \"\"\n  },\n  \"credentialList\": [\n    {\n      \"label\": \"\",\n      \"value\": \"\",\n      \"rewardType\": null,\n      \"credentialType\": \"\"\n    },\n    {\n      \"label\": \"\",\n      \"value\": \"\",\n      \"rewardType\": null,\n      \"credentialType\": \"\"\n    }\n  ],\n  \"redemptionInstructions\": \"\"\n}"
            }
          ]
        }
      ],
      "_postman_id": "09f68806-2b90-433d-9f6d-684cfef1d890",
      "description": "Use this API for getting the payment options to present to your users and to process the payment instructions.",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "6b830cb6-c43e-457a-80f6-cf0878582b3c",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "4248736c-140b-42fe-b8cb-97c97ac87565",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "a7688ccc-61d4-4ff6-9e15-bbb7186f3915",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "38581210-06a1-4804-a74f-878b9511e8aa",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}