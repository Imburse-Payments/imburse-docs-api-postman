{
  "info": {
    "_postman_id": "ac65d3ee-04c9-47c8-9319-f7efca0d9cc5",
    "name": "Imburse API",
    "description": "Welcome to the Imburse API. You can use our APIs to access Imburse portal and Payment API endpoints.\r\n\r\n\r\n# Authentication\r\n\r\nTo authorize, use this code:\r\n\r\n```shell\r\n# With shell, you can just pass the correct header with each request\r\n$ curl \"api_endpoint_here\"\r\n  -H \"Authorization: Hmac {token}\"\r\n```\r\n\r\nImburse issues API keys to allow access to the API.\r\n\r\nWe issue both `Client API Tokens`, for accessing client functionality, and `Account API Tokens` for accessing the clients' parent account.\r\n\r\nYou can manage your API keys in the Imburse Portal dashboard or via the API.\r\n\r\nYour API tokens carry many privileges, so be sure to keep them secret! Do not share your API `private keys` in publicly accessible areas such as GitHub, client-side code, and so forth.\r\n\r\nAll API requests must be made over `HTTPS`. API requests without authentication will fail.\r\n\r\n## HMAC Authentication\r\n\r\nEach request made to Imburse API's uses HMAC credentials and, with the signature, provides identity verification and in-transit data integrity.\r\n\r\nTo generate a HMAC for your requests, please see our full step by step guide which can be found on our open source account under the [HMAC examples page](https://github.com/Imburse-Payments/hmac-examples)\r\n\r\nTo complete the process you will need the `publicKey` and `privateKey` from a Client or Account API Token.\r\n\r\nTo configurure the request header for HMAC, use `Authorization: Hmac {token}`.\r\n\r\n<aside class=\"notice\">\r\nYou must replace <code>{token}</code> with your HMAC authentication token key.\r\n</aside>\r\n\r\n\r\n\r\n# Access Control\r\n\r\nAll API functions require an API token to authenticate - see [Authentication](#authentication). \r\n\r\nAs part of the request when creating [Tenant API Keys](#3bbc7e0a-c7b7-4b45-9d21-270b9c0d826a), you can specify the `roles` available to the key. \r\n\r\nEach API operation documents the exact role required so you can taylor your keys to specific roles if required.\r\n\r\n#### Tenant Roles\r\n\r\nRole name | Description\r\n-|-\r\n`t.usr.r` | Read tenant users\r\n`t.usr.a` | Read and write tenant users\r\n`t.psp.r` | Read tenant payment providers\r\n`t.psp.a` | Read and write tenant payment providers\r\n`t.sch.r` | Read tenant schemes\r\n`t.sch.a` | Read and write tenant schemes\r\n`t.key.r` | Read tenant keys\r\n`t.key.a` | Read and write tenant keys\r\n`t.whk.r` | Read tenant webhooks\r\n`t.whk.a` | Read and write tenant webhooks\r\n`t.wlbl.r` | Read tenant whitelabel settings\r\n`t.wlbl.a` | Read and write tenant whitelabel settings\r\n`t.rew.r` | Read tenant reward providers\r\n`t.rew.a` | Read and write tenant reward providers\r\n`t.cat.r` | Read rewards catalog\r\n\r\n\r\n#### Account Roles\r\n\r\n`Account API Tokens` are created by Imburse and cannot be changed. \r\n\r\nThe `roles` assigned to these tokens are shown for reference only.\r\n\r\nRole name | Function\r\n-|-\r\n`acc.r` | Read account management\r\n`acc.a` | Read and write account management\r\n`acc.lic.r` | Read account licenses\r\n`acc.lic.a` | Read and write account licenses\r\n`acc.key.r` | Read account keys\r\n`acc.key.a` | Read and write account keys\r\n`acc.usr.r` | Read account users\r\n`acc.usr.a` | Read and write account users\r\n`acc.t.r` | Read account tenants\r\n`acc.t.a` | Read and write account tenants\r\n\r\n\r\n# Errors\r\n\r\nImburse uses conventional HTTP response codes to indicate the success or failure of an API request. In general, codes in the **2xx** range indicate success, codes in the **4xx** range indicate an error that failed given the information provided (e.g., a required parameter was omitted, etc.), and codes in the **5xx** range indicate an error with Imburse's servers,\r\n\r\n\r\nResponse Code | Meaning\r\n--------------| -------\r\n200 | **OK** - Everything worked as expected.\r\n400 | **Bad Request** - The request was unacceptable, often due to missing a required parameter.\r\n401 | **Unauthorized** - No valid API key provided.\r\n402 | **Request Failed** - The parameters were valid but the request failed.\r\n403 | **Forbidden** -- The requested endpoint is not valid for your user or role.\r\n404 | **Not Found** - The requested resource doesn't exist.\r\n409 | **Conflict** - The request conflicts with another request (perhaps due to using the same idempotent key).\r\n429 | **Too Many Requests**\t- Too many requests hit the API too quickly. We recommend an exponential backoff or your requests.\r\n500, 502, 503, 504 | **Internal Server Error** - Something went wrong on Imburse's end.\r\n\r\n\r\n\r\n# Countries\r\n\r\nAll API functions that reference a country will use the **ISO 3166-1 alpha-2** country code format. Use the list below to identify the country.\r\n\r\nAlpha 2 Code | Name\r\n-|-\r\nAF|Afghanistan\r\nAX|\u00c5land\r\nAL|Albania\r\nDZ|Algeria\r\nAS|American Samoa\r\nAD|Andorra\r\nAO|Angola\r\nAI|Anguilla\r\nAQ|Antarctica\r\nAG|Antigua and Barbuda\r\nAR|Argentina\r\nAM|Armenia\r\nAW|Aruba\r\nAU|Australia\r\nAT|Austria\r\nAZ|Azerbaijan\r\nBS|Bahamas\r\nBH|Bahrain\r\nBD|Bangladesh\r\nBB|Barbados\r\nBY|Belarus\r\nBE|Belgium\r\nBZ|Belize\r\nBJ|Benin\r\nBM|Bermuda\r\nBT|Bhutan\r\nBO|Bolivia\r\nBQ|Bonaire, Sint Eustatius and Saba\r\nBA|Bosnia and Herzegovina\r\nBW|Botswana\r\nBV|Bouvet Island\r\nBR|Brazil\r\nIO|British Indian Ocean Territory\r\nBN|Brunei Darussalam\r\nBG|Bulgaria\r\nBF|Burkina Faso\r\nBI|Burundi\r\nKH|Cambodia\r\nCM|Cameroon\r\nCA|Canada\r\nCV|Cape Verde\r\nKY|Cayman Islands\r\nCF|Central African Republic\r\nTD|Chad\r\nCL|Chile\r\nCN|China\r\nCX|Christmas Island\r\nCC|Cocos (Keeling) Islands\r\nCO|Colombia\r\nKM|Comoros\r\nCG|Congo (Brazzaville)\r\nCD|Congo (Kinshasa)\r\nCK|Cook Islands\r\nCR|Costa Rica\r\nCI|C\u00f4te d'Ivoire\r\nHR|Croatia\r\nCU|Cuba\r\nCW|Cura\u00e7ao\r\nCY|Cyprus\r\nCZ|Czech Republic\r\nDK|Denmark\r\nDJ|Djibouti\r\nDM|Dominica\r\nDO|Dominican Republic\r\nEC|Ecuador\r\nEG|Egypt\r\nSV|El Salvador\r\nGQ|Equatorial Guinea\r\nER|Eritrea\r\nEE|Estonia\r\nET|Ethiopia\r\nFK|Falkland Islands\r\nFO|Faroe Islands\r\nFJ|Fiji\r\nFI|Finland\r\nFR|France\r\nGF|French Guiana\r\nPF|French Polynesia\r\nTF|French Southern Territories\r\nGA|Gabon\r\nGM|Gambia\r\nGE|Georgia\r\nDE|Germany\r\nGH|Ghana\r\nGI|Gibraltar\r\nGR|Greece\r\nGL|Greenland\r\nGD|Grenada\r\nGP|Guadeloupe\r\nGU|Guam\r\nGT|Guatemala\r\nGG|Guernsey\r\nGN|Guinea\r\nGW|Guinea-Bissau\r\nGY|Guyana\r\nHT|Haiti\r\nHM|Heard Island and McDonald Islands\r\nHN|Honduras\r\nHK|Hong Kong\r\nHU|Hungary\r\nIS|Iceland\r\nIN|India\r\nID|Indonesia\r\nIR|Iran\r\nIQ|Iraq\r\nIE|Ireland\r\nIM|Isle of Man\r\nIL|Israel\r\nIT|Italy\r\nJM|Jamaica\r\nJP|Japan\r\nJE|Jersey\r\nJO|Jordan\r\nKZ|Kazakhstan\r\nKE|Kenya\r\nKI|Kiribati\r\nKP|Korea, North\r\nKR|Korea, South\r\nKW|Kuwait\r\nKG|Kyrgyzstan\r\nLA|Laos\r\nLV|Latvia\r\nLB|Lebanon\r\nLS|Lesotho\r\nLR|Liberia\r\nLY|Libya\r\nLI|Liechtenstein\r\nLT|Lithuania\r\nLU|Luxembourg\r\nMO|Macao\r\nMK|Macedonia\r\nMG|Madagascar\r\nMW|Malawi\r\nMY|Malaysia\r\nMV|Maldives\r\nML|Mali\r\nMT|Malta\r\nMH|Marshall Islands\r\nMQ|Martinique\r\nMR|Mauritania\r\nMU|Mauritius\r\nYT|Mayotte\r\nMX|Mexico\r\nFM|Micronesia\r\nMD|Moldova\r\nMC|Monaco\r\nMN|Mongolia\r\nME|Montenegro\r\nMS|Montserrat\r\nMA|Morocco\r\nMZ|Mozambique\r\nMM|Myanmar\r\nNA|Namibia\r\nNR|Nauru\r\nNP|Nepal\r\nNL|Netherlands\r\nNC|New Caledonia\r\nNZ|New Zealand\r\nNI|Nicaragua\r\nNE|Niger\r\nNG|Nigeria\r\nNU|Niue\r\nNF|Norfolk Island\r\nMP|Northern Mariana Islands\r\nNO|Norway\r\nOM|Oman\r\nPK|Pakistan\r\nPW|Palau\r\nPS|Palestine\r\nPA|Panama\r\nPG|Papua New Guinea\r\nPY|Paraguay\r\nPE|Peru\r\nPH|Philippines\r\nPN|Pitcairn\r\nPL|Poland\r\nPT|Portugal\r\nPR|Puerto Rico\r\nQA|Qatar\r\nRE|R\u00e9union\r\nRO|Romania\r\nRU|Russian Federation\r\nRW|Rwanda\r\nBL|Saint Barth\u00e9lemy\r\nSH|Saint Helena\r\nKN|Saint Kitts and Nevis\r\nLC|Saint Lucia\r\nMF|Saint Martin (French part)\r\nPM|Saint Pierre and Miquelon\r\nVC|Saint Vincent and the Grenadines\r\nWS|Samoa\r\nSM|San Marino\r\nST|Sao Tome and Principe\r\nSA|Saudi Arabia\r\nSN|Senegal\r\nRS|Serbia\r\nSC|Seychelles\r\nSL|Sierra Leone\r\nSG|Singapore\r\nSX|Sint Maarten (Dutch part)\r\nSK|Slovakia\r\nSI|Slovenia\r\nSB|Solomon Islands\r\nSO|Somalia\r\nZA|South Africa\r\nGS|South Georgia and the South Sandwich Islands\r\nSS|South Sudan\r\nES|Spain\r\nLK|Sri Lanka\r\nSD|Sudan\r\nSR|Suriname\r\nSJ|Svalbard and Jan Mayen\r\nSZ|Swaziland\r\nSE|Sweden\r\nCH|Switzerland\r\nSY|Syria\r\nTW|Taiwan\r\nTJ|Tajikistan\r\nTZ|Tanzania\r\nTH|Thailand\r\nTL|Timor-Leste\r\nTG|Togo\r\nTK|Tokelau\r\nTO|Tonga\r\nTT|Trinidad and Tobago\r\nTN|Tunisia\r\nTR|Turkey\r\nTM|Turkmenistan\r\nTC|Turks and Caicos Islands\r\nTV|Tuvalu\r\nUG|Uganda\r\nUA|Ukraine\r\nAE|United Arab Emirates\r\nGB|United Kingdom\r\nUS|United States of America\r\nUM|United States Minor Outlying Islands\r\nUY|Uruguay\r\nUZ|Uzbekistan\r\nVU|Vanuatu\r\nVA|Vatican City\r\nVE|Venezuela\r\nVN|Vietnam\r\nVG|Virgin Islands, British\r\nVI|Virgin Islands, U.S.\r\nWF|Wallis and Futuna\r\nEH|Western Sahara\r\nYE|Yemen\r\nZM|Zambia\r\nZW|Zimbabwe\r\n\r\n\r\n# Currencies\r\n\r\nAll API functions that reference a Currency Code will use the **ISO 4217 alphabetic code** format. Use the list below to identify the currency.\r\n\r\nAlphabetic Code | Name\r\n-|-\r\nCHF | Swiss Franc\r\nEUR | Euro\r\nGBP | Pound Sterling\r\nUSD | United States Dollar\r\n\r\n\r\n\r\n\r\n",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "f6bf99b9-ca03-47b5-a667-8e1a5a625b0e",
      "name": "Authentication API Reference",
      "description": "This API describes how to create a Bearer token for API.\n\nIt is based on the HMAC authentication scheme.",
      "item": [
        {
          "_postman_id": "1ddd267b-89d2-462e-9227-a0ee94e86805",
          "name": "Create Management API Bearer Token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bebb259f-e09d-4eef-87ce-010ad3c573fd",
                "exec": [
                  "var CryptoJS = require(\"crypto-js\");\r",
                  "\r",
                  "var publicKey = pm.environment.get(\"publicKey\");\r",
                  "var privateKey = CryptoJS.enc.Base64.parse(pm.environment.get(\"privateKey\"));\r",
                  "\r",
                  "var timestamp = (new Date).getTime() / 1000;\r",
                  "\r",
                  "var nonce = timestamp;\r",
                  "    \r",
                  "var body = request.data;\r",
                  "\r",
                  "if (body.length > 0){\r",
                  "    var utf8Body = CryptoJS.enc.Utf8.parse(body);\r",
                  "    var hashedBody = CryptoJS.SHA256(utf8Body);\r",
                  "    var bodySignature = CryptoJS.enc.Base64.stringify(hashedBody);\r",
                  "}\r",
                  "else {\r",
                  "    var bodySignature = \"\";\r",
                  "}\r",
                  "\r",
                  "var unsignedSignature = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + bodySignature;\r",
                  "\r",
                  "var utf8Signature = CryptoJS.enc.Utf8.parse(unsignedSignature);\r",
                  "var hashedSignature = CryptoJS.HmacSHA256(utf8Signature, privateKey);\r",
                  "var signedSignature = CryptoJS.enc.Base64.stringify(hashedSignature);\r",
                  "\r",
                  "var hmac = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + signedSignature;\r",
                  "\r",
                  "pm.variables.set(\"token\", hmac);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Hmac {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{identityApiUrl}}/v1/hmac/management",
            "description": "#### Description\n\nCreates a new Management API bearer token from a given HMAC token. Please see [HMAC Authentication](#hmac-authentication) for more details."
          },
          "response": [
            {
              "id": "3365b3a8-75da-44db-9502-f9bc4aa40d87",
              "name": "Create Management API Bearer Token",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Hmac {{token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{identityApiUrl}}/v1/hmac/management"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "date",
                  "value": "Mon, 25 Feb 2019 16:00:49 GMT"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "server",
                  "value": "envoy"
                },
                {
                  "key": "api-supported-versions",
                  "value": "1.0"
                },
                {
                  "key": "x-envoy-upstream-service-time",
                  "value": "532"
                },
                {
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"accessToken\": \"\",\n    \"expires\": \"\"\n}"
            }
          ]
        },
        {
          "_postman_id": "7c24f4b5-5d1c-423a-a717-575943781e07",
          "name": "Create Collect API Bearer Token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bebb259f-e09d-4eef-87ce-010ad3c573fd",
                "exec": [
                  "var CryptoJS = require(\"crypto-js\");\r",
                  "\r",
                  "var publicKey = pm.environment.get(\"publicKey\");\r",
                  "var privateKey = CryptoJS.enc.Base64.parse(pm.environment.get(\"privateKey\"));\r",
                  "\r",
                  "var timestamp = (new Date).getTime() / 1000;\r",
                  "\r",
                  "var nonce = timestamp;\r",
                  "    \r",
                  "var body = request.data;\r",
                  "\r",
                  "if (body.length > 0){\r",
                  "    var utf8Body = CryptoJS.enc.Utf8.parse(body);\r",
                  "    var hashedBody = CryptoJS.SHA256(utf8Body);\r",
                  "    var bodySignature = CryptoJS.enc.Base64.stringify(hashedBody);\r",
                  "}\r",
                  "else {\r",
                  "    var bodySignature = \"\";\r",
                  "}\r",
                  "\r",
                  "var unsignedSignature = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + bodySignature;\r",
                  "\r",
                  "var utf8Signature = CryptoJS.enc.Utf8.parse(unsignedSignature);\r",
                  "var hashedSignature = CryptoJS.HmacSHA256(utf8Signature, privateKey);\r",
                  "var signedSignature = CryptoJS.enc.Base64.stringify(hashedSignature);\r",
                  "\r",
                  "var hmac = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + signedSignature;\r",
                  "\r",
                  "pm.variables.set(\"token\", hmac);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Hmac {{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{identityApiUrl}}/v1/hmac/collect",
            "description": "#### Description\n\nCreates a new Collect API bearer token from a given HMAC token. Please see [HMAC Authentication](#hmac-authentication) for more details."
          },
          "response": [
            {
              "id": "453f82d4-8c86-4aa7-8789-f7119068c8a6",
              "name": "Create Collect API Bearer Token",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Hmac {{token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{identityApiUrl}}/v1/hmac/collect"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "date",
                  "value": "Mon, 25 Feb 2019 16:00:49 GMT"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "server",
                  "value": "envoy"
                },
                {
                  "key": "api-supported-versions",
                  "value": "1.0"
                },
                {
                  "key": "x-envoy-upstream-service-time",
                  "value": "532"
                },
                {
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"accessToken\": \"\",\n    \"expires\": \"\"\n}"
            }
          ]
        },
        {
          "_postman_id": "0a64a4a2-db8f-4503-9de8-592c03255bc3",
          "name": "Create Payout API Bearer Token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bebb259f-e09d-4eef-87ce-010ad3c573fd",
                "exec": [
                  "var CryptoJS = require(\"crypto-js\");\r",
                  "\r",
                  "var publicKey = pm.environment.get(\"publicKey\");\r",
                  "var privateKey = CryptoJS.enc.Base64.parse(pm.environment.get(\"privateKey\"));\r",
                  "\r",
                  "var timestamp = (new Date).getTime() / 1000;\r",
                  "\r",
                  "var nonce = timestamp;\r",
                  "    \r",
                  "var body = request.data;\r",
                  "\r",
                  "if (body.length > 0){\r",
                  "    var utf8Body = CryptoJS.enc.Utf8.parse(body);\r",
                  "    var hashedBody = CryptoJS.SHA256(utf8Body);\r",
                  "    var bodySignature = CryptoJS.enc.Base64.stringify(hashedBody);\r",
                  "}\r",
                  "else {\r",
                  "    var bodySignature = \"\";\r",
                  "}\r",
                  "\r",
                  "var unsignedSignature = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + bodySignature;\r",
                  "\r",
                  "var utf8Signature = CryptoJS.enc.Utf8.parse(unsignedSignature);\r",
                  "var hashedSignature = CryptoJS.HmacSHA256(utf8Signature, privateKey);\r",
                  "var signedSignature = CryptoJS.enc.Base64.stringify(hashedSignature);\r",
                  "\r",
                  "var hmac = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + signedSignature;\r",
                  "\r",
                  "pm.variables.set(\"token\", hmac);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Hmac {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"customerRef\": \"democustomer\",\n\t\"orderRef\": \"testorder\",\n\t\"instructionRef\": \"testinstruction\"\n}"
            },
            "url": "{{identityApiUrl}}/identity/v1/hmac/payout",
            "description": "#### Description\n\nCreates a new Payout API bearer token from a given HMAC token. Please see [HMAC Authentication](#hmac-authentication) for more details."
          },
          "response": [
            {
              "id": "6520de8d-c9ff-479c-baa3-ba6d2a00ebad",
              "name": "Create Payout API Bearer Token",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Hmac {{token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{identityApiUrl}}/v1/hmac/payout"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "date",
                  "value": "Mon, 25 Feb 2019 16:00:49 GMT"
                },
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "server",
                  "value": "envoy"
                },
                {
                  "key": "api-supported-versions",
                  "value": "1.0"
                },
                {
                  "key": "x-envoy-upstream-service-time",
                  "value": "532"
                },
                {
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"accessToken\": \"\",\n    \"expires\": \"\"\n}"
            }
          ]
        }
      ]
    },
    {
      "_postman_id": "6ccbe271-e09d-4ed2-9599-7a0531e9e57f",
      "name": "Management API Reference",
      "description": "",
      "item": [
        {
          "_postman_id": "c7a00e71-a093-41c7-a084-5bfbafb0fd00",
          "name": "Accounts and Tenants",
          "description": "",
          "item": [
            {
              "_postman_id": "d4a8fee4-7343-464f-9b3f-bf42e81619e2",
              "name": "Accounts",
              "description": "",
              "item": [
                {
                  "_postman_id": "53e94c1d-bcfd-472d-b4e7-14289ab131c6",
                  "name": "General Info",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "5add0f2a-961c-4bc0-8eb4-6d8579d3ff14",
                      "name": "Get Account",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApi}}/v1/account",
                        "description": "#### Description\n\nGets the current account assigned to the access token.\n\n#### Role required\n\n`acc.r`"
                      },
                      "response": [
                        {
                          "id": "f31cf356-e1c9-4018-a915-73c57a911104",
                          "name": "Get Account",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/account"
                          },
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"Id\": \"\",\n\t\"ImburseAccountRef\": \"\",\n\t\"CompanyName\": \"\",\n\t\"BillingContactFirstName\": \"\",\n\t\"BillingContactLastName\": \"\"\n}"
                        }
                      ]
                    }
                  ],
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "31ef9369-14ea-44bb-a91a-582c84aa056a",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "8ea2a464-9b3c-4022-946b-74e1cf23e5ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "09e70593-2a88-4c91-a7cb-1b6d3934b979",
                  "name": "Security Keys",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "75d7c37d-24f0-48c2-bdd7-48b1ad2fc463",
                      "name": "Get All Keys",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/account/keys",
                        "description": "#### Description\n\nGets the existing account public keys and claims assigned to them. Private keys are not returned.\n\n#### Role required\n\n`acc.key.r`"
                      },
                      "response": [
                        {
                          "id": "b010e01a-f779-4cfe-baa7-57b0abaf7809",
                          "name": "Get All Keys",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/account/keys"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "[\n\t{\n\t\t\"accountId\": \"\",\n\t\t\"publicKey\": \"\",\n\t\t\"roles\": []\n\t}\n]"
                        }
                      ]
                    },
                    {
                      "_postman_id": "45d621ca-c618-40e9-a4c1-7240d88269b6",
                      "name": "Get Key by Public Key",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/account/keys/{{publicKey}}",
                        "description": "#### Description\n\nGets a certain account key by its public key.\n\n#### Role required\n\n`acc.key.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\npublicKey | The public key of the desired account key"
                      },
                      "response": [
                        {
                          "id": "bed7ba38-801c-4aa2-bb0e-cb44b702d9dd",
                          "name": "Get Key by Public Key",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/account/keys/{{publicKey}}"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"accountId\": \"\",\n\t\"publicKey\": \"\",\n\t\"roles\": []\n}\n"
                        }
                      ]
                    },
                    {
                      "_postman_id": "879a0ffe-7ffa-4308-b378-481b47d866bb",
                      "name": "Delete a Key",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/account/keys/{{publicKey}}",
                        "description": "#### Description\n\nDeletes a public and private key from the account. This is dangerous as it will stop the key from being used for future requests and will not be able to be undone.\n\n#### Role required\n\n`acc.key.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\npublicKey | The public key of the account keyset to delete."
                      },
                      "response": [
                        {
                          "id": "25bba2df-c501-4c2b-9780-14ca97dcffe4",
                          "name": "Delete a Key",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/account/keys/{{accountKeyToDelete}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": null,
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": null
                        }
                      ]
                    },
                    {
                      "_postman_id": "978664ad-7c1e-4f13-b7ce-47cd9f330727",
                      "name": "Create a new Key",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[ \n\t\"{{role1}}\", \n\t\"{{role2}}\"\n]"
                        },
                        "url": "{{managementApiUrl}}/v1/account/keys",
                        "description": "#### Description\n\nCreates a new account key to access account level API's.\n\n#### Role required\n\n`acc.keys.a`\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nroles | Yes | The [roles](#account-roles) to be assigned to the key."
                      },
                      "response": [
                        {
                          "id": "01702494-71c9-4993-a112-6d7bd78c2329",
                          "name": "Create a new Key",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[ \n\t\"{{role1}}\", \n\t\"{{role2}}\"\n]"
                            },
                            "url": "{{managementApiUrl}}/v1/account/keys"
                          },
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"primaryGroupSid\": \"\",\n\t\"publicKey\": \"\",\n\t\"privateKey\": \"\",\n\t\"roles\": []\n}"
                        }
                      ]
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "b195ab08-dd5a-4639-b975-f9842b87e7b5",
                  "name": "Tenants",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "1e482fce-e553-4077-aa21-e7901ba6b85f",
                      "name": "Get Tenants",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{managementApiUrl}}/v1/account/tenants?from={{from}}&take={{take}}&name={{name}}",
                          "host": [
                            "{{managementApiUrl}}"
                          ],
                          "path": [
                            "v1",
                            "account",
                            "tenants"
                          ],
                          "query": [
                            {
                              "key": "from",
                              "value": "{{from}}",
                              "equals": true,
                              "description": "Index you want to take from. Default is 0."
                            },
                            {
                              "key": "take",
                              "value": "{{take}}",
                              "equals": true,
                              "description": "How many results to bring back. Default is 20."
                            },
                            {
                              "key": "name",
                              "value": "{{name}}",
                              "equals": true,
                              "description": "Optional - Filter by a tenant name. Default is nothing."
                            }
                          ]
                        },
                        "description": "#### Description\n\nGets all the tenants for this account.\n\n#### Role required\n\n`acc.t.r`\n\n#### Optional Params\n\nParameter | Description\n--------- | -----------\nfrom | The index to take from. Default is 0.\ntake | Amount of results to return. Default us 20.\nname | Tenant Name to filter by."
                      },
                      "response": [
                        {
                          "id": "58ed7744-c6fa-41ca-a8a0-1234e939b72f",
                          "name": "Get Tenants",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{managementApiUrl}}/v1/account/tenants?from={{startingIndex}}&take={{resultsToGet}}&name={{tenantName}}",
                              "host": [
                                "{{managementApiUrl}}"
                              ],
                              "path": [
                                "v1",
                                "account",
                                "tenants"
                              ],
                              "query": [
                                {
                                  "key": "from",
                                  "value": "{{startingIndex}}",
                                  "equals": true,
                                  "description": "Index you want to take from. Default is 0."
                                },
                                {
                                  "key": "take",
                                  "value": "{{resultsToGet}}",
                                  "equals": true,
                                  "description": "How many results to bring back. Default is 20."
                                },
                                {
                                  "key": "name",
                                  "value": "{{tenantName}}",
                                  "equals": true,
                                  "description": "Optional - Filter by a tenant name. Default is nothing."
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"currentPage\": 1,\n\t\"pageCount\": 1,\n\t\"rowCount\": 1,\n\t\"results\": [\n\t\t{\n\t\t\t\"id\": \"\",\n\t\t\t\"accountId\": \"\",\n\t\t\t\"name\": \"\",\n\t\t\t\"address\": \"\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "b92ec633-349b-4f21-aa35-23983be80ed2",
                      "name": "Get Tenant by Id",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/account/tenants/{{tenantId}}",
                        "description": "#### Description\n\nGets a tenant by id\n\n#### Role required\n\n`acc.t.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantId | The ID of the tenant to get."
                      },
                      "response": [
                        {
                          "id": "63b066a4-1984-448a-8131-97fca597f590",
                          "name": "Get Tenant By Id",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/account/tenants/{{tenantId}}"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"id\": \"\",\n\t\"accountId\": \"\",\n\t\"name\": \"\",\n\t\"address\": \"\"\n}\n"
                        }
                      ]
                    },
                    {
                      "_postman_id": "ffe6bc62-fd06-4bce-82f4-768d541ef68b",
                      "name": "Create new Tenant",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "e2a46408-c4b5-4525-8c92-e21fe2c58ba2",
                            "exec": [
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/account/tenants",
                        "description": "#### Description\n\nCreates a new tenant.\n\n#### Role required\n\n`acc.t.a`\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nname | Yes | The name of the new tenant.\naddress | No | An [address](address-object) for the new tenant."
                      },
                      "response": [
                        {
                          "id": "9d3ce5f9-02ad-4b41-9903-b9a61be375b4",
                          "name": "Create new Tenant",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{token}}"
                              },
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                            },
                            "url": "{{managementApiUrl}}/v1/account/tenants"
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"id\": \"\",\n\t\"accountId\": \"\",\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "94282eb1-d0e4-4ad4-88a6-10f82b9ba66e",
                      "name": "Update Tenant",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/account/tenants/{{tenantId}}",
                        "description": "#### Description\n\nUpdates a tenant.\n\n#### Role required\n\n`acc.t.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantId | The ID of the tenant to update\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nname | Yes | The name of the tenant.\naddress | No | An [address](address-object) for the tenant."
                      },
                      "response": [
                        {
                          "id": "e0245da2-ae0d-44be-a0dc-005eb463f595",
                          "name": "Update Tenant",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              },
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                            },
                            "url": "{{managementApiUrl}}/v1/account/tenants/{{tenantId}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": null,
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": null
                        }
                      ]
                    },
                    {
                      "_postman_id": "de93b675-8cdd-4084-a530-0d0f80c9aee1",
                      "name": "Get All Keys",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/{{tenantId}}/keys",
                        "description": "#### Description\n\nGets the keys for a specific tenant. \n\n#### Role required\n\n`t.key.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantId | The ID of the tenant"
                      },
                      "response": [
                        {
                          "id": "4dc1022e-d159-48ee-81df-11877a29cc02",
                          "name": "Get All Keys",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/keys"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "[\n    {\n        \"tenantId\": \"\",\n        \"publicKey\": \"\",\n        \"roles\": []\n    }\n]"
                        }
                      ]
                    },
                    {
                      "_postman_id": "5ae170a1-0c7b-4d19-b455-5ca9cca21e2c",
                      "name": "Get Key By PublicKey",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/{{tenantId}}/keys/{{publicKey}}",
                        "description": "#### Description\n\nGets a key by a specific tenant Id and public key\n\n#### Role required\n\n`t.key.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantId | The ID of the tenant\npublicKey | The public key of the desired tenant key"
                      },
                      "response": [
                        {
                          "id": "3850a071-0fbc-4a96-b29a-b04d17b786b8",
                          "name": "Get Key By PublicKey",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n    \"tenantId\": \"\",\n    \"publicKey\": \"\",\n    \"roles\": []\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "87a98404-40fd-4a28-801f-af5eaaa73d27",
                      "name": "Create Key",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n\t\"{{role1}}\"\n]"
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/{{tenantId}}/keys/",
                        "description": "#### Description\n\nCreates a new key for a specific tenant.\n\n#### Role required\n\n`t.key.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantId | The ID of the specific tenant.\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nroles | Yes | The [roles](#tenant-roles) to be assigned to the key."
                      },
                      "response": [
                        {
                          "id": "317dfa2e-7ce9-44c4-b611-a6cb76f5fbc0",
                          "name": "Create Key",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              },
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n\t\"{{role1}}\"\n]"
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/keys"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n    \"primaryGroupSid\": \"\",\n    \"publicKey\": \"\",\n    \"privateKey\": \"\",\n    \"roles\": []\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "cca92015-0f89-4dc7-ac46-532bd2764bf4",
                      "name": "Remove Key by Public Key",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/{{tenantId}}/keys/{{publicKey}}",
                        "description": "#### Description\n\nRemoves a spefic key set for a specific tenant by it's public key. This is dangerous as it will stop the key from being used for future requests and will not be able to be undone.\n\n#### Role required\n\n`t.key.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\ntenantID | The ID of the specific tenant.\npublicKey | The public key of the key set to delete."
                      },
                      "response": [
                        {
                          "id": "facf90a9-89bd-44fa-b8ae-ec05374b00be",
                          "name": "Remove Key by Public Key",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": null,
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": null
                        }
                      ]
                    }
                  ],
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "38080366-1aef-41b1-b132-0264a98f1a8c",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "570280c6-3f62-4e60-8920-ac77cdc572da",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "ac94da31-9efc-4702-b3b0-1f2aac7c82a8",
                  "name": "Users",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "379663a6-4847-41b5-b5b4-d3afe24914d5",
                      "name": "Get Users",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{managementApiUrl}}/v1/account/users?from=0&take=20&email=",
                          "host": [
                            "{{managementApiUrl}}"
                          ],
                          "path": [
                            "v1",
                            "account",
                            "users"
                          ],
                          "query": [
                            {
                              "key": "from",
                              "value": "0",
                              "equals": true,
                              "description": "Amount of results to return"
                            },
                            {
                              "key": "take",
                              "value": "20",
                              "equals": true,
                              "description": "The index to take from"
                            },
                            {
                              "key": "email",
                              "value": "",
                              "equals": true,
                              "description": "Email to filter by"
                            }
                          ]
                        },
                        "description": "#### Description\n\nGets a list of users associated to the account.\n\n#### Role required\n\n`acc.usr.r`\n\n#### Optional Params\n\nParameter | Description\n--------- | -----------\nfrom | The index to take from. Default is 0.\ntake | Amount of results to return. Default us 20.\nemail | Email to filter by."
                      },
                      "response": [
                        {
                          "id": "c5bc2aa4-ecd2-49f8-a200-717b01d4e5dd",
                          "name": "Get Users",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{managementApiUrl}}/v1/account/users?from=0&take=20&email=",
                              "host": [
                                "{{managementApiUrl}}"
                              ],
                              "path": [
                                "v1",
                                "account",
                                "users"
                              ],
                              "query": [
                                {
                                  "key": "from",
                                  "value": "0",
                                  "equals": true,
                                  "description": "Amount of results to return"
                                },
                                {
                                  "key": "take",
                                  "value": "20",
                                  "equals": true,
                                  "description": "The index to take from"
                                },
                                {
                                  "key": "email",
                                  "value": "",
                                  "equals": true,
                                  "description": "Email to filter by"
                                }
                              ]
                            }
                          },
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"currentPage\": 1,\n\t\"pageCount\": 1,\n\t\"rowCount\": 1,\n\t\"results\": [\n\t\t\"accountId\": \"\",\n\t\t\"userId\": \"\",\n\t\t\"roles\": []\n\t]\n}\n"
                        }
                      ]
                    },
                    {
                      "_postman_id": "aed6edd9-25f1-45be-9232-da62d9bbdb26",
                      "name": "Assign User",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n\t\"{{role1}}\",\n\t\"{{role2}}\"\n]"
                        },
                        "url": "{{managementApiUrl}}/v1/account/users/{{userId}}",
                        "description": "#### Description\n\nUpdates an associated users roles for the account.\n\n#### Role required\n\n`acc.usr.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nuserId | The ID of the user.\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nroles | The new [roles](#account-roles) to assign the user."
                      },
                      "response": [
                        {
                          "id": "d50da06d-b4c2-4566-b641-5c601c264170",
                          "name": "Assign User",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n\t\"{{role1}}\",\n\t\"{{role2}}\"\n]"
                            },
                            "url": "{{managementApiUrl}}/v1/account/users/{{userId}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": null,
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": null
                        }
                      ]
                    },
                    {
                      "_postman_id": "7eb50f74-570e-4482-9747-700f69afc9c2",
                      "name": "Remove user",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/account/users/{{userId}}",
                        "description": "#### Description\n\nRemoves a user from the account.\n\n#### Role required\n\n`acc.usr.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nuserId | The ID of the user."
                      },
                      "response": [
                        {
                          "id": "2a4bf219-c214-4fbb-888e-f2201caab7e1",
                          "name": "Remove user",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/account/users/{{userId}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": null,
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": null
                        }
                      ]
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3d3ef99c-2ae8-4cec-8eab-c2034155fcd1",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4b1e4156-1309-416d-ba90-fd32a5e0b00c",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "2db95add-3a76-4424-ada5-fa1fc865011c",
              "name": "Tenants",
              "description": "",
              "item": [
                {
                  "_postman_id": "a41b9350-8cff-475e-a747-b242bc1c1a83",
                  "name": "Security Keys",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "3bbc7e0a-c7b7-4b45-9d21-270b9c0d826a",
                      "name": "Create Key",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n\t\"{{role1}}\"\n]"
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/keys",
                        "description": "#### Description\n\nCreates a new key for a tenant.\n\n##### Role required\n\n`t.key.a`\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nroles | Yes | The [roles](#tenant-roles) to be assigned to the key."
                      },
                      "response": [
                        {
                          "id": "3514510b-3aa1-486d-8c17-cd880d55696d",
                          "name": "Create Key",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              },
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n\t\"{{role1}}\"\n]"
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/keys"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n    \"primaryGroupSid\": \"\",\n    \"publicKey\": \"\",\n    \"privateKey\": \"\",\n    \"roles\": []\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "59d00071-d648-48e0-90e1-1ec41175c862",
                      "name": "Get All Keys",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/keys",
                        "description": "#### Description\n\nGets the Api keys for the tenant to define in the bearer token.\n\n#### Role required\n\n`t.key.r`"
                      },
                      "response": [
                        {
                          "id": "cee7c56a-c24a-42d9-b71d-9c0a4592f8ee",
                          "name": "Get All Keys",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/keys"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "[\n    {\n        \"tenantId\": \"\",\n        \"publicKey\": \"\",\n        \"roles\": []\n    }\n]"
                        }
                      ]
                    },
                    {
                      "_postman_id": "b3a432cb-2cf5-4263-a7d0-f69de94b10a4",
                      "name": "Get Key By PublicKey",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}",
                        "description": "#### Description\n\nGets a specific key by its public key.\n\n#### Role required\n\n`t.key.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\npublicKey | The public key of the specific key"
                      },
                      "response": [
                        {
                          "id": "8771bc08-d3a5-42f1-8e8c-ac97442d29ed",
                          "name": "Get Key By PublicKey",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n    \"tenantId\": \"\",\n    \"publicKey\": \"\",\n    \"roles\": []\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "77350897-25c9-44f8-a79f-600b890ba378",
                      "name": "Remove Key by Public Key",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}",
                        "description": "#### Description\n\nRemoves a spefic key set by it's public key. This is dangerous as it will stop the key from being used for future requests and will not be able to be undone.\n\n#### Role required\n\n`t.key.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\npublicKey | The public key of the key set to delete."
                      },
                      "response": [
                        {
                          "id": "6a863216-e618-4b2d-8f0a-a3d6ba2856a6",
                          "name": "Remove Key by Public Key",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/keys/{{publicKey}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": null,
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": null
                        }
                      ]
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "ec09be74-4f68-4b14-bad4-631c112467b2",
                  "name": "Users",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "dc71550f-7d85-40e5-987e-5f0579f919bb",
                      "name": "Get Users",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{managementApiUrl}}/v1/tenant/users?from=0&take=20&email=",
                          "host": [
                            "{{managementApiUrl}}"
                          ],
                          "path": [
                            "v1",
                            "tenant",
                            "users"
                          ],
                          "query": [
                            {
                              "key": "from",
                              "value": "0",
                              "equals": true,
                              "description": "Amount of results to return"
                            },
                            {
                              "key": "take",
                              "value": "20",
                              "equals": true,
                              "description": "he index to take from"
                            },
                            {
                              "key": "email",
                              "value": "",
                              "equals": true,
                              "description": "Email to filter by"
                            }
                          ]
                        },
                        "description": "#### Description\n\nGets a list of users associated to the tenant.\n\n#### Role required\n\n`t.usr.r`\n\n#### Optional Params\n\nParameter | Description\n--------- | -----------\nfrom | The index to take from. Default is 0.\ntake | Amount of results to return. Default us 20.\nemail | Email to filter by."
                      },
                      "response": [
                        {
                          "id": "0ce8d80f-deba-4679-9423-4a08a51ebd8f",
                          "name": "Get Users",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{managementApiUrl}}/v1/tenant/users?from=0&take=20&email=",
                              "host": [
                                "{{managementApiUrl}}"
                              ],
                              "path": [
                                "v1",
                                "tenant",
                                "users"
                              ],
                              "query": [
                                {
                                  "key": "from",
                                  "value": "0",
                                  "equals": true,
                                  "description": "Amount of results to return"
                                },
                                {
                                  "key": "take",
                                  "value": "20",
                                  "equals": true,
                                  "description": "he index to take from"
                                },
                                {
                                  "key": "email",
                                  "value": "",
                                  "equals": true,
                                  "description": "Email to filter by"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n    \"currentPage\": 1,\n    \"pageCount\": 1,\n    \"rowCount\": 1,\n    \"results\": [\n        {\n            \"tenantId\": \"\",\n            \"userId\": \"\",\n            \"roles\": [],\n            \"enabled\": true,\n            \"deleted\": false\n        }\n    ]\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "9174dfda-ca00-48e0-b836-7e6f07927ec1",
                      "name": "Get Users By Id",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/users/{{userId}}",
                        "description": "#### Description\n\nGets a user by their id\n\n#### Role required\n\n`acc.t.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nuserId | The ID of the user to get."
                      },
                      "response": [
                        {
                          "id": "4228da35-1137-4de2-818b-ad531197d28d",
                          "name": "Get Users By Id",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/users/{{userId}}"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n    \"tenantId\": \"\",\n    \"userId\": \"\",\n    \"roles\": [],\n    \"enabled\": true,\n    \"deleted\": false\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "9014c9cd-b7f2-4bac-97a7-e0371c5a917a",
                      "name": "Assign User",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n\t\"{{role1}}\"\n]"
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/users/{{userId}}",
                        "description": "#### Description\n\nUpdates an associated users roles for the tenant.\n\n#### Role required\n\n`t.usr.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nuserId | The ID of the user.\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nroles | The new [roles](#tenant-roles) to assign the user."
                      },
                      "response": [
                        {
                          "id": "b6185b08-f4b4-43e4-84dc-bcce9f10b6cf",
                          "name": "Assign User",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              },
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n\t\"{{role1}}\"\n]"
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/users/{{userId}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": null,
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": null
                        }
                      ]
                    },
                    {
                      "_postman_id": "2537f2ba-d886-40ce-8de2-50b24938d0b8",
                      "name": "Remove user",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/tenant/users/{{userId}}",
                        "description": "#### Description\n\nRemoves a user from the tenant.\n\n#### Role required\n\n`t.usr.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nuserId | The ID of the user."
                      },
                      "response": [
                        {
                          "id": "6a679977-2e46-4ff9-bb82-819a8621985e",
                          "name": "Remove user",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer {{token}}",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/tenant/users/{{userId}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": null,
                          "header": null,
                          "cookie": [],
                          "responseTime": null,
                          "body": null
                        }
                      ]
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3d3ef99c-2ae8-4cec-8eab-c2034155fcd1",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4b1e4156-1309-416d-ba90-fd32a5e0b00c",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": {
              "token": "{{bearerToken}}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f254ad29-49ef-47df-9dac-6a5e8644ebb3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "6d9d08e4-674c-4145-a716-97057dca1901",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "58efe9ec-1cee-4bea-9e64-419f71d32659",
          "name": "Providers",
          "description": "Provider configuration objects hold the connnection details that Imburse needs to connect to your various providers, eg. Braintree, Tangocard, etc. With these details, we will carry out instructions on your behalf.\r\n",
          "item": [
            {
              "_postman_id": "898cf1d0-5846-4398-82aa-901094e172f9",
              "name": "Payment Providers",
              "description": "",
              "item": [
                {
                  "_postman_id": "3ebf3f13-38dd-45c7-87d4-04a9e9e5b9c9",
                  "name": "Braintree SDK",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "4d4032a3-573d-412f-ac9d-a0a01f9d8d17",
                      "name": "Create a Braintree SDK Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"\",\n    \"currency\": \"\",\n    \"merchantId\": \"\",\n    \"privateKey\": \"\",\n    \"publicKey\": \"\",\n    \"merchantAccountId\": \"\"\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/payment-providers/braintree-sdk",
                        "description": "# Description\r\n\r\nCreate a Braintree SDK configuration.\r\n\r\n## Role required\r\n\r\n`t.psp.a`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrency | Yes | A currency ISO code.\r\nmerchantId | Yes | The Merchant Id.\r\npublicKey | Yes | The Public Key.\r\nprivateKey | Yes | The private Key.\r\nmerchantAccountId | Yes | The Merchant Account Id."
                      },
                      "response": [
                        {
                          "id": "cd15bd41-7063-4806-b4c8-1cbdfd2aad3f",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"\",\n    \"currency\": \"\",\n    \"merchantId\": \"\",\n    \"privateKey\": \"\",\n    \"publicKey\": \"\",\n    \"merchantAccountId\": \"\"\n}"
                            },
                            "url": "{{managementApiUrl}}/v1/payment-providers/braintree-sdk"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"paymentProvider\": {\n\t\t\"id\": \"BRAINTREE\",\n\t\t\"name\": \"Braintree\"\n\t},\n\t\"paymentApiProduct\": {\n\t\t\"id\": \"BRAINTREE_SDK\",\n\t\t\"name\": \"Braintree SDK\",\n\t\t\"description\": \"\"\n\t},\n\t\"paymentApiProductConfigurationId\": \"\",\n    \"name\": \"\",\n    \"currency\": \"\",\n    \"merchantId\": \"\",\n    \"publicKey\": \"\",\n    \"merchantAccountId\": \"\"\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "006f4533-4f2c-40bc-ac94-4cb799988576",
                      "name": "Get a Braintree SDK Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/payment-providers/braintree-sdk/{{id}}",
                        "description": "#### Description\r\n\r\nGets a Braintree SDK configuration.\r\n\r\n#### Role required\r\n\r\n`t.psp.r`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\nid | The id of the configuration to retrieve"
                      },
                      "response": [
                        {
                          "id": "5e032f4d-a1ab-4955-87df-2317364a2ce9",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/payment-providers/braintree-sdk/{{id}}"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\r\n\t\"paymentProvider\": {\r\n\t\t\"id\": \"BRAINTREE\",\r\n\t\t\"name\": \"Braintree\"\r\n\t},\r\n\t\"paymentApiProduct\": {\r\n\t\t\"id\": \"BRAINTREE_SDK\",\r\n\t\t\"name\": \"Braintree SDK\",\r\n\t\t\"description\": \"\"\r\n\t},\r\n\t\"id\": \"\",\r\n    \"name\": \"\",\r\n    \"currency\": \"\",\r\n    \"merchantId\": \"\",\r\n    \"publicKey\": \"\",\r\n    \"merchantAccountId\": \"\"\r\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "0d50f083-f421-468f-9326-4d8d2d80d1bd",
                      "name": "Update a Braintree SDK Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"\",\n    \"currency\": \"\",\n    \"merchantId\": \"\",\n    \"privateKey\": \"\",\n    \"publicKey\": \"\",\n    \"merchantAccountId\": \"\"\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/payment-providers/braintree-sdk/{{id}}",
                        "description": "#### Description\r\n\r\nUpdates a Braintree SDK configuration.\r\n\r\n#### Role required\r\n\r\n`t.psp.r`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\nid | The id of the payment provider configuration to update.\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrency | Yes | A currency ISO code.\r\nmerchantId | Yes | The Merchant Id.\r\npublicKey | Yes | The Public Key.\r\nprivateKey | Yes | The private Key.\r\nmerchantAccountId | Yes | The Merchant Account Id."
                      },
                      "response": [
                        {
                          "id": "33c37ea9-4b60-4885-bf18-e9cb50b68b36",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"\",\n    \"currency\": \"\",\n    \"merchantId\": \"\",\n    \"privateKey\": \"\",\n    \"publicKey\": \"\",\n    \"merchantAccountId\": \"\"\n}"
                            },
                            "url": "{{managementApiUrl}}/v1/payment-providers/braintree-sdk/{{id}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "14ca8b82-4514-4292-b445-8377ccca6741",
                  "name": "Paydirekt Merchant",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "f20df3e7-5075-4660-ac58-915461af4cb9",
                      "name": "Create a Paydirekt Merchant Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"publicKey\": \"\",\r\n    \"privateKey\": \"\"\r\n}\r\n"
                        },
                        "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-merchant",
                        "description": "# Description\r\n\r\nCreate a Paydirekt Merchant configuration.\r\n\r\n## Role required\r\n\r\n`t.psp.a`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrencies | Yes | An array of currency ISO codes.\r\npublicKey | Yes | The Public Key.\r\nprivateKey | Yes | The private Key."
                      },
                      "response": [
                        {
                          "id": "7783cfb6-7426-4b24-99a2-5fa499156ccf",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"publicKey\": \"\",\r\n\t\"privateKey\": \"\"\r\n}"
                            },
                            "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-merchant"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\r\n\t\"paymentProvider\": {\r\n\t\t\"id\": \"PAYDIREKT\",\r\n\t\t\"name\": \"Paydirekt\"\r\n\t},\r\n\t\"paymentApiProduct\": {\r\n\t\t\"id\": \"PAYDIREKT_MERCHANT\",\r\n\t\t\"name\": \"Paydirekt Merchant\"\r\n\t\t\"description\": \"\"\r\n\t},\r\n\t\"paymentApiProductConfigurationId\": \"\",\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"publicKey\": \"\",\r\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "8506f1f2-5c8b-432e-9013-35558a20a8a8",
                      "name": "Get a Paydirekt Merchant Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-merchant/{{id}}",
                        "description": "#### Description\r\n\r\nGets a Paydirekt Merchant configuration.\r\n\r\n#### Role required\r\n\r\n`t.psp.r`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\nid | The id of the configuration to retrieve"
                      },
                      "response": [
                        {
                          "id": "59c17bb9-a0cf-47b9-a926-66da1153f8d4",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-merchant/{{id}}"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\r\n\t\"paymentProvider\": {\r\n\t\t\"id\": \"PAYDIREKT\",\r\n\t\t\"name\": \"Paydirekt\"\r\n\t},\r\n\t\"paymentApiProduct\": {\r\n\t\t\"id\": \"PAYDIREKT_MERCHANT\",\r\n\t\t\"name\": \"Paydirekt Merchant\"\r\n\t\t\"description\": \"\"\r\n\t},\r\n\t\"id\": \"\",\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"publicKey\": \"\",\r\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "a8f1b539-f27c-4669-bf16-717c576edca3",
                      "name": "Update a Paydirekt Merchant Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"publicKey\": \"\",\r\n    \"privateKey\": \"\"\r\n}\r\n"
                        },
                        "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-merchant/{{id}}",
                        "description": "#### Description\r\n\r\nUpdates a PSP configuration.\r\n\r\n#### Role required\r\n\r\n`t.psp.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\npaymentProviderConfigurationId | The id of the payment provider configuration to update\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrencies | Yes | An array of currency ISO codes.\r\npublicKey | Yes | The Public Key.\r\nprivateKey | Yes | The private Key."
                      },
                      "response": [
                        {
                          "id": "8148c7cc-757b-4828-8c7b-4c4952653ab5",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"publicKey\": \"\",\r\n    \"privateKey\": \"\"\r\n}\r\n"
                            },
                            "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-merchant/{{id}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "2bd8d701-f2d1-4d96-af6e-375e9350c3ae",
                  "name": "Paydirekt OneKlick",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "773cf0fe-5bbf-4a06-b38c-c309becc7231",
                      "name": "Create a Paydirekt OneKlick Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"parentPaymentProviderConfigurationId\": \"\",\r\n    \"companyName\": \"\",\r\n    \"streetAddress\": \"\",\r\n    \"extendedStreetAddress\": \"\",\r\n    \"locale\": \"\",\r\n    \"region\": \"\",\r\n    \"postCode\": \"\",\r\n    \"country\": \"\"\r\n}\r\n"
                        },
                        "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-oneklick",
                        "description": "# Description\r\n\r\nCreate a Paydirekt OneKlick configuration.\r\n\r\n## Role required\r\n\r\n`t.psp.a`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrencies | Yes | An array of currency ISO codes.\r\nparentPaymentProviderConfigurationId | Yes | The account-level parent configuration id.\r\ncompanyName | No | The company name.\r\nstreetAddress | Yes | The street address.\r\nextendedStreetAddress | No | The extended street address if required.\r\nlocale | Yes | The locale.\r\nregion | Yes | The region.\r\npostCode | Yes | The postcode.\r\ncountry | Yes | The country."
                      },
                      "response": [
                        {
                          "id": "0855aab0-9b5c-4eff-861c-fd4f1c12edd7",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"\",\n    \"currencies\": [],\n    \"parentPaymentApiProductConfigurationId\": \"\",\n    \"companyName\": \"\",\n    \"streetAddress\": \"\",\n    \"extendedStreetAddress\": \"\",\n    \"locale\": \"\",\n    \"region\": \"\",\n    \"postCode\": \"\",\n    \"country\": \"\"\n}"
                            },
                            "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-oneklick"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"paymentProvider\": {\n\t\t\"id\": \"PAYDIREKT\",\n\t\t\"name\": \"Paydirekt\"\n\t},\n\t\"paymentApiProduct\": {\n\t\t\"id\": \"PAYDIREKT_ONEKLICK\",\n\t\t\"name\": \"Paydirekt OneKlick\",\n\t\t\"description\": \"\"\n\t},\n\t\"id\": \"\",\n    \"name\": \"\",\n    \"currencies\": [],\n    \"parentPaymentProviderConfigurationId\": \"\",\n    \"companyName\": \"\",\n    \"streetAddress\": \"\",\n    \"extendedStreetAddress\": \"\",\n    \"locale\": \"\",\n    \"region\": \"\",\n    \"postCode\": \"\",\n    \"country\": \"\"\n}\n"
                        }
                      ]
                    },
                    {
                      "_postman_id": "cd15e166-91fa-42eb-afab-0735a0ea0b86",
                      "name": "Get a Paydirekt OneKlick Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-oneklick/{{id}}",
                        "description": "#### Description\r\n\r\nGets a Paydirekt OneKlick configuration.\r\n\r\n#### Role required\r\n\r\n`t.psp.r`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\nid | The id of the configuration to retrieve"
                      },
                      "response": [
                        {
                          "id": "b8c3b581-b109-4c7b-8fd1-e56cf867bc7f",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-oneklick/{{id}}"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"paymentProvider\": {\n\t\t\"id\": \"PAYDIREKT\",\n\t\t\"name\": \"Paydirekt\"\n\t},\n\t\"paymentApiProduct\": {\n\t\t\"id\": \"PAYDIREKT_ONEKLICK\",\n\t\t\"name\": \"Paydirekt OneKlick\",\n\t\t\"description\": \"\"\n\t},\n\t\"id\": \"\",\n    \"name\": \"\",\n    \"currencies\": [],\n    \"parentPaymentProviderConfigurationId\": \"\",\n    \"companyName\": \"\",\n    \"streetAddress\": \"\",\n    \"extendedStreetAddress\": \"\",\n    \"locale\": \"\",\n    \"region\": \"\",\n    \"postCode\": \"\",\n    \"country\": \"\"\n}\n"
                        }
                      ]
                    },
                    {
                      "_postman_id": "77547e7f-a691-43ad-b6ee-c6b1c8c890b2",
                      "name": "Update a Paydirekt OneKlick Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"parentPaymentProviderConfigurationId\": \"\",\r\n    \"companyName\": \"\",\r\n    \"streetAddress\": \"\",\r\n    \"extendedStreetAddress\": \"\",\r\n    \"locale\": \"\",\r\n    \"region\": \"\",\r\n    \"postCode\": \"\",\r\n    \"country\": \"\"\r\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-oneklick/{{id}}",
                        "description": "#### Description\r\n\r\nUpdates a Paydirekt OneKlick configuration.\r\n\r\n#### Role required\r\n\r\n`t.psp.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\nid | The id of the payment provider configuration to update\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrencies | Yes | An array of currency ISO codes.\r\nparentPaymentProviderConfigurationId | Yes | The account-level parent payment provider configuration id.\r\ncompanyName | No | The company name.\r\nstreetAddress | Yes | The street address.\r\nextendedStreetAddress | No | The extended street address if required.\r\nlocale | Yes | The locale.\r\nregion | Yes | The region.\r\npostCode | Yes | The postcode.\r\ncountry | Yes | The country."
                      },
                      "response": [
                        {
                          "id": "078acf3a-0032-450d-b819-ae86f391f975",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"parentPaymentProviderConfigurationId\": \"\",\r\n    \"companyName\": \"\",\r\n    \"streetAddress\": \"\",\r\n    \"extendedStreetAddress\": \"\",\r\n    \"locale\": \"\",\r\n    \"region\": \"\",\r\n    \"postCode\": \"\",\r\n    \"country\": \"\"\r\n}\r\n"
                            },
                            "url": "{{managementApiUrl}}/v1/payment-providers/paydirekt-oneklick/{{id}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "d8a0acbb-2f12-49bc-b747-51d90428d74b",
                  "name": "Get list of Payment Provider Configurations",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/payment-providers",
                    "description": "#### Description\r\n\r\nGets a list Payment Provider configurations.\r\n\r\n#### Role required\r\n\r\n`t.psp.r`"
                  },
                  "response": [
                    {
                      "id": "0ab42881-d03a-452e-9d39-27cb90f4f7ad",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/payment-providers"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n\t{\n\t\t\"paymentProvider\": {\n\t\t\t\"id\": \"BRAINTREE\",\n\t\t\t\"name\": \"Braintree\"\n\t\t},\n\t\t\"paymentApiProduct\": {\n\t\t\t\"id\": \"BRAINTREE_SDK\",\n\t\t\t\"name\": \"Braintree SDK\",\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t\"id\": \"\",\n\t    \"name\": \"\"\n\t}\n]"
                    }
                  ]
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "7b3ea61e-90e6-4e99-959e-a1f82ea69c07",
              "name": "Reward Providers",
              "description": "The Reward Providers allow you to administer reward provider configurations. \n\n\n## Common Models \n\nListed below are the common models used throught this API.\n\n#### Reward Provider object\n\nName | Type | Description\n-|-|-\nid | string | A unique identifier for this reward provider. ie. TANGOCARD\nname | string | The friendly name of this provider. ie. Tangocard\n",
              "item": [
                {
                  "_postman_id": "07ac7816-d508-4736-bcd9-6b70aa50013b",
                  "name": "Tangocard",
                  "description": "#### The Tangocard Configuration object\n\nThis object holds the details for a Tangocard configuration.\n\nName | Type | Description\n-|-|-\npaymentProvider | [Reward Provider](#the-reward-provider-object) | The reward provider of this configuration\nid | guid | The unique identifier for this configuration\nname | string | A unique name for this configuration\ncustomerIdentifier | string | The customer identifier \ncustomerDisplayName | string | The customer display name\naccountIdentifier | string | The account identitifier\naccountDisplayName | string | The account display name\naccountContactEmail | string | The contract email address \n\n\n#### The Tangocard Account object\n\nThis object holds the details for a Tangocard Account.\n\nName | Type | Description\n-|-|-\naccountIdentifier | string | The account identitifier\naccountNumber | string | The account number\ncontactEmail | string | The contract email address \ncreatedAt | date/time | Date and time the account was created\ncurrencyCode | string | Currency code this account transacts in\ncurrentBalance | decimal | The current balance of this account\ndisplayName | string | The account display name\nstatus | string | The current status\n",
                  "item": [
                    {
                      "_postman_id": "20c7338d-79f9-4e00-970b-40a9d685983e",
                      "name": "Create a Tangocard Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"\",\n    \"customerDisplayName\": \"\",\n    \"accountContactEmail\": \"\"\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/reward-providers/tangocard",
                        "description": "# Description\r\n\r\nCreate a Tangocard Provider configuration.\r\n\r\n#### Role required\r\n\r\n`t.rew.a`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A unique name of this configuration\r\ncustomerDisplayName | Yes | Your customer name for display purposes\r\naccountContactEmail | Yes | The email address Tangocard will use to contact you\r\n\r\n#### Response object\r\n\r\nThe response is a [Tangocard Configuration object](#the-tangocard-configuration-object)"
                      },
                      "response": [
                        {
                          "id": "92796b9e-7d45-4c80-b5a2-803e79b19203",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"name\": \"\",\n    \"customerDisplayName\": \"\",\n    \"accountContactEmail\": \"\"\n}"
                            },
                            "url": "{{managementApiUrl}}/v1/reward-providers/tangocard"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\n\t\"rewardProvider\": {\n\t\t\"id\": \"TANGOCARD\",\n\t\t\"name\": \"Tangocard\"\n\t},\n\t\"id\": \"\",\n    \"name\": \"\",\n    \"customerIdentifier\": \"\",\n    \"customerDisplayName\": \"\",\n    \"accountIdentifier\": \"\",\n\t\"accountDisplayName\": \"\"\n    \"accountContactEmail\": \"\"\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "60597b26-cf2d-4dec-a78c-54debb9a4ab3",
                      "name": "Update a Tangocard Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"name\": \"\"\r\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/reward-providers/tangocard/{{id}}",
                        "description": "#### Description\r\n\r\nUpdates a Tangocard Provider configuration.\r\n\r\n#### Role required\r\n\r\n`t.rew.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n-|-\r\nid | The id of the reward provider configuration to update\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Type |  Description\r\n-|-|-|-\r\nname | Yes | string | A new name for this reward provider configuration"
                      },
                      "response": [
                        {
                          "id": "2912f42a-51d2-496f-abdb-58297ae087c1",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"name\": \"\"\n}"
                            },
                            "url": "{{managementApiUrl}}/v1/reward-providers/tangocard/{{id}}"
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": ""
                        }
                      ]
                    },
                    {
                      "_postman_id": "2c7eb2a4-6ffd-4db1-81a7-a18604f6070a",
                      "name": "Get a Tangocard Configuration",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/reward-providers/tangocard/{{id}}",
                        "description": "#### Description\r\n\r\nGets a Tangocard Provider configuration.\r\n\r\n#### Role required\r\n\r\n`t.rew.r`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n-|-\r\nid | The id of the reward provider configuration to retrieve\r\n\r\n#### Response object\r\n\r\nThe response is a [Tangocard Configuration object](#the-tangocard-configuration-object)"
                      },
                      "response": [
                        {
                          "id": "ab7a2d78-9d93-4ba2-908a-e3f05e410ec1",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/reward-providers/{{id}}"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\r\n\t\"rewardProvider\": {\r\n\t\t\"id\": \"TANGOCARD\",\r\n\t\t\"name\": \"Tangocard\"\r\n\t},\r\n\t\"id\": \"\",\r\n    \"name\": \"\",\r\n    \"customerIdentifier\": \"\",\r\n    \"customerDisplayName\": \"\",\r\n    \"accountIdentifier\": \"\",\r\n\t\"accountDisplayName\": \"\"\r\n    \"accountContactEmail\": \"\"\r\n}"
                        }
                      ]
                    },
                    {
                      "_postman_id": "62eb794f-6198-4d55-8924-2992c70ae158",
                      "name": "Get Tangocard Account",
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/reward-providers/tangocard/{{id}}/account",
                        "description": "#### Description\r\n\r\nGets Tangocard Account.\r\n\r\n#### Role required\r\n\r\n`t.rew.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n-|-\r\nid | The id of the reward provider configuration to retrieve\r\n\r\n#### Response object\r\n\r\nThe response is a [Tangocard Account object](#the-tangocard-account-object)"
                      },
                      "response": [
                        {
                          "id": "ab0dc51d-2a0c-4677-a4fc-e762da2037f3",
                          "name": "Sucessful Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": "{{managementApiUrl}}/v1/reward-providers/tangocard/{{id}}/account"
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [],
                          "cookie": [],
                          "responseTime": null,
                          "body": "{\r\n\t\"accountIdentifier\": \"\",\r\n\t\"accountNumber\": \"\",\r\n    \"contactEmail\": \"\",\r\n    \"currencyCode\": \"\",\r\n    \"currentBalance\": 0.00,\r\n    \"displayName\": \"\",\r\n\t\"status\": \"\"\r\n}"
                        }
                      ]
                    }
                  ],
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "065683dd-0914-4f6e-8f65-be72369c7111",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "bd27e9d5-15fb-491a-bdfe-cde05110c3ba",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "cade02ed-ad5d-4d8d-b27e-0333233c12c8",
                  "name": "Get list of Reward Provider Configurations",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/reward-providers",
                    "description": "#### Description\r\n\r\nGets a list Reward Provider configurations.\r\n\r\n#### Role required\r\n\r\n`t.rew.r`\r\n\r\n#### Response object\r\n\r\nThe response is an array of the following object:\r\n\r\nName | Type | Description\r\n-|-|-\r\nrewardProvider | [Reward Provider](#the-reward-provider-object) | The reward provider of a configuration\r\nid | guid | The unique identifier for a configuration\r\nname | string | The name of the configuration"
                  },
                  "response": [
                    {
                      "id": "e78f003a-d417-4402-bd4d-0e3bcc2ef00c",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/reward-providers"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n\t{\n\t\t\"rewardProvider\": {\n\t\t\t\"id\": \"TANGOCARD\",\n\t\t\t\"name\": \"Tangocard\"\n\t\t}\n\t\t\"id\": \"\",\n\t    \"name\": \"\"\n\t}\n]"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f945d9aa-d04f-4e56-9fe8-cb016c7e43d8",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ed826af3-096a-47e7-976d-bade58701796",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "4a062e0b-5c74-4437-b43e-e76481a5cb6f",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4cd754cc-0dba-4965-b2b9-553c9e36bedb",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "7165de6d-8e1c-40e4-b581-f69c55932177",
          "name": "Schemes",
          "description": "",
          "item": [
            {
              "_postman_id": "8ad29eec-f6ef-4c78-ad91-d57dba5f3843",
              "name": "Collection Schemes",
              "description": "\r\nCollection Scheme objects allow you to perform updates to your payment scheme collection settings. The API allows you to create new schemes, and add or update scheme country settings. You can retrieve individual schemes as well as a list of all your schemes for a given client.\r\n\r\n## The collection scheme object\r\n\r\nThe collection scheme object holds details about a collection scheme, and is the parent to one or many scheme settings.\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nid | guid | The unique identifier of the object\r\nname | string | The scheme name \r\nschemeSettings | array | An array of `SchemeSetting` objects \r\n\r\n## The scheme setting object\r\n\r\nThe scheme settings object holds details that concern individual countries' available payment methods. \r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nid | guid | The unique identifier of the object\r\ncountry | string | The country code this scheme setting will apply to\r\npaymentMethods | array | An array of `PaymentMethod` objects \r\n\r\n## The payment method object\r\n\r\nThe payment method object holds details that concern a particular payment method's availablilty.\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\npspId | guid | The unique identifier of the PSP (Payment Service Provider) providing services to the payment method\r\npaymentMethodType | string | The name of the payment payment. ie. `visa-debit`, `paypal`, etc.\r\nenabled | bool | Boolean value that determines if this payment method is currently enabled. \r\nkey | string | A composite value of `pspId` and `paymentMethodType`\r\n",
              "item": [
                {
                  "_postman_id": "23d0f3a2-7922-487b-abe6-016e7f6caf8b",
                  "name": "Create a Scheme",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"overrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/collect",
                    "description": "#### Description \n\nCreates a new collection scheme.\n\n#### Role required\n\n`t.sch.a`"
                  },
                  "response": [
                    {
                      "id": "b4335f8a-6052-45aa-af91-d27beee91254",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"overrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/collect"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"overrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "bd083408-e583-4824-985b-67b902e39437",
                  "name": "Get List of Schemes",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/collect",
                    "description": "#### Description \n\nGet a list to collection schemes.\n\n#### Role required\n\n`t.sch.r`"
                  },
                  "response": [
                    {
                      "id": "21b0f487-db0c-4df5-ac98-9a49f7d5f08b",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/collect"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n    \t\"id\": \"\",\n        \"name\": \"\",\n        \"paymentProviderConfigurations\": [],\n        \"collectSchemeOverrides\": [\n            {\n                \"isGlobal\": \"\",\n                \"country\": \"\",\n                \"paymentProviderConfigurationId\": \"\",\n                \"paymentMethod\": \"\",\n                \"enabled\": \"\"\n            }\n        ]\n    }\n]"
                    }
                  ]
                },
                {
                  "_postman_id": "f7472dd1-2841-4e99-978b-a6bb91297c66",
                  "name": "Get a Scheme",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/collect/{{id}}",
                    "description": "#### Description \n\nGet a collection scheme.\n\n#### Role required\n\n`t.sch.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nid | The id of the scheme to get"
                  },
                  "response": [
                    {
                      "id": "ea7263ae-2781-4db0-b20b-7b67232964a7",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/collect/{{id}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{ \r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"overrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}\r\n"
                    }
                  ]
                },
                {
                  "_postman_id": "3ecf0965-9615-4242-b441-10f2d476496c",
                  "name": "Update a Scheme",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"collectSchemeOverrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/collect/{{schemeId}}",
                    "description": "#### Description \n\nUpdates a scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nschemeId | The id of the scheme to be updated"
                  },
                  "response": [
                    {
                      "id": "ca194e66-3b2d-4af3-a926-9fe11ddf42b7",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"clientPspConfigurations\": [],\r\n\t\"collectSchemeOverrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"clientPspConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/collect/{{schemeId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{ \r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"collectSchemeOverrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "96bda309-4b05-426a-8efe-0537d03f7c4e",
                  "name": "Delete a Scheme",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}}/v1/collect/{{schemeId}}",
                    "description": "#### Description \n\nDeletes a collection scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nschemeId | The id of the scheme to delete"
                  },
                  "response": [
                    {
                      "id": "3380f369-5032-46ca-8caf-13bdb5ab4d4a",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/collect/{{schemeId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "57551b22-20a1-4c0a-874c-9243c4a9eb10",
              "name": "Payout Schemes",
              "description": "Payout Scheme objects are where you define the payout options for your various applications. We group these together into a payout scheme.\r\n\r\n## The Payout Scheme object\r\n\r\nThe payout scheme object holds details about a payout scheme.\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nid | guid | The unique identifier of the scheme\r\nname | string | The scheme name \r\ncurrencies | string array | An array of `currency` codes this scheme supports\r\nrewardProviders | guid array | An array of reward provider configuration ids linked to this scheme\r\nrewards | reward array | An array of [Reward Configuration](#the-reward-configuration-object) objects defining the rewards for this scheme \r\n\r\n## The Reward Configuration object\r\n\r\nThe reward configuration object holds details of the rewards available for a specific currency.\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\ncurrency | string | The `currency` code the rewards applies to\r\ngeneralRewards | guid array | An array of reward ids that could apply to any country.\r\ncountryRewards | country reward array | An array of [Country Reward](#the-country-reward-object) objects\r\n\r\n## The Country Reward object\r\n\r\nThe country reward object holds details of the rewards available for a single country\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\ncountry | string | The `country` code the rewards apply to\r\nrewards | guid array | An array of reward ids that apply to this country\r\n\r\n## General Rewards vs Country Rewards\r\n\r\nThe [Reward Object](#the-reward-configuration-object) above defines both **General** and **Country** rewards. \r\n\r\nWe offer these guidelines when setting up scheme rewards:\r\n\r\n- Setup your **General Rewards** to contain rewards that you would like to be made available to **any** user, irrespective of the country the reward would normally be used in.\r\n- Setup **Country Rewards** to contain rewards that will only be available in a specific country. \r\n\r\nThe Whitelabel API has endpoints that allow you to request payout scheme payment options based on a currency and country and it is these API endpoints that will filter the General and Country rewards accordingly.\r\n",
              "item": [
                {
                  "_postman_id": "f37f0abb-065a-4904-848c-95dd716b36ee",
                  "name": "Create a Scheme",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/payout",
                    "description": "#### Description \n\nCreates a new payout scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Request object\n\nName | Required | Type | Description\n-|-|-|-\nname | Yes | string | The scheme name \ncurrencies | Yes | string array | An array of `currency` codes this scheme supports\nrewardProviders | No | guid array | An array of reward provider configuration ids linked to this scheme\nrewards | No | [Reward Configuration](#the-reward-configuration-object) array | Defines the rewards for this scheme"
                  },
                  "response": [
                    {
                      "id": "bddcd0fe-28fb-417f-b736-941da7fedd8d",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/payout"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{ \r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "a6ec64f2-ea18-4872-a35e-058fb9fd9878",
                  "name": "Get List of Schemes",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/payout",
                    "description": "#### Description \n\nGet a list to payout schemes.\n\n#### Role required\n\n`t.sch.r`"
                  },
                  "response": [
                    {
                      "id": "cc23e532-4f07-4ea8-bea9-f517602a9e3c",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Hmac {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/payout"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\r\n\t{ \r\n\t\t\"id\": \"\",\r\n\t\t\"name\": \"\",\r\n\t\t\"currencies\": [],\r\n\t\t\"rewardProviders\": [],\r\n\t\t\"rewards\": [\r\n\t\t\t{\r\n\t\t\t\t\"currency\": \"\",\r\n\t\t\t\t\"generalRewards\": [],\r\n\t\t\t\t\"countryRewards\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\t\"rewards\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t    \"brand\": {\r\n\t\t\t\t\t\t\t        \"brandKey\": \"\",\r\n\t\t\t\t\t\t\t        \"brandName\": \"\",\r\n\t\t\t\t\t\t\t        \"createdDate\": \"\",\r\n\t\t\t\t\t\t\t        \"description\": \"\",\r\n\t\t\t\t\t\t\t        \"disclaimer\": \"\",\r\n\t\t\t\t\t\t\t        \"imageUrls\": [\r\n\t\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t\t                \"width\": 80\r\n\t\t\t\t\t\t\t            }\r\n\t\t\t\t\t\t\t        ],\r\n\t\t\t\t\t\t\t        \"lastUpdateDate\": \"\",\r\n\t\t\t\t\t\t\t        \"requirements\": {\r\n\t\t\t\t\t\t\t            \"alwaysShowDisclaimer\": false,\r\n\t\t\t\t\t\t\t            \"disclaimerInstructions\": \"\",\r\n\t\t\t\t\t\t\t            \"displayInstructions\": \"\",\r\n\t\t\t\t\t\t\t            \"termsAndConditionsInstructions\": \"\"\r\n\t\t\t\t\t\t\t        },\r\n\t\t\t\t\t\t\t        \"shortDescription\": \"\",\r\n\t\t\t\t\t\t\t        \"status\": \"\",\r\n\t\t\t\t\t\t\t        \"terms\": \"\"\r\n\t\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t\t    \"countries\": [],\r\n\t\t\t\t\t\t\t    \"createdDate\": \"\",\r\n\t\t\t\t\t\t\t    \"credentialTypes\": [],\r\n\t\t\t\t\t\t\t    \"currencyCode\": \"\",\r\n\t\t\t\t\t\t\t    \"exchangeRateRule\": \"\",\r\n\t\t\t\t\t\t\t    \"isWholeAmountValueRequired\": false,\r\n\t\t\t\t\t\t\t    \"lastUpdateDate\": \"\",\r\n\t\t\t\t\t\t\t    \"provider\": {\r\n\t\t\t\t\t\t\t        \"id\": \"\",\r\n\t\t\t\t\t\t\t        \"name\": \"\"\r\n\t\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t\t    \"redemptionInstructions\": \"\",\r\n\t\t\t\t\t\t\t    \"rewardId\": \"\",\r\n\t\t\t\t\t\t\t    \"providerRewardId\": \"\",\r\n\t\t\t\t\t\t\t    \"rewardName\": \"\",\r\n\t\t\t\t\t\t\t    \"rewardType\": \"\",\r\n\t\t\t\t\t\t\t    \"status\": \"\",\r\n\t\t\t\t\t\t\t    \"tags\": [],\r\n\t\t\t\t\t\t\t    \"minValue\": 0.00,\r\n\t\t\t\t\t\t\t    \"maxValue\": 0.00,\r\n\t\t\t\t\t\t\t    \"valueType\": \"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n]"
                    }
                  ]
                },
                {
                  "_postman_id": "286b1557-3959-4d09-8a18-227b2268da46",
                  "name": "Get a Scheme",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/payout/{{id}}",
                    "description": "#### Description \n\nGet a collection scheme.\n\n#### Role required\n\n`t.sch.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nid | The id of the scheme to get"
                  },
                  "response": [
                    {
                      "id": "ca089b62-52a4-46b4-9b90-ecd1c0d4accb",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/payout/{{id}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{ \r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t    \"brand\": {\r\n\t\t\t\t\t\t        \"brandKey\": \"\",\r\n\t\t\t\t\t\t        \"brandName\": \"\",\r\n\t\t\t\t\t\t        \"createdDate\": \"\",\r\n\t\t\t\t\t\t        \"description\": \"\",\r\n\t\t\t\t\t\t        \"disclaimer\": \"\",\r\n\t\t\t\t\t\t        \"imageUrls\": [\r\n\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t                \"width\": 80\r\n\t\t\t\t\t\t            }\r\n\t\t\t\t\t\t        ],\r\n\t\t\t\t\t\t        \"lastUpdateDate\": \"\",\r\n\t\t\t\t\t\t        \"requirements\": {\r\n\t\t\t\t\t\t            \"alwaysShowDisclaimer\": false,\r\n\t\t\t\t\t\t            \"disclaimerInstructions\": \"\",\r\n\t\t\t\t\t\t            \"displayInstructions\": \"\",\r\n\t\t\t\t\t\t            \"termsAndConditionsInstructions\": \"\"\r\n\t\t\t\t\t\t        },\r\n\t\t\t\t\t\t        \"shortDescription\": \"\",\r\n\t\t\t\t\t\t        \"status\": \"\",\r\n\t\t\t\t\t\t        \"terms\": \"\"\r\n\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t    \"countries\": [],\r\n\t\t\t\t\t\t    \"createdDate\": \"\",\r\n\t\t\t\t\t\t    \"credentialTypes\": [],\r\n\t\t\t\t\t\t    \"currencyCode\": \"\",\r\n\t\t\t\t\t\t    \"exchangeRateRule\": \"\",\r\n\t\t\t\t\t\t    \"isWholeAmountValueRequired\": false,\r\n\t\t\t\t\t\t    \"lastUpdateDate\": \"\",\r\n\t\t\t\t\t\t    \"provider\": {\r\n\t\t\t\t\t\t        \"id\": \"\",\r\n\t\t\t\t\t\t        \"name\": \"\"\r\n\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t    \"redemptionInstructions\": \"\",\r\n\t\t\t\t\t\t    \"rewardId\": \"\",\r\n\t\t\t\t\t\t    \"providerRewardId\": \"\",\r\n\t\t\t\t\t\t    \"rewardName\": \"\",\r\n\t\t\t\t\t\t    \"rewardType\": \"\",\r\n\t\t\t\t\t\t    \"status\": \"\",\r\n\t\t\t\t\t\t    \"tags\": [],\r\n\t\t\t\t\t\t    \"minValue\": 0.00,\r\n\t\t\t\t\t\t    \"maxValue\": 0.00,\r\n\t\t\t\t\t\t    \"valueType\": \"\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "4cb70c4e-ce82-4f45-a742-1b2f9731c39d",
                  "name": "Get List of Payout Options for Scheme",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/payout/{{schemeId}}/options",
                    "description": "#### Description \n\nGet a list to payout options for a scheme.\n\n#### Role required\n\n`t.sch.r`"
                  },
                  "response": [
                    {
                      "id": "6d9828c4-9c0d-4b2a-8241-e37b61908b09",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Hmac {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/payout/{{schemeId}}/options"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\r\n\t{ \r\n\t\t\"id\": \"\",\r\n\t\t\"rewards\": [\r\n\t\t\t{\r\n\t\t\t\t\"currency\": \"\",\r\n\t\t\t\t\"generalRewards\": [],\r\n\t\t\t\t\"countryRewards\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\t\"rewards\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t    \"brand\": {\r\n\t\t\t\t\t\t\t        \"brandKey\": \"\",\r\n\t\t\t\t\t\t\t        \"brandName\": \"\",\r\n\t\t\t\t\t\t\t        \"createdDate\": \"\",\r\n\t\t\t\t\t\t\t        \"description\": \"\",\r\n\t\t\t\t\t\t\t        \"disclaimer\": \"\",\r\n\t\t\t\t\t\t\t        \"imageUrls\": [\r\n\t\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t\t                \"width\": 80\r\n\t\t\t\t\t\t\t            }\r\n\t\t\t\t\t\t\t        ],\r\n\t\t\t\t\t\t\t        \"lastUpdateDate\": \"\",\r\n\t\t\t\t\t\t\t        \"requirements\": {\r\n\t\t\t\t\t\t\t            \"alwaysShowDisclaimer\": false,\r\n\t\t\t\t\t\t\t            \"disclaimerInstructions\": \"\",\r\n\t\t\t\t\t\t\t            \"displayInstructions\": \"\",\r\n\t\t\t\t\t\t\t            \"termsAndConditionsInstructions\": \"\"\r\n\t\t\t\t\t\t\t        },\r\n\t\t\t\t\t\t\t        \"shortDescription\": \"\",\r\n\t\t\t\t\t\t\t        \"status\": \"\",\r\n\t\t\t\t\t\t\t        \"terms\": \"\"\r\n\t\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t\t    \"countries\": [],\r\n\t\t\t\t\t\t\t    \"createdDate\": \"\",\r\n\t\t\t\t\t\t\t    \"credentialTypes\": [],\r\n\t\t\t\t\t\t\t    \"currencyCode\": \"\",\r\n\t\t\t\t\t\t\t    \"exchangeRateRule\": \"\",\r\n\t\t\t\t\t\t\t    \"isWholeAmountValueRequired\": false,\r\n\t\t\t\t\t\t\t    \"lastUpdateDate\": \"\",\r\n\t\t\t\t\t\t\t    \"provider\": {\r\n\t\t\t\t\t\t\t        \"id\": \"\",\r\n\t\t\t\t\t\t\t        \"name\": \"\"\r\n\t\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t\t    \"redemptionInstructions\": \"\",\r\n\t\t\t\t\t\t\t    \"rewardId\": \"\",\r\n\t\t\t\t\t\t\t    \"providerRewardId\": \"\",\r\n\t\t\t\t\t\t\t    \"rewardName\": \"\",\r\n\t\t\t\t\t\t\t    \"rewardType\": \"\",\r\n\t\t\t\t\t\t\t    \"status\": \"\",\r\n\t\t\t\t\t\t\t    \"tags\": [],\r\n\t\t\t\t\t\t\t    \"minValue\": 0.00,\r\n\t\t\t\t\t\t\t    \"maxValue\": 0.00,\r\n\t\t\t\t\t\t\t    \"valueType\": \"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n]"
                    }
                  ]
                },
                {
                  "_postman_id": "1478d3ee-5421-4f6c-8304-db371163e870",
                  "name": "Update a Scheme",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/payout/{{id}}",
                    "description": "#### Description \n\nUpdates a scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nid | The id of the scheme to be updated\n\n\n#### Request Object\n\nName | Required | Type | Description\n-|-|-|-\nname | Yes | string | The scheme name \ncurrencies | Yes | string array | An array of `currency` codes this scheme supports\nrewardProviders | No | guid array | An array of reward provider configuration ids linked to this scheme\nrewards | No | [Reward Configuration](#the-reward-configuration-object) array | Defines the rewards for this scheme"
                  },
                  "response": [
                    {
                      "id": "eeb75375-25cd-4b52-b855-8eefbe51476b",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                        },
                        "url": "{{managementApiUrl}}/v1/payout/{{id}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{ \r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "81d05a45-db3a-4517-b351-884ad29c64b8",
                  "name": "Delete a Scheme",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/payout/{{id}}",
                    "description": "#### Description \n\nDeletes a collection scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nid | The id of the scheme to delete"
                  },
                  "response": [
                    {
                      "id": "342f2685-1982-49f3-82d6-faa5ca14e8f4",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Hmac {{token}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{managementApiUrl}}/v1/payout/{{schemeId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63085b5b-7027-4e15-95aa-185f185ced79",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "b09366f8-89a3-464b-b986-774493cacf0a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "420ca972-d2ae-496f-9e16-ddfbccc26ebb",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "67468f37-c46e-4d32-a803-419637a2c940",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "7fba9a88-e916-43b1-955e-dd2efb7645d6",
          "name": "Rewards Catalog",
          "description": "",
          "item": [
            {
              "_postman_id": "318f17fc-5c2d-467d-8df9-641874e409da",
              "name": "Get a Reward",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/catalog/{rewardId}",
                "description": "#### Description\n\nGets a reward from the catalog by it's ID\n\n#### Role required\n\n`t.cat.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nrewardId | The id of the reward to get"
              },
              "response": [
                {
                  "id": "c899a464-a8e1-4c7b-88b6-bb23bfe14f3f",
                  "name": "Successful request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/catalog/{rewardId}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8a",
                      "description": "",
                      "type": "text"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"brand\": {\n        \"brandKey\": \"\",\n        \"brandName\": \"\",\n        \"createdDate\": \"\",\n        \"description\": \"\",\n        \"disclaimer\": \"\",\n        \"imageUrls\": [\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 80\n            },\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 130\n            },\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 200\n            },\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 278\n            },\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 300\n            },\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 1200\n            }\n        ],\n        \"lastUpdateDate\": \"\",\n        \"requirements\": {\n            \"alwaysShowDisclaimer\": false,\n            \"disclaimerInstructions\": \"\",\n            \"displayInstructions\": \"\",\n            \"termsAndConditionsInstructions\": \"\"\n        },\n        \"shortDescription\": \"\",\n        \"status\": \"\",\n        \"terms\": \"\"\n    },\n    \"countries\": [],\n    \"createdDate\": \"\",\n    \"credentialTypes\": [],\n    \"currencyCode\": \"\",\n    \"exchangeRateRule\": \"\",\n    \"isWholeAmountValueRequired\": false,\n    \"lastUpdateDate\": \"\",\n    \"provider\": {\n        \"id\": \"\",\n        \"name\": \"\"\n    },\n    \"redemptionInstructions\": \"\",\n    \"rewardId\": \"\",\n    \"providerRewardId\": \"\",\n    \"rewardName\": \"\",\n    \"rewardType\": \"\",\n    \"status\": \"\",\n    \"tags\": [],\n    \"minValue\": 0.00,\n    \"maxValue\": 0.00,\n    \"valueType\": \"\"\n}"
                }
              ]
            },
            {
              "_postman_id": "1a4c0368-7977-41b6-9617-bf7eae739ca1",
              "name": "Get a list of Rewards by Ids",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rewardIds\": []\n}"
                },
                "url": "{{managementApiUrl}}/v1/catalog/rewards",
                "description": "#### Description\n\nGets a list of rewards from the catalog by their ID's\n\n#### Role required\n\n`t.cat.r`\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nrewardIds | Yes | An array of GUID's for the requested rewards."
              },
              "response": [
                {
                  "id": "6655c8f7-bcfd-4935-83cd-1df70a17ca0c",
                  "name": "Successful request ",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"rewardIds\": []\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/catalog/rewards"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "description": "",
                      "type": "text"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"brand\": {\n            \"brandKey\": \"\",\n            \"brandName\": \"\",\n            \"createdDate\": \"\",\n            \"description\": \"\",\n            \"disclaimer\": \"\",\n            \"imageUrls\": [\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 80\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 130\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 200\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 278\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 300\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 1200\n                }\n            ],\n            \"lastUpdateDate\": \"\",\n            \"requirements\": {\n                \"alwaysShowDisclaimer\": false,\n                \"disclaimerInstructions\": \"\",\n                \"displayInstructions\": \"\",\n                \"termsAndConditionsInstructions\": \"\"\n            },\n            \"shortDescription\": \"\",\n            \"status\": \"\",\n            \"terms\": \"\"\n        },\n        \"countries\": [],\n        \"createdDate\": \"\",\n        \"credentialTypes\": [],\n        \"currencyCode\": \"\",\n        \"exchangeRateRule\": \"\",\n        \"isWholeAmountValueRequired\": false,\n        \"lastUpdateDate\": \"\",\n        \"provider\": {\n            \"id\": \"\",\n            \"name\": \"\"\n        },\n        \"redemptionInstructions\": \"\",\n        \"rewardId\": \"\",\n        \"providerRewardId\": \"\",\n\t    \"rewardName\": \"\",\n\t    \"rewardType\": \"\",\n\t    \"status\": \"\",\n\t    \"tags\": [],\n\t    \"minValue\": 0.00,\n\t    \"maxValue\": 0.00,\n        \"valueType\": \"\"\n    }\n]"
                }
              ]
            },
            {
              "_postman_id": "f15191e6-1145-489d-9b53-ed214edd84eb",
              "name": "Search Catalog for Rewards",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{managementApiUrl}}/v1/catalog?brandName={{brandNames}}&countries={{countries}}&currencies={{currencies}}",
                  "host": [
                    "{{managementApiUrl}}"
                  ],
                  "path": [
                    "v1",
                    "catalog"
                  ],
                  "query": [
                    {
                      "key": "brandName",
                      "value": "{{brandNames}}",
                      "equals": true
                    },
                    {
                      "key": "countries",
                      "value": "{{countries}}",
                      "equals": true
                    },
                    {
                      "key": "currencies",
                      "value": "{{currencies}}",
                      "equals": true
                    }
                  ]
                },
                "description": "#### Description\n\nSearches the catalog for rewards that match the given parameters\n\n#### Role required\n\n`t.cat.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nbrandNames | A comma seperated string of the brand names to search for.\ncountries | A comma seperated string of the countries to search for.\ncurrencies | A comma seperated string of the currencies to search for."
              },
              "response": [
                {
                  "id": "7bc3759e-7e4a-4b7b-a10e-24e9984fb859",
                  "name": "Successful request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{managementApiUrl}}/v1/catalog?brandName={{brandNames}}&countries={{countries}}&currencies={{currencies}}",
                      "host": [
                        "{{managementApiUrl}}"
                      ],
                      "path": [
                        "v1",
                        "catalog"
                      ],
                      "query": [
                        {
                          "key": "brandName",
                          "value": "{{brandNames}}",
                          "equals": true
                        },
                        {
                          "key": "countries",
                          "value": "{{countries}}",
                          "equals": true
                        },
                        {
                          "key": "currencies",
                          "value": "{{currencies}}",
                          "equals": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "content-type",
                      "value": "application/json; charset=utf-8a",
                      "description": "",
                      "type": "text"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"brand\": {\n            \"brandKey\": \"\",\n            \"brandName\": \"\",\n            \"createdDate\": \"\",\n            \"description\": \"\",\n            \"disclaimer\": \"\",\n            \"imageUrls\": [\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 80\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 130\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 200\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 278\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 300\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 1200\n                }\n            ],\n            \"lastUpdateDate\": \"\",\n            \"requirements\": {\n                \"alwaysShowDisclaimer\": false,\n                \"disclaimerInstructions\": \"\",\n                \"displayInstructions\": \"\",\n                \"termsAndConditionsInstructions\": \"\"\n            },\n            \"shortDescription\": \"\",\n            \"status\": \"\",\n            \"terms\": \"\"\n        },\n        \"countries\": [],\n        \"createdDate\": \"\",\n        \"credentialTypes\": [],\n        \"currencyCode\": \"\",\n        \"exchangeRateRule\": \"\",\n        \"isWholeAmountValueRequired\": false,\n        \"lastUpdateDate\": \"\",\n        \"provider\": {\n            \"id\": \"\",\n            \"name\": \"\"\n        },\n        \"redemptionInstructions\": \"\",\n        \"rewardId\": \"\",\n\t    \"providerRewardId\": \"\",\n\t    \"rewardName\": \"\",\n\t    \"rewardType\": \"\",\n\t    \"status\": \"\",\n\t    \"tags\": [],\n\t    \"minValue\": 0.00,\n\t    \"maxValue\": 0.00,\n        \"valueType\": \"\"\n    }\n]"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "89c4dfe8-1a09-47c5-b5e5-70ac9b0dfa64",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "8870720e-117d-424a-b05c-933b3c345864",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "2d3ce1f5-408c-461c-ab73-f2ffb2f3cf35",
          "name": "Notifications",
          "description": "",
          "item": [
            {
              "_postman_id": "541b4c1b-866c-4864-a37b-11448d9f9e9b",
              "name": "Create a Webhook",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"eventType\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
                },
                "url": "{{managementApiUrl}}/v1/webhooks",
                "description": "#### Description\r\n\r\nCreates a Webhook.\r\n\r\n#### Role required\r\n\r\n`t.whk.a`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n- | - | -\r\neventType | Yes | The event type that the webhook will be subscribing to.\r\nurl | Yes | The url of the webhook.\r\nisEnabled | Yes | Sets if the webhook is enabled or not."
              },
              "response": [
                {
                  "id": "3a93b10d-e231-4ee8-bed1-4d4913511d82",
                  "name": "Succesful Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"eventType\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/webhooks"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"\",\n    \"eventType\": \"\",\n    \"url\": \"\",\n    \"isEnabled\": true\n}"
                }
              ]
            },
            {
              "_postman_id": "a5ea5c32-7522-4c55-8d01-76724a2beb19",
              "name": "Get a Webhook",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/webhooks/{{id}}",
                "description": "#### Description\r\n\r\nGets a Webhook.\r\n\r\n#### Role required\r\n\r\n`t.whk.r`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n- | -\r\nid | The id of the Webhook to retrieve."
              },
              "response": [
                {
                  "id": "71b47a9c-aeca-4b0c-a719-91569e2ebd3a",
                  "name": "Successful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/webhooks/{{id}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"\",\n    \"eventType\": \"\",\n    \"url\": \"\",\n    \"isEnabled\": true\n}\n"
                }
              ]
            },
            {
              "_postman_id": "fb876542-d4cc-4566-a836-c5e475450690",
              "name": "Get list of Webhooks",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/webhooks",
                "description": "#### Description\r\n\r\nGets a list of Webhooks.\r\n\r\n#### Role required\r\n\r\n`t.whk.r`"
              },
              "response": [
                {
                  "id": "f7e896b5-ef3a-4bac-98c2-4e46539b1a3c",
                  "name": "Successful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/webhooks"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": \"\",\n        \"eventType\": \"\",\n        \"url\": \"\",\n        \"isEnabled\": true\n    }\n]"
                }
              ]
            },
            {
              "_postman_id": "385b7c96-3e5b-4151-bef1-024ed0f4b751",
              "name": "Update a Webhook",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"eventType\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
                },
                "url": "{{managementApiUrl}}/v1/webhooks/{{id}}",
                "description": "#### Description\r\n\r\nUpdates a Webhook.\r\n\r\n#### Role required\r\n\r\n`t.whk.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n- | -\r\nid | The id of the Webhook to update.\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n- | - | -\r\neventType | Yes | The event type that the webhook will be subscribing to.\r\nurl | Yes | The url of the webhook.\r\nisEnabled | Yes | Sets if the webhook is enabled or not."
              },
              "response": [
                {
                  "id": "35e022e1-1429-41d4-9ed5-e7d43a98adaa",
                  "name": "Successful Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"eventType\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
                    },
                    "url": "{{managementApiUrl}}/v1/webhooks/{{id}}"
                  },
                  "status": "Accepted",
                  "code": 202,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": \"\",\n    \"eventType\": \"\",\n    \"url\": \"\",\n    \"isEnabled\": true\n}"
                }
              ]
            },
            {
              "_postman_id": "7006f3b7-5d94-4d6f-bf68-4c3f2532af16",
              "name": "Delete a Webhook",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/webhooks/{{id}}",
                "description": "#### Description\r\n\r\nDeletes a Webhook.\r\n\r\n#### Role required\r\n\r\n`t.whk.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n- | -\r\nid | The id of the Webhook to delete."
              },
              "response": [
                {
                  "id": "100d6a2e-26fe-4a27-a65c-c5df1da14ef3",
                  "name": "Successful Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/webhooks/{{id}}"
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": null,
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": null
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "277d68da-ac25-49cc-8ab0-f5bff65f34c7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "40670cbf-5237-4526-a97a-fde0ab6ba1e1",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "cf290393-bf52-4b01-adf9-7273a3e3795a",
          "name": "Whitelabel Settings",
          "description": "Client objects allow you to perform updates to clients. The API allows you to create, delete, and update your clients. You can retrieve individual clients as well as a list of all your clients.\r\n\r\n## The client object\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nid | guid | The unique identifier of the object\r\nname | string | The clients name \r\naddress | [address](#the-address-object) object | The client address\r\nwhiteLabelSettings | [White Label document](#the-white-label-settings-object) object | The white label settings for the client. ie. logo, styling document etc.\r\n\r\n## The address object\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nstreetAddress | string | First line of address\r\nextendedAddress | string | Second line of an address if requried\r\nlocality | string | The locality / city\r\nregion | string | The region / state / county\r\npostCode | string | The post code / zip code\r\ncountry | string | The ISO 3166-1 alpha-2 country code",
          "item": [
            {
              "_postman_id": "dcc42e79-ff65-48ab-ad7e-06496a283320",
              "name": "Upload Whitelabel Logo",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "file",
                  "file": {
                    "src": null
                  }
                },
                "url": "{{managementApiUrl}}/v1/settings/logo",
                "description": "#### Description\n\nUploads a logo for the tenants white label settings.\n\n#### Role required\n\n`client-write`"
              },
              "response": [
                {
                  "id": "76785518-c5d2-44d0-ae82-ba6fc1953624",
                  "name": "Successful request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "file",
                      "file": {}
                    },
                    "url": "{{managementApiUrl}}/v1/settings/logo"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\n  \"id\": \"d929d6e2-0b43-4b24-87ef-0dd6c3bcdd02\",\r\n  \"name\": \"Capital Insurance AG\",\r\n  \"address\": {\r\n    \"streetAddress\": \"Suite 19 Argeles Grove\",\r\n    \"extendedAddress\": \"\",\r\n    \"locality\": \"London\",\r\n    \"region\": \"Middlesex\",\r\n    \"postCode\": \"SW1 1LA\",\r\n    \"country\": \"GB\"\r\n  },\r\n  \"whiteLabelSettings\": {\r\n    \"logoUri\": \"\",\r\n    \"styling\": {\r\n      \"stylesheet\": \"\",\r\n      \"inputFieldStyles\" : [\r\n        {\r\n          \"styleName\": \"\",\r\n          \"styles\": [\r\n            {\r\n              \"key\": \"\",\r\n              \"value\": \"\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
                }
              ]
            },
            {
              "_postman_id": "106629ab-3716-4fd7-ba3b-a44a6c9a9606",
              "name": "Upload Whitelabel Styling",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "file",
                  "file": {
                    "src": null
                  }
                },
                "url": "{{managementApiUrl}}/v1/settings/styling",
                "description": "#### Description\n\nUploads a styling document for the tenant's white label settings.\n\n#### Role required\n\n`client-write`"
              },
              "response": [
                {
                  "id": "dd9435f5-213d-4f2c-a9e4-418d7365ea37",
                  "name": "Successful request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "file",
                      "file": {}
                    },
                    "url": "{{managementApiUrl}}/v1/settings/styling"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\n  \"id\": \"d929d6e2-0b43-4b24-87ef-0dd6c3bcdd02\",\r\n  \"name\": \"Capital Insurance AG\",\r\n  \"address\": {\r\n    \"streetAddress\": \"Suite 19 Argeles Grove\",\r\n    \"extendedAddress\": \"\",\r\n    \"locality\": \"London\",\r\n    \"region\": \"Middlesex\",\r\n    \"postCode\": \"SW1 1LA\",\r\n    \"country\": \"GB\"\r\n  },\r\n  \"whiteLabelSettings\": {\r\n    \"logoUri\": \"\",\r\n    \"styling\": {\r\n      \"stylesheet\": \"\",\r\n      \"inputFieldStyles\" : [\r\n        {\r\n          \"styleName\": \"\",\r\n          \"styles\": [\r\n            {\r\n              \"key\": \"\",\r\n              \"value\": \"\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
                }
              ]
            },
            {
              "_postman_id": "fdd9a44f-7dce-4a3c-980c-f748779ef8cb",
              "name": "Get Whitelabel Settings",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/settings",
                "description": "#### Description\n\nRetrieves the a tenants white label settings.\n\n#### Role Required\n\n`client-read`"
              },
              "response": [
                {
                  "id": "63960dfe-bec2-4459-be49-fc5ba50d502f",
                  "name": "Successful request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{managementApiUrl}}/v1/settings"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\n  \"id\": \"d929d6e2-0b43-4b24-87ef-0dd6c3bcdd02\",\r\n  \"name\": \"Capital Insurance AG\",\r\n  \"address\": {\r\n    \"streetAddress\": \"Suite 19 Argeles Grove\",\r\n    \"extendedAddress\": \"\",\r\n    \"locality\": \"London\",\r\n    \"region\": \"Middlesex\",\r\n    \"postCode\": \"SW1 1LA\",\r\n    \"country\": \"GB\"\r\n  }\r\n  \"whiteLabelSettings\": {\r\n    \"logoUri\": \"\",\r\n    \"styling\": {\r\n      \"stylesheet\": \"\",\r\n      \"inputFieldStyles\" : [\r\n        {\r\n          \"styleName\": \"\",\r\n          \"styles\": [\r\n            {\r\n              \"key\": \"\",\r\n              \"value\": \"\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fd40b9f6-f0a7-4190-bb93-66e80fd039d8",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d57342ab-7b4f-4df4-9bc3-eb3adc77d4ad",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "e431af90-ea5d-468b-838f-64603b97999f",
          "name": "Payment Collection",
          "description": "\r\n##### Request structure\r\n\r\nThe following endpoints to manage customers, with orders and payment instructions. While the style is RESTful in nature, the collect API is not a fully REST service.\r\n\r\nIn most cases entities have an `/audit-history` endpoint which can be used to diagnose changes or problems a customer may have settling a payment.\r\n\r\n##### Error Handling\r\n\r\nValidation errors will return a common `400 Bad Request` HTTP status code with a response body in a common format.\r\n\r\nProperty | Type | Description\r\n- | - | -\r\n`errors` | Array[string] | One or many standardized error codes representing the failure.\r\n\r\n",
          "item": [
            {
              "_postman_id": "e38f98d3-3555-43b1-89a0-c8fbf6fc2ca6",
              "name": "Create Order",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"orderRef\": \"testorder\",\r\n\t\"currency\": \"EUR\",\r\n\t\"country\": \"DE\",\r\n\t\"scheme\": \"1a9c661b-608c-4fec-bd03-72a56b5df3b5\"\r\n}"
                },
                "url": "{{managementApiUrl}}/v1/collect/customer/{{customerRef}}/order",
                "description": "This is the first stage required to collect a payment.\r\n\r\nAn order must be given both a unique `customerRef` and `orderRef`. Both of these values are created and owned by you, the API consumer. In both cases the reference fields can be used query current status, view audit history or to cancel, void or reconcile payments.\r\n\r\n#### Request Body\r\n\r\nThe following parameters are sent in JSON format.\r\n\r\nParameter | Type | Description\r\n- | - | -\r\norderRef | string (50 char max) | A unique identifier used to group one or many payment instructions.\r\ncurrency | ISO3 | The currency to collect the payment in.\r\ncountry | ISO2 | The country in which the customer resides to localize payment options.\r\nscheme | string | The identifier of the `Scheme` in which to use.\r\n\r\n#### Validation errors\r\n\r\nOne or many of the following errors may be returned if there were issues validating the request.\r\n\r\nCode | Description\r\n- | - \r\n`CUSTOMER_REF_IS_REQUIRED` | Reference is required.\r\n`CUSTOMER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`CUSTOMER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`ORDER_REF_IS_REQUIRED` | Reference is required.\r\n`ORDER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`ORDER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`CURRENCY_IS_REQUIRED` | Currency is required.\r\n`CURRENCY_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 3 characters.\r\n`COUNTRY_IS_REQUIRED` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`COUNTRY_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 2 characters.\r\n`SCHEME_IS_REQUIRED` | Scheme is required.\r\n`SCHEME_FORMAT_NOT_RECOGNISED` | Scheme was not recognised as a valid `GUID`."
              },
              "response": []
            },
            {
              "_postman_id": "e0078fba-e825-41c2-bb85-ebc07e6f16d5",
              "name": "Get Order",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/collect/customer/{{customerRef}}/order/{{orderRef}}",
                "description": "The following endpoint will return the current state of an order.\n\nOrders must be created before they can be queried.\n\nThe order is identified by both a `customerRef` and an `orderRef`. Both of these values are provided from your own system to ours.\n\nAn `orderRef` needs to be unique to the customer but does not need to be globally unique."
              },
              "response": []
            },
            {
              "_postman_id": "7df35700-b39c-4b24-b2f4-e37f3482d2ec",
              "name": "Get Order Audit History",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/collect/customer/{{customerRef}}/order/{{orderRef}}/audit-history",
                "description": "The following endpoint will return an unstructured list of order events."
              },
              "response": []
            },
            {
              "_postman_id": "a429d1a1-5f36-4e69-b80d-7203302d6c57",
              "name": "Get Customer",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/customer/{{customerRef}}",
                "description": "The following endpoint will return the current state of a customer.\n\nCustomers don't need to be created and as such an authorized API user can query non-existent customers.\n\nThe customer is identified by a `customerRef` - A value provided from your own system to ours."
              },
              "response": []
            },
            {
              "_postman_id": "e459f1de-3fd0-4a99-b365-1034e593fda2",
              "name": "Get Customer Audit History",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/customer/{{customerRef}}/audit-history",
                "description": "The following endpoint will return an unstructured list of customer events."
              },
              "response": []
            },
            {
              "_postman_id": "62bfc7fb-172f-4a10-ae9d-1c82be2e413b",
              "name": "Create Instruction",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"instructionRef\": \"testinstruction\",\r\n\t\"amount\": \"5.00\",\r\n\t\"openDate\": \"2019-03-08\",\r\n\t\"dueDate\": \"2019-03-08\"\r\n}"
                },
                "url": "{{managementApiUrl}}/v1/payout/customer/{{customerRef}}/order/{{orderRef}}/instruction",
                "description": "An order requires one or many payment instructions to be set up. These instructions act as a payment schedule and contain the amount to be collected, the open date and the due date of the collection.\r\n\r\nAn instruction must be given a unique `instructionRef` (unique to the customer's order). This reference can be used in the future to look up or make amendments to an instruction.\r\n\r\n#### Request Body\r\n\r\nThe following parameters are sent in JSON format.\r\n\r\nParameter | Type | Description\r\n- | - | -\r\ninstructionRef | string (50 char max) | A unique identifier used to represent a single payment instruction.\r\namount | Decimal | The amount to collect.\r\nopenDate | Date (YYYY-MM-DD) | The date in which a manual payment can be made from.\r\ndueDate | Date (YYYY-MM-DD) | The date in which a manual payment is to be settled by, or if automated will be taken on.\r\n\r\n#### Validation errors\r\n\r\nOne or many of the following errors may be returned if there were issues validating the request.\r\n\r\nCode | Description\r\n- | - \r\n`CUSTOMER_REF_IS_REQUIRED` | Reference is required.\r\n`CUSTOMER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`CUSTOMER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`ORDER_REF_IS_REQUIRED` | Reference is required.\r\n`ORDER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`ORDER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`INSTRUCTION_REF_IS_REQUIRED` | Reference is required.\r\n`INSTRUCTION_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`INSTRUCTION_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`AMOUNT_IS_REQUIRED` | Amount is required.\r\n`AMOUNT_FORMAT_NOT_RECOGNISED` | Amount must be in decimal form.\r\n`AMOUNT_OUT_OF_RANGE` | Amount must be greater than zero.\r\n`OPEN_DATE_IS_REQUIRED` | Open Date is required.\r\n`OPEN_DATE_FORMAT_NOT_RECOGNISED` | Due Date could not be read as a valid date.\r\n`DUE_DATE_IS_REQUIRED` | Due Date is required.\r\n`DUE_DATE_FORMAT_NOT_RECOGNISED` | Due Date could not be read as a valid date."
              },
              "response": []
            },
            {
              "_postman_id": "5ef8499d-5779-408f-9380-eb5190612d35",
              "name": "Get Instruction",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}/instruction/{{instructionRef}}",
                "description": "The following endpoint will return the current state of an instruction.\n\nInstructions must be created before they can be queried.\n\nThe instruction is identified by a `customerRef`, an `orderRef` and an `instructionRef`. These values are provided from your own system to ours.\n\nAn `instructionRef` needs to be unique to the order but does not need to be globally unique."
              },
              "response": []
            },
            {
              "_postman_id": "63f350c1-665a-4010-ab7c-00f30fe89e62",
              "name": "Get Instruction Audit History",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{managementApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}",
                "description": "The following endpoint will return an unstructured list of instruction events."
              },
              "response": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7737b2e2-4b03-4a69-be26-4a37d2c57250",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b217333c-bf6a-427c-a1fd-da42c032f13f",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "36db645f-b09a-4ef1-9275-d6011cba3ae1",
          "name": "Payment Payout",
          "description": "\r\n##### Request structure\r\n\r\nThe following endpoints to manage customers, with orders and payment instructions. While the style is RESTful in nature, the collect API is not a fully REST service.\r\n\r\nIn most cases entities have an `/audit-history` endpoint which can be used to diagnose changes or problems a customer may have settling a payment.\r\n\r\n##### Error Handling\r\n\r\nValidation errors will return a common `400 Bad Request` HTTP status code with a response body in a common format.\r\n\r\nProperty | Type | Description\r\n- | - | -\r\n`errors` | Array[string] | One or many standardized error codes representing the failure.\r\n\r\n",
          "item": [
            {
              "_postman_id": "f3887367-fe71-4821-94fe-cb56aeb275da",
              "name": "Create Order",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"orderRef\": \"\",\r\n\t\"currency\": \"\",\r\n\t\"country\": \"\",\r\n\t\"scheme\": \"\"\r\n}"
                },
                "url": "{{payoutApiUrl}}/v1/customer/{{customerRef}}/order",
                "description": "This is the first stage required to make a payment.\r\n\r\nAn order must be given both a unique `customerRef` and `orderRef`. Both of these values are created and owned by you, the API consumer. In both cases the reference fields can be used query current status, view audit history or to cancel, void or reconcile payments.\r\n\r\n#### Request Body\r\n\r\nThe following parameters are sent in JSON format.\r\n\r\nParameter | Type | Description\r\n- | - | -\r\norderRef | string (50 char max) | A unique identifier used to group one or many payment instructions.\r\ncurrency | ISO3 | The currency to make the payment in.\r\ncountry | ISO2 | The country in which the customer resides to localize payment options.\r\nscheme | string | The identifier of the `Scheme` in which to use.\r\n\r\n#### Validation errors\r\n\r\nOne or many of the following errors may be returned if there were issues validating the request.\r\n\r\nCode | Description\r\n- | - \r\n`CUSTOMER_REF_IS_REQUIRED` | Reference is required.\r\n`CUSTOMER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`CUSTOMER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`ORDER_REF_IS_REQUIRED` | Reference is required.\r\n`ORDER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`ORDER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`CURRENCY_IS_REQUIRED` | Currency is required.\r\n`CURRENCY_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 3 characters.\r\n`COUNTRY_IS_REQUIRED` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`COUNTRY_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 2 characters.\r\n`SCHEME_IS_REQUIRED` | Scheme is required.\r\n`SCHEME_FORMAT_NOT_RECOGNISED` | Scheme was not recognised as a valid `GUID`."
              },
              "response": []
            },
            {
              "_postman_id": "11aa4668-3658-4946-bacb-3eaa00c1bde3",
              "name": "Get Order",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{payoutApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}",
                "description": "The following endpoint will return the current state of an order.\n\nOrders must be created before they can be queried.\n\nThe order is identified by both a `customerRef` and an `orderRef`. Both of these values are provided from your own system to ours.\n\nAn `orderRef` needs to be unique to the customer but does not need to be globally unique."
              },
              "response": []
            },
            {
              "_postman_id": "9f47b869-1c03-460e-8455-e732f1746dca",
              "name": "Get Order Audit History",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{payoutApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}/audit-history",
                "description": "The following endpoint will return an unstructured list of order events."
              },
              "response": []
            },
            {
              "_postman_id": "85fd3494-d41e-4f4a-b24c-7bb3937d4144",
              "name": "Get Customer",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{payoutApiUrl}}/v1/customer/{{customerRef}}",
                "description": "The following endpoint will return the current state of a customer.\n\nCustomers don't need to be created and as such an authorized API user can query non-existent customers.\n\nThe customer is identified by a `customerRef` - A value provided from your own system to ours."
              },
              "response": []
            },
            {
              "_postman_id": "6e39f47b-0ec8-4e45-82e1-e7b2eed8d6b8",
              "name": "Get Customer Audit History",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{payoutApiUrl}}/v1/customer/{{customerRef}}/audit-history",
                "description": "The following endpoint will return an unstructured list of customer events."
              },
              "response": []
            },
            {
              "_postman_id": "cf8a2d98-f21b-4b81-8733-c33f5d1b3655",
              "name": "Create Instruction",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"instructionRef\": \"\",\r\n\t\"amount\": \"\",\r\n\t\"openDate\": \"\",\r\n\t\"dueDate\": \"\"\r\n}"
                },
                "url": "{{payoutApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}/instruction",
                "description": "An order requires one or many payment instructions to be set up. These instructions act as a payment schedule and contain the amount to be paid out, the open date and the due date of the payment. NOTE: Only one payment instruction is currently supported.\r\n\r\nAn instruction must be given a unique `instructionRef` (unique to the customer's order). This reference can be used in the future to look up or make amendments to an instruction.\r\n\r\nUn-like collection instructions, this instruction being created will be used later for either a reward or cash transaction.\r\n\r\n#### Request Body\r\n\r\nThe following parameters are sent in JSON format.\r\n\r\nParameter | Type | Description\r\n- | - | -\r\ninstructionRef | string (50 char max) | A unique identifier used to represent a single payment instruction.\r\namount | Decimal | The amount to pay out.\r\nopenDate | Date (YYYY-MM-DD) | The date in which a manual payment can be made from.\r\ndueDate | Date (YYYY-MM-DD) | The date in which a manual payment is to be settled by, or if automated will be taken on.\r\n\r\n#### Validation errors\r\n\r\nOne or many of the following errors may be returned if there were issues validating the request.\r\n\r\nCode | Description\r\n- | - \r\n`CUSTOMER_REF_IS_REQUIRED` | Reference is required.\r\n`CUSTOMER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`CUSTOMER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`ORDER_REF_IS_REQUIRED` | Reference is required.\r\n`ORDER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`ORDER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`INSTRUCTION_REF_IS_REQUIRED` | Reference is required.\r\n`INSTRUCTION_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`INSTRUCTION_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`AMOUNT_IS_REQUIRED` | Amount is required.\r\n`AMOUNT_FORMAT_NOT_RECOGNISED` | Amount must be in decimal form.\r\n`AMOUNT_OUT_OF_RANGE` | Amount must be greater than zero.\r\n`OPEN_DATE_IS_REQUIRED` | Open Date is required.\r\n`OPEN_DATE_FORMAT_NOT_RECOGNISED` | Due Date could not be read as a valid date.\r\n`DUE_DATE_IS_REQUIRED` | Due Date is required.\r\n`DUE_DATE_FORMAT_NOT_RECOGNISED` | Due Date could not be read as a valid date."
              },
              "response": []
            },
            {
              "_postman_id": "dd7b93cd-37fc-4b4e-9f85-659f30f4d8a4",
              "name": "Get Instruction",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{payoutApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}/instruction/{{instructionRef}}",
                "description": "The following endpoint will return the current state of an instruction.\n\nInstructions must be created before they can be queried.\n\nThe instruction is identified by a `customerRef`, an `orderRef` and an `instructionRef`. These values are provided from your own system to ours.\n\nAn `instructionRef` needs to be unique to the order but does not need to be globally unique."
              },
              "response": []
            },
            {
              "_postman_id": "bbed1b37-5a4c-47b6-a466-18b2fd33303a",
              "name": "Get Instruction Audit History",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{payoutApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}",
                "description": "The following endpoint will return an unstructured list of instruction events."
              },
              "response": []
            },
            {
              "_postman_id": "f710cceb-08b3-4232-8c74-8b9fb57f7115",
              "name": "Create Payment Token",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"customerRef\": \"\",\r\n    \"orderRef\": \"\",\r\n    \"instructionRef\": \"\",\r\n    \"capture\": \"\",\r\n    \"successUri\": \"\",\r\n    \"rejectedUri\": \"\",\r\n    \"cancelledUri\": \"\"\r\n}"
                },
                "url": "{{payoutApiUrl}}/v1/token",
                "description": "Once you have created an Order and an Instruction for a Customer you are ready to generate a customer payment token.\r\n\r\nThe following request will generate a single-use bearer token, allowing your customer to either capture a single payment or reward.\r\n\r\n#### Request Body\r\n\r\nThe following parameters are sent in JSON format.\r\n\r\nParameter | Type | Description\r\n- | - | -\r\ncustomerRef | string (50 char max) | The unique reference used to represent a customer.\r\norderRef | string (50 char max) | The unique reference used to represent an order.\r\ninstructionRef | string (50 char max) | The unique reference used to represent a payment instruction.\r\ncapture | Type | `DIRECT_REWARD`\r\nsuccessUri | string (128 char max) | The URI the user journey should be redirected to in the event of an off-site payment.\r\nrejectedUri | string (128 char max) | The URI the user journey should be redirected to in the event of an off-site payment.\r\ncancelledUri | string (128 char max) | The URI the user journey should be redirected to in the event of an off-site payment.\r\n\r\n#### Validation errors\r\n\r\nOne or many of the following errors may be returned if there were issues validating the request.\r\n\r\nCode | Description\r\n- | - \r\n`CUSTOMER_REF_IS_REQUIRED` | Reference is required.\r\n`CUSTOMER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`CUSTOMER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`ORDER_REF_IS_REQUIRED` | Reference is required.\r\n`ORDER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`ORDER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`INSTRUCTION_REF_IS_REQUIRED` | Reference is required.\r\n`INSTRUCTION_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`INSTRUCTION_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`CAPTURE_IS_REQUIRED` | Capture is required.\r\n`CAPTURE_NOT_RECOGNISED` | Capture must be either `DIRECT_SALE` or `BILLING_DETAILS`.\r\n`SUCCESS_URI_IS_REQUIRED` | Success URI is required.\r\n`SUCCESS_URI_LENGTH_OUT_OF_RANGE` | Success URI cannot exceed 128 characters.\r\n`SUCCESS_URI_FORMAT_NOT_RECOGNISED` | Success URI format is invalid.\r\n`REJECTED_URI_IS_REQUIRED` | Rejected URI is required.\r\n`REJECTED_URI_LENGTH_OUT_OF_RANGE` | Rejected URI cannot exceed 128 characters.\r\n`REJECTED_URI_FORMAT_NOT_RECOGNISED` | Rejected URI format is invalid.\r\n`CANCELLED_URI_IS_REQUIRED` | Cancelled URI is required.\r\n`CANCELLED_URI_LENGTH_OUT_OF_RANGE` | Cancelled URI cannot exceed 128 characters.\r\n`CANCELLED_URI_FORMAT_NOT_RECOGNISED` | Cancelled URI format is invalid."
              },
              "response": [
                {
                  "id": "207386a4-0def-41d5-ab51-a2a77effa124",
                  "name": "Create Payment Token",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"customerRef\": \"\",\n    \"orderRef\": \"\",\n    \"instructionRef\": \"\",\n    \"capture\": \"\",\n    \"successUri\": \"\",\n    \"rejectedUri\": \"\",\n    \"cancelledUri\": \"\"\n}"
                    },
                    "url": "https://{{transactionApiUrl}}/v1/token"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": null,
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\n\t\"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\r\n\t\"expires\": 1544717374\r\n}"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7737b2e2-4b03-4a69-be26-4a37d2c57250",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b217333c-bf6a-427c-a1fd-da42c032f13f",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "09f68806-2b90-433d-9f6d-684cfef1d890",
      "name": "Transactions API Reference",
      "description": "Use this API for getting the payment options to present to your users and to process the payment instructions.",
      "item": [
        {
          "_postman_id": "f346e216-428b-4d94-a054-a3a3b5f342ab",
          "name": "Get Payout Options",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{transactionsApiUrl}}/v1/payout/options",
            "description": "Gets the payout options.\n\n\n## Response object\n\nName | Type | Description\n-|-|-\nrewards | [Reward](#the-reward-object) object array | An array of reward objects\n\n\n## The Reward object\nName | Type | Description\n-|-|-\nbrand | [Brand](#the-brand-object) object | The brand object\ncountries | string array | An array of country codes this reward is setup for\ncreatedDate | date time | Date created\ncredentialTypes | - |\ncurrencyCode | string | The currency code of this reward\nexchangeRateRule | - | \nisWholeAmountValueRequired | bool |\nlastUpdateDate | date time | Date updated\nprovider | [Reward Provider](#the-reward-provider-object) object | The reward provider for this reward. For example, Tangocard\nredemptionInstructions | string | Redemtion instructions\nrewardId | guid | The unique reward id\nrewardName | string | The name of the reward\nrewardType | - | - \nstatus | - | - \ntags | string | Not currently used\nvalue | [Reward Value](#the-reward-value-object) | The value of the reward\nvalueType | - | - \n\n\n## The Brand object\nName | Type | Description\n-|-|-\nbrandKey | string | The brand key\nbrandName | string | The brand name\ncreatedDate | date time | Date created\ndescription | string | Brand description\ndisclaimer | string | Brand disclaimer\nimageUrls | [Image Url](#the-image-url-object) array | Brand Images in various sizes\nlastUpdateDate | date time | Date last updated\nrequirements | [Reward Requirements](#the-reward-requirements-object) | Brand requirements\nshortDescription | string | Brandh short description\nstatus | string | -\nterms | string | Brand terms and conditions\n\n\n## The Image Url object\nName | Type | Description\n-|-|-\nppi | int | The Pixels Per Inch of the image\nratioHeight | int | The height ratio factor\nratioWidth | int | The width ratio factor\nurl | string | The url for the image\nwidth | int | The pixel width of the image\n\n\n## The Reward Requirements object\nName | Type | Description\n-|-|-\nalwaysShowDisclaimer | bool | Should the disclaimer always be shown\ndisclaimerInstructions | string  The disclaimer instructions\ndisplayInstructions | bool | The instructions to display to the end user\ntermsAndConditionsInstructions | string | The terms and conditions instructions\n\n\n## The Reward Value object\nName | Type | Description\n-|-|-\ngreaterThan | int | - \ngreaterThanOrEqualTo | int | -\nlessThan | int | - \nlessThanOrEqualTo | int | -"
          },
          "response": [
            {
              "id": "816caa62-b875-41c8-9787-5454473ef6d7",
              "name": "Get Payout Options",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{transactionsApiUrl}}/v1/payout/options"
              },
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n\t\"rewards\": [\n\t    \"brand\": {\n\t        \"brandKey\": \"\",\n\t        \"brandName\": \"\",\n\t        \"createdDate\": \"\",\n\t        \"description\": \"\",\n\t        \"disclaimer\": \"\",\n\t        \"imageUrls\": [\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 80\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 130\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 200\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 278\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 300\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 1200\n\t            }\n\t        ],\n\t        \"lastUpdateDate\": \"\",\n\t        \"requirements\": {\n\t            \"alwaysShowDisclaimer\": false,\n\t            \"disclaimerInstructions\": \"\",\n\t            \"displayInstructions\": \"\",\n\t            \"termsAndConditionsInstructions\": \"\"\n\t        },\n\t        \"shortDescription\": \"\",\n\t        \"status\": \"\",\n\t        \"terms\": \"\"\n\t    },\n\t    \"countries\": [],\n\t    \"createdDate\": \"\",\n\t    \"credentialTypes\": [],\n\t    \"currencyCode\": \"\",\n\t    \"exchangeRateRule\": \"\",\n\t    \"isWholeAmountValueRequired\": false,\n\t    \"lastUpdateDate\": \"\",\n\t    \"provider\": {\n\t        \"id\": \"\",\n\t        \"name\": \"\"\n\t    },\n\t    \"redemptionInstructions\": \"\",\n\t    \"rewardId\": \"\",\n\t    \"rewardName\": \"\",\n\t    \"rewardType\": \"\",\n\t    \"status\": \"\",\n\t    \"tags\": [],\n\t    \"value\": {\n\t        \"greaterThan\": null,\n\t        \"greaterThanOrEqualTo\": 0,\n\t        \"lessThan\": null,\n\t        \"lessThanOrEqualTo\": 0\n\t    },\n\t    \"valueType\": \"\"\n\t]\n}"
            }
          ]
        },
        {
          "_postman_id": "267e40d0-717e-4463-af91-cac6b1fa999b",
          "name": "Get Collect Options",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{transactionsApiUrl}}/v1/payout/options",
            "description": "Gets the payout options.\n\n\n## Response object\n\nName | Type | Description\n-|-|-\nrewards | [Reward](#the-reward-object) object array | An array of reward objects\n\n\n## The Reward object\nName | Type | Description\n-|-|-\nbrand | [Brand](#the-brand-object) object | The brand object\ncountries | string array | An array of country codes this reward is setup for\ncreatedDate | date time | Date created\ncredentialTypes | - |\ncurrencyCode | string | The currency code of this reward\nexchangeRateRule | - | \nisWholeAmountValueRequired | bool |\nlastUpdateDate | date time | Date updated\nprovider | [Reward Provider](#the-reward-provider-object) object | The reward provider for this reward. For example, Tangocard\nredemptionInstructions | string | Redemtion instructions\nrewardId | guid | The unique reward id\nrewardName | string | The name of the reward\nrewardType | - | - \nstatus | - | - \ntags | string | Not currently used\nvalue | [Reward Value](#the-reward-value-object) | The value of the reward\nvalueType | - | - \n\n\n## The Brand object\nName | Type | Description\n-|-|-\nbrandKey | string | The brand key\nbrandName | string | The brand name\ncreatedDate | date time | Date created\ndescription | string | Brand description\ndisclaimer | string | Brand disclaimer\nimageUrls | [Image Url](#the-image-url-object) array | Brand Images in various sizes\nlastUpdateDate | date time | Date last updated\nrequirements | [Reward Requirements](#the-reward-requirements-object) | Brand requirements\nshortDescription | string | Brandh short description\nstatus | string | -\nterms | string | Brand terms and conditions\n\n\n## The Image Url object\nName | Type | Description\n-|-|-\nppi | int | The Pixels Per Inch of the image\nratioHeight | int | The height ratio factor\nratioWidth | int | The width ratio factor\nurl | string | The url for the image\nwidth | int | The pixel width of the image\n\n\n## The Reward Requirements object\nName | Type | Description\n-|-|-\nalwaysShowDisclaimer | bool | Should the disclaimer always be shown\ndisclaimerInstructions | string  The disclaimer instructions\ndisplayInstructions | bool | The instructions to display to the end user\ntermsAndConditionsInstructions | string | The terms and conditions instructions\n\n\n## The Reward Value object\nName | Type | Description\n-|-|-\ngreaterThan | int | - \ngreaterThanOrEqualTo | int | -\nlessThan | int | - \nlessThanOrEqualTo | int | -"
          },
          "response": [
            {
              "id": "2646a803-5275-4874-9abb-c22758e06b92",
              "name": "Get Payout Options",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{transactionsApiUrl}}/v1/payout/options"
              },
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n\t\"rewards\": [\n\t    \"brand\": {\n\t        \"brandKey\": \"\",\n\t        \"brandName\": \"\",\n\t        \"createdDate\": \"\",\n\t        \"description\": \"\",\n\t        \"disclaimer\": \"\",\n\t        \"imageUrls\": [\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 80\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 130\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 200\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 278\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 300\n\t            },\n\t            {\n\t                \"ppi\": 326,\n\t                \"ratioHeight\": 5,\n\t                \"ratioWidth\": 8,\n\t                \"url\": \"\",\n\t                \"width\": 1200\n\t            }\n\t        ],\n\t        \"lastUpdateDate\": \"\",\n\t        \"requirements\": {\n\t            \"alwaysShowDisclaimer\": false,\n\t            \"disclaimerInstructions\": \"\",\n\t            \"displayInstructions\": \"\",\n\t            \"termsAndConditionsInstructions\": \"\"\n\t        },\n\t        \"shortDescription\": \"\",\n\t        \"status\": \"\",\n\t        \"terms\": \"\"\n\t    },\n\t    \"countries\": [],\n\t    \"createdDate\": \"\",\n\t    \"credentialTypes\": [],\n\t    \"currencyCode\": \"\",\n\t    \"exchangeRateRule\": \"\",\n\t    \"isWholeAmountValueRequired\": false,\n\t    \"lastUpdateDate\": \"\",\n\t    \"provider\": {\n\t        \"id\": \"\",\n\t        \"name\": \"\"\n\t    },\n\t    \"redemptionInstructions\": \"\",\n\t    \"rewardId\": \"\",\n\t    \"rewardName\": \"\",\n\t    \"rewardType\": \"\",\n\t    \"status\": \"\",\n\t    \"tags\": [],\n\t    \"value\": {\n\t        \"greaterThan\": null,\n\t        \"greaterThanOrEqualTo\": 0,\n\t        \"lessThan\": null,\n\t        \"lessThanOrEqualTo\": 0\n\t    },\n\t    \"valueType\": \"\"\n\t]\n}"
            }
          ]
        },
        {
          "_postman_id": "dc76a6ca-66a3-4d13-b316-0a687e16c931",
          "name": "Process Reward Payout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{transactionsApiUrl}}/v1/payout/reward/{{id}}",
            "description": "#### Description \n\nSubmit a payout instruction for processing.\n\n#### Params\n\nParameter | Description\n--------- | -----------\nid | The id of the reward to process\n\n\n#### Response object\n\nName | Type | Description\n-|-|-\nexternalOrderRef | string | \namountCharged | |\ndenomination | |\nrewardId | |\nrewardName | | \nstatus | |\ncreatedAt | |\nrewardDetails | |"
          },
          "response": [
            {
              "id": "d69c8c41-05f3-4ef4-a39a-cabe5e7c35b9",
              "name": "Process Reward Payout",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{transactionsApiUrl}}/v1/payout/reward/{{id}}"
              },
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"externalOrderRef\": \"\",\n    \"amountCharged\": {\n        \"value\": 0,\n        \"currencyCode\": \"\",\n        \"total\": 0\n    },\n    \"denomination\": {\n        \"value\": 0,\n        \"currencyCode\": \"\"\n    },\n    \"rewardId\": \"\",\n    \"rewardName\": \"\",\n    \"status\": \"\",\n    \"createdAt\": \"\",\n    \"rewardDetails\": {\n        \"credentials\": {\n            \"Redemption URL\": \"\"\n        },\n        \"credentialList\": [\n            {\n                \"label\": \"\",\n                \"value\": \"\",\n                \"type\": \"\",\n                \"credentialType\": \"\"\n            }\n        ],\n        \"redemptionInstructions\": \"\"\n    }\n}"
            }
          ]
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "6b830cb6-c43e-457a-80f6-cf0878582b3c",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "4248736c-140b-42fe-b8cb-97c97ac87565",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "a7688ccc-61d4-4ff6-9e15-bbb7186f3915",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "38581210-06a1-4804-a74f-878b9511e8aa",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}