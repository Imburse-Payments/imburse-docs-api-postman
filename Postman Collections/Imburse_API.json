{
  "info": {
    "_postman_id": "ac65d3ee-04c9-47c8-9319-f7efca0d9cc5",
    "name": "Imburse API",
    "description": "Welcome to the Imburse API. You can use our APIs to access Imburse portal and Payment API endpoints.\r\n\r\n\r\n# Authentication\r\n\r\nTo authorize, use this code:\r\n\r\n```shell\r\n# With shell, you can just pass the correct header with each request\r\n$ curl \"api_endpoint_here\"\r\n  -H \"Authorization: Hmac {token}\"\r\n```\r\n\r\nImburse issues API keys to allow access to the API.\r\n\r\nWe issue both `Client API Tokens`, for accessing client functionality, and `Account API Tokens` for accessing the clients' parent account.\r\n\r\nYou can manage your API keys in the Imburse Portal dashboard or via the API.\r\n\r\nYour API tokens carry many privileges, so be sure to keep them secret! Do not share your API `private keys` in publicly accessible areas such as GitHub, client-side code, and so forth.\r\n\r\nAll API requests must be made over `HTTPS`. API requests without authentication will fail.\r\n\r\n## HMAC Authentication\r\n\r\nEach request made to Imburse API's uses HMAC credentials and, with the signature, provides identity verification and in-transit data integrity.\r\n\r\nTo generate a HMAC for your requests, please see our full step by step guide which can be found on our open source account under the [HMAC examples page](https://github.com/Imburse-Payments/hmac-examples)\r\n\r\nTo complete the process you will need the `publicKey` and `privateKey` from a Client or Account API Token.\r\n\r\nTo configurure the request header for HMAC, use `Authorization: Hmac {token}`.\r\n\r\n<aside class=\"notice\">\r\nYou must replace <code>{token}</code> with your HMAC authentication token key.\r\n</aside>\r\n\r\n\r\n\r\n# Access Control\r\n\r\nAll API functions require an API token to authenticate - see [Authentication](#authentication). \r\n\r\nAs part of the request when creating [Client API Tokens](#client-api-tokens), you can specify the `roles` available to the token. \r\n\r\nEach API operation documents the exact role required so you can taylor your tokens to specific roles if required.\r\n\r\n#### Client Roles\r\n\r\nRole name | Description\r\n-|-\r\n`client-read` | Read Clients\r\n`client-write` | Read and write Clients\r\n`client-token-read` | Read Client API Tokens\r\n`client-token-write` | Read and write Client API Tokens\r\n`client-whitelabel-write` | Read and write Client Whitelabel Settings\r\n`collection-scheme-read` |  Read Collection Schemes\r\n`collection-scheme-write` | Read and write Collection Schemes\r\n`psp-configuration-read` | Read PSP Configurations\r\n`psp-configuration-write` | Read and write PSP Configurations\r\n\r\n\r\n#### Account Roles\r\n\r\n`Account API Tokens` are created by Imburse and cannot be changed. \r\n\r\nThe `roles` assigned to these tokens are shown for reference only.\r\n\r\nRole name | Function\r\n-|-\r\n`account-read` | Read Accounts\r\n`account-token-read` | Read Account API Tokens\r\n`client-token-write` | Write Client API Tokens\r\n\r\n\r\n\r\n# Errors\r\n\r\nImburse uses conventional HTTP response codes to indicate the success or failure of an API request. In general, codes in the **2xx** range indicate success, codes in the **4xx** range indicate an error that failed given the information provided (e.g., a required parameter was omitted, etc.), and codes in the **5xx** range indicate an error with Imburse's servers,\r\n\r\n\r\nResponse Code | Meaning\r\n--------------| -------\r\n200 | **OK** - Everything worked as expected.\r\n400 | **Bad Request** - The request was unacceptable, often due to missing a required parameter.\r\n401 | **Unauthorized** - No valid API key provided.\r\n402 | **Request Failed** - The parameters were valid but the request failed.\r\n403 | **Forbidden** -- The requested endpoint is not valid for your user or role.\r\n404 | **Not Found** - The requested resource doesn't exist.\r\n409 | **Conflict** - The request conflicts with another request (perhaps due to using the same idempotent key).\r\n429 | **Too Many Requests**\t- Too many requests hit the API too quickly. We recommend an exponential backoff or your requests.\r\n500, 502, 503, 504 | **Internal Server Error** - Something went wrong on Imburse's end.\r\n\r\n\r\n\r\n# Countries\r\n\r\nAll API functions that reference a country will use the **ISO 3166-1 alpha-2** country code format. Use the list below to identify the country.\r\n\r\nAlpha 2 Code | Name\r\n-|-\r\nAF|Afghanistan\r\nAX|\u00c5land\r\nAL|Albania\r\nDZ|Algeria\r\nAS|American Samoa\r\nAD|Andorra\r\nAO|Angola\r\nAI|Anguilla\r\nAQ|Antarctica\r\nAG|Antigua and Barbuda\r\nAR|Argentina\r\nAM|Armenia\r\nAW|Aruba\r\nAU|Australia\r\nAT|Austria\r\nAZ|Azerbaijan\r\nBS|Bahamas\r\nBH|Bahrain\r\nBD|Bangladesh\r\nBB|Barbados\r\nBY|Belarus\r\nBE|Belgium\r\nBZ|Belize\r\nBJ|Benin\r\nBM|Bermuda\r\nBT|Bhutan\r\nBO|Bolivia\r\nBQ|Bonaire, Sint Eustatius and Saba\r\nBA|Bosnia and Herzegovina\r\nBW|Botswana\r\nBV|Bouvet Island\r\nBR|Brazil\r\nIO|British Indian Ocean Territory\r\nBN|Brunei Darussalam\r\nBG|Bulgaria\r\nBF|Burkina Faso\r\nBI|Burundi\r\nKH|Cambodia\r\nCM|Cameroon\r\nCA|Canada\r\nCV|Cape Verde\r\nKY|Cayman Islands\r\nCF|Central African Republic\r\nTD|Chad\r\nCL|Chile\r\nCN|China\r\nCX|Christmas Island\r\nCC|Cocos (Keeling) Islands\r\nCO|Colombia\r\nKM|Comoros\r\nCG|Congo (Brazzaville)\r\nCD|Congo (Kinshasa)\r\nCK|Cook Islands\r\nCR|Costa Rica\r\nCI|C\u00f4te d'Ivoire\r\nHR|Croatia\r\nCU|Cuba\r\nCW|Cura\u00e7ao\r\nCY|Cyprus\r\nCZ|Czech Republic\r\nDK|Denmark\r\nDJ|Djibouti\r\nDM|Dominica\r\nDO|Dominican Republic\r\nEC|Ecuador\r\nEG|Egypt\r\nSV|El Salvador\r\nGQ|Equatorial Guinea\r\nER|Eritrea\r\nEE|Estonia\r\nET|Ethiopia\r\nFK|Falkland Islands\r\nFO|Faroe Islands\r\nFJ|Fiji\r\nFI|Finland\r\nFR|France\r\nGF|French Guiana\r\nPF|French Polynesia\r\nTF|French Southern Territories\r\nGA|Gabon\r\nGM|Gambia\r\nGE|Georgia\r\nDE|Germany\r\nGH|Ghana\r\nGI|Gibraltar\r\nGR|Greece\r\nGL|Greenland\r\nGD|Grenada\r\nGP|Guadeloupe\r\nGU|Guam\r\nGT|Guatemala\r\nGG|Guernsey\r\nGN|Guinea\r\nGW|Guinea-Bissau\r\nGY|Guyana\r\nHT|Haiti\r\nHM|Heard Island and McDonald Islands\r\nHN|Honduras\r\nHK|Hong Kong\r\nHU|Hungary\r\nIS|Iceland\r\nIN|India\r\nID|Indonesia\r\nIR|Iran\r\nIQ|Iraq\r\nIE|Ireland\r\nIM|Isle of Man\r\nIL|Israel\r\nIT|Italy\r\nJM|Jamaica\r\nJP|Japan\r\nJE|Jersey\r\nJO|Jordan\r\nKZ|Kazakhstan\r\nKE|Kenya\r\nKI|Kiribati\r\nKP|Korea, North\r\nKR|Korea, South\r\nKW|Kuwait\r\nKG|Kyrgyzstan\r\nLA|Laos\r\nLV|Latvia\r\nLB|Lebanon\r\nLS|Lesotho\r\nLR|Liberia\r\nLY|Libya\r\nLI|Liechtenstein\r\nLT|Lithuania\r\nLU|Luxembourg\r\nMO|Macao\r\nMK|Macedonia\r\nMG|Madagascar\r\nMW|Malawi\r\nMY|Malaysia\r\nMV|Maldives\r\nML|Mali\r\nMT|Malta\r\nMH|Marshall Islands\r\nMQ|Martinique\r\nMR|Mauritania\r\nMU|Mauritius\r\nYT|Mayotte\r\nMX|Mexico\r\nFM|Micronesia\r\nMD|Moldova\r\nMC|Monaco\r\nMN|Mongolia\r\nME|Montenegro\r\nMS|Montserrat\r\nMA|Morocco\r\nMZ|Mozambique\r\nMM|Myanmar\r\nNA|Namibia\r\nNR|Nauru\r\nNP|Nepal\r\nNL|Netherlands\r\nNC|New Caledonia\r\nNZ|New Zealand\r\nNI|Nicaragua\r\nNE|Niger\r\nNG|Nigeria\r\nNU|Niue\r\nNF|Norfolk Island\r\nMP|Northern Mariana Islands\r\nNO|Norway\r\nOM|Oman\r\nPK|Pakistan\r\nPW|Palau\r\nPS|Palestine\r\nPA|Panama\r\nPG|Papua New Guinea\r\nPY|Paraguay\r\nPE|Peru\r\nPH|Philippines\r\nPN|Pitcairn\r\nPL|Poland\r\nPT|Portugal\r\nPR|Puerto Rico\r\nQA|Qatar\r\nRE|R\u00e9union\r\nRO|Romania\r\nRU|Russian Federation\r\nRW|Rwanda\r\nBL|Saint Barth\u00e9lemy\r\nSH|Saint Helena\r\nKN|Saint Kitts and Nevis\r\nLC|Saint Lucia\r\nMF|Saint Martin (French part)\r\nPM|Saint Pierre and Miquelon\r\nVC|Saint Vincent and the Grenadines\r\nWS|Samoa\r\nSM|San Marino\r\nST|Sao Tome and Principe\r\nSA|Saudi Arabia\r\nSN|Senegal\r\nRS|Serbia\r\nSC|Seychelles\r\nSL|Sierra Leone\r\nSG|Singapore\r\nSX|Sint Maarten (Dutch part)\r\nSK|Slovakia\r\nSI|Slovenia\r\nSB|Solomon Islands\r\nSO|Somalia\r\nZA|South Africa\r\nGS|South Georgia and the South Sandwich Islands\r\nSS|South Sudan\r\nES|Spain\r\nLK|Sri Lanka\r\nSD|Sudan\r\nSR|Suriname\r\nSJ|Svalbard and Jan Mayen\r\nSZ|Swaziland\r\nSE|Sweden\r\nCH|Switzerland\r\nSY|Syria\r\nTW|Taiwan\r\nTJ|Tajikistan\r\nTZ|Tanzania\r\nTH|Thailand\r\nTL|Timor-Leste\r\nTG|Togo\r\nTK|Tokelau\r\nTO|Tonga\r\nTT|Trinidad and Tobago\r\nTN|Tunisia\r\nTR|Turkey\r\nTM|Turkmenistan\r\nTC|Turks and Caicos Islands\r\nTV|Tuvalu\r\nUG|Uganda\r\nUA|Ukraine\r\nAE|United Arab Emirates\r\nGB|United Kingdom\r\nUS|United States of America\r\nUM|United States Minor Outlying Islands\r\nUY|Uruguay\r\nUZ|Uzbekistan\r\nVU|Vanuatu\r\nVA|Vatican City\r\nVE|Venezuela\r\nVN|Vietnam\r\nVG|Virgin Islands, British\r\nVI|Virgin Islands, U.S.\r\nWF|Wallis and Futuna\r\nEH|Western Sahara\r\nYE|Yemen\r\nZM|Zambia\r\nZW|Zimbabwe\r\n\r\n\r\n# Currencies\r\n\r\nAll API functions that reference a Currency Code will use the **ISO 4217 alphabetic code** format. Use the list below to identify the currency.\r\n\r\nAlphabetic Code | Name\r\n-|-\r\nCHF | Swiss Franc\r\nEUR | Euro\r\nGBP | Pound Sterling\r\nUSD | United States Dollar\r\n",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "f6bf99b9-ca03-47b5-a667-8e1a5a625b0e",
      "name": "Authentication API Reference",
      "description": "This API describes how to create a Bearer token for API.\n\nIt is based on the HMAC authentication scheme.",
      "item": [
        {
          "_postman_id": "7c24f4b5-5d1c-423a-a717-575943781e07",
          "name": "Create Bearer Token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bebb259f-e09d-4eef-87ce-010ad3c573fd",
                "exec": [
                  "var CryptoJS = require(\"crypto-js\");\r",
                  "\r",
                  "var publicKey = pm.environment.get(\"publicKey\");\r",
                  "var privateKey = CryptoJS.enc.Base64.parse(pm.environment.get(\"privateKey\"));\r",
                  "\r",
                  "var timestamp = (new Date).getTime() / 1000;\r",
                  "\r",
                  "var nonce = timestamp;\r",
                  "    \r",
                  "var body = request.data;\r",
                  "\r",
                  "if (body.length > 0){\r",
                  "    var utf8Body = CryptoJS.enc.Utf8.parse(body);\r",
                  "    var hashedBody = CryptoJS.SHA256(utf8Body);\r",
                  "    var bodySignature = CryptoJS.enc.Base64.stringify(hashedBody);\r",
                  "}\r",
                  "else {\r",
                  "    var bodySignature = \"\";\r",
                  "}\r",
                  "\r",
                  "var unsignedSignature = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + bodySignature;\r",
                  "\r",
                  "var utf8Signature = CryptoJS.enc.Utf8.parse(unsignedSignature);\r",
                  "var hashedSignature = CryptoJS.HmacSHA256(utf8Signature, privateKey);\r",
                  "var signedSignature = CryptoJS.enc.Base64.stringify(hashedSignature);\r",
                  "\r",
                  "var hmac = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + signedSignature;\r",
                  "\r",
                  "pm.variables.set(\"token\", hmac);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Hmac {{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{identityApiUrl}}v1/auth/hmac"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "c7a00e71-a093-41c7-a084-5bfbafb0fd00",
      "name": "Organisation API Reference",
      "description": "",
      "item": [
        {
          "_postman_id": "d4a8fee4-7343-464f-9b3f-bf42e81619e2",
          "name": "Accounts",
          "description": "",
          "item": [
            {
              "_postman_id": "53e94c1d-bcfd-472d-b4e7-14289ab131c6",
              "name": "General Info",
              "description": "",
              "item": [
                {
                  "_postman_id": "5add0f2a-961c-4bc0-8eb4-6d8579d3ff14",
                  "name": "Get Account",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/account",
                    "description": "Gets the account information."
                  },
                  "response": [
                    {
                      "id": "f31cf356-e1c9-4018-a915-73c57a911104",
                      "name": "Get Account",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/account"
                      },
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"Id\": \"\",\n\t\"ImburseAccountRef\": \"\",\n\t\"CompanyName\": \"\",\n\t\"BillingContactFirstName\": \"\",\n\t\"BillingContactLastName\": \"\"\n}"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "31ef9369-14ea-44bb-a91a-582c84aa056a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ea2a464-9b3c-4022-946b-74e1cf23e5ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "09e70593-2a88-4c91-a7cb-1b6d3934b979",
              "name": "Security Keys",
              "description": "",
              "item": [
                {
                  "_postman_id": "75d7c37d-24f0-48c2-bdd7-48b1ad2fc463",
                  "name": "Get All Keys",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/account/keys",
                    "description": "Gets all the keys for the account\n"
                  },
                  "response": [
                    {
                      "id": "b010e01a-f779-4cfe-baa7-57b0abaf7809",
                      "name": "Get All Keys",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/account/keys"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n\t{\n\t\t\"accountId\": \"\",\n\t\t\"publicKey\": \"\",\n\t\t\"roles\": []\n\t}\n]"
                    }
                  ]
                },
                {
                  "_postman_id": "45d621ca-c618-40e9-a4c1-7240d88269b6",
                  "name": "Get Key by Public Key",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/account/keys/{{publicKey}}",
                    "description": "Gets a key for the account by it's public key"
                  },
                  "response": [
                    {
                      "id": "bed7ba38-801c-4aa2-bb0e-cb44b702d9dd",
                      "name": "Get Key by Public Key",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/account/keys/{{publicKey}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"accountId\": \"\",\n\t\"publicKey\": \"\",\n\t\"roles\": []\n}\n"
                    }
                  ]
                },
                {
                  "_postman_id": "879a0ffe-7ffa-4308-b378-481b47d866bb",
                  "name": "Delete a Key",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/account/keys/{{accountKeyToDelete}}",
                    "description": "Removes a key from the system. This is dangerous as it will stop the key from being used for future requests and will not be able to be undone."
                  },
                  "response": [
                    {
                      "id": "25bba2df-c501-4c2b-9780-14ca97dcffe4",
                      "name": "Delete a Key",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/account/keys/{{accountKeyToDelete}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                },
                {
                  "_postman_id": "978664ad-7c1e-4f13-b7ce-47cd9f330727",
                  "name": "Create a new Key",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[ \n\t\"{{role1}}\", \n\t\"{{role2}}\"\n]"
                    },
                    "url": "{{orgApiIUrl}}v1/account/keys/",
                    "description": "Creates a new key for the account"
                  },
                  "response": [
                    {
                      "id": "01702494-71c9-4993-a112-6d7bd78c2329",
                      "name": "Create a new Key",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[ \n\t\"{{role1}}\", \n\t\"{{role2}}\"\n]"
                        },
                        "url": "{{orgApiIUrl}}v1/account/keys/"
                      },
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"primaryGroupSid\": \"\",\n\t\"publicKey\": \"\",\n\t\"privateKey\": \"\",\n\t\"roles\": []\n}"
                    }
                  ]
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "b195ab08-dd5a-4639-b975-f9842b87e7b5",
              "name": "Tenants",
              "description": "",
              "item": [
                {
                  "_postman_id": "1e482fce-e553-4077-aa21-e7901ba6b85f",
                  "name": "Get Tenants",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{orgApiIUrl}}v1/account/tenants?from={{startingIndex}}&take={{resultsToGet}}&name={{tenantName}}",
                      "host": [
                        "{{orgApiIUrl}}v1"
                      ],
                      "path": [
                        "account",
                        "tenants"
                      ],
                      "query": [
                        {
                          "key": "from",
                          "value": "{{startingIndex}}",
                          "equals": true,
                          "description": "Index you want to take from. Default is 0."
                        },
                        {
                          "key": "take",
                          "value": "{{resultsToGet}}",
                          "equals": true,
                          "description": "How many results to bring back. Default is 20."
                        },
                        {
                          "key": "name",
                          "value": "{{tenantName}}",
                          "equals": true,
                          "description": "Optional - Filter by a tenant name. Default is nothing."
                        }
                      ]
                    },
                    "description": "Gets all the tenants for this account.\n\nOptional query paramenters used for paging are:\n- from - starting index. Default is 0.\n- take - the amount of results in the page. Default us 20.\n- name - filters by a name."
                  },
                  "response": [
                    {
                      "id": "58ed7744-c6fa-41ca-a8a0-1234e939b72f",
                      "name": "Get Tenants",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{orgApiIUrl}}v1/account/tenants?from={{startingIndex}}&take={{resultsToGet}}&name={{tenantName}}",
                          "host": [
                            "{{orgApiIUrl}}v1"
                          ],
                          "path": [
                            "account",
                            "tenants"
                          ],
                          "query": [
                            {
                              "key": "from",
                              "value": "{{startingIndex}}",
                              "equals": true,
                              "description": "Index you want to take from. Default is 0."
                            },
                            {
                              "key": "take",
                              "value": "{{resultsToGet}}",
                              "equals": true,
                              "description": "How many results to bring back. Default is 20."
                            },
                            {
                              "key": "name",
                              "value": "{{tenantName}}",
                              "equals": true,
                              "description": "Optional - Filter by a tenant name. Default is nothing."
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"currentPage\": 1,\n\t\"pageCount\": 1,\n\t\"rowCount\": 1,\n\t\"results\": [\n\t\t{\n\t\t\t\"id\": \"\",\n\t\t\t\"accountId\": \"\",\n\t\t\t\"name\": \"\",\n\t\t\t\"address\": \"\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "b92ec633-349b-4f21-aa35-23983be80ed2",
                  "name": "Get Tenant by Id",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/account/tenants/{{tenantId}}",
                    "description": "Gets all the tenants for this account.\n\nOptional query paramenters used for paging are:\n- from - starting index. Default is 0.\n- take - the amount of results in the page. Default us 20.\n- name - filters by a name."
                  },
                  "response": [
                    {
                      "id": "63b066a4-1984-448a-8131-97fca597f590",
                      "name": "Get Tenant By Id",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/account/tenants/{{tenantId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"id\": \"\",\n\t\"accountId\": \"\",\n\t\"name\": \"\",\n\t\"address\": \"\"\n}\n"
                    }
                  ]
                },
                {
                  "_postman_id": "ffe6bc62-fd06-4bce-82f4-768d541ef68b",
                  "name": "Create new Tenant",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "e2a46408-c4b5-4525-8c92-e21fe2c58ba2",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                    },
                    "url": "{{orgApiIUrl}}v1/account/tenants",
                    "description": "Creates a new tenant for this account."
                  },
                  "response": [
                    {
                      "id": "9d3ce5f9-02ad-4b41-9903-b9a61be375b4",
                      "name": "Create new Tenant",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer {{token}}"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                        },
                        "url": "{{orgApiIUrl}}v1/account/tenants"
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"id\": \"\",\n\t\"accountId\": \"\",\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "94282eb1-d0e4-4ad4-88a6-10f82b9ba66e",
                  "name": "Update Tenant",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                    },
                    "url": "{{orgApiIUrl}}v1/account/tenants/{{tenantId}}"
                  },
                  "response": [
                    {
                      "id": "e0245da2-ae0d-44be-a0dc-005eb463f595",
                      "name": "Update Tenant",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"\",\n\t\"address\": {\n\t\t\"streetAddress\": \"\",\n\t\t\"extendedStreetAddress\": \"\",\n\t\t\"locality\": \"\",\n\t\t\"region\": \"\",\n\t\t\"postCode\": \"\",\n\t\t\"country\": \"\"\n\t}\n}"
                        },
                        "url": "{{orgApiIUrl}}v1/account/tenants/{{tenantId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                },
                {
                  "_postman_id": "de93b675-8cdd-4084-a530-0d0f80c9aee1",
                  "name": "Get All Keys",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/{{tenantId}}/keys",
                    "description": "Gets all the keys for a tenant"
                  },
                  "response": [
                    {
                      "id": "4dc1022e-d159-48ee-81df-11877a29cc02",
                      "name": "Get All Keys",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/keys"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"tenantId\": \"\",\n        \"publicKey\": \"\",\n        \"roles\": []\n    }\n]"
                    }
                  ]
                },
                {
                  "_postman_id": "5ae170a1-0c7b-4d19-b455-5ca9cca21e2c",
                  "name": "Get Key By PublicKey",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/{{tenantId}}/keys/{{publicKey}}",
                    "description": "Gets a tenant key by it's public key"
                  },
                  "response": [
                    {
                      "id": "3850a071-0fbc-4a96-b29a-b04d17b786b8",
                      "name": "Get Key By PublicKey",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/keys/{{publicKey}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"tenantId\": \"\",\n    \"publicKey\": \"\",\n    \"roles\": []\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "87a98404-40fd-4a28-801f-af5eaaa73d27",
                  "name": "Create Key",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n\t\"{{role1}}\"\n]"
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/{{tenantId}}/keys/",
                    "description": "Creates a key for a tenant"
                  },
                  "response": [
                    {
                      "id": "317dfa2e-7ce9-44c4-b611-a6cb76f5fbc0",
                      "name": "Create Key",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n\t\"{{role1}}\"\n]"
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/keys"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"primaryGroupSid\": \"\",\n    \"publicKey\": \"\",\n    \"privateKey\": \"\",\n    \"roles\": []\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "cca92015-0f89-4dc7-ac46-532bd2764bf4",
                  "name": "Remove Key by Public Key",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/{{tenantId}}/keys/{{publicKey}}",
                    "description": "Removes a tenat's key from the system by it's public key. This is dangerous as it will stop the key from being used for future requests and will not be able to be undone."
                  },
                  "response": [
                    {
                      "id": "facf90a9-89bd-44fa-b8ae-ec05374b00be",
                      "name": "Remove Key by Public Key",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/keys/{{publicKey}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "38080366-1aef-41b1-b132-0264a98f1a8c",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "570280c6-3f62-4e60-8920-ac77cdc572da",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "ac94da31-9efc-4702-b3b0-1f2aac7c82a8",
              "name": "Users",
              "description": "",
              "item": [
                {
                  "_postman_id": "379663a6-4847-41b5-b5b4-d3afe24914d5",
                  "name": "Get Users",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{orgApiIUrl}}v1/account/users?from=0&take=20&email=",
                      "host": [
                        "{{orgApiIUrl}}v1"
                      ],
                      "path": [
                        "account",
                        "users"
                      ],
                      "query": [
                        {
                          "key": "from",
                          "value": "0",
                          "equals": true,
                          "description": "Amount of results to return"
                        },
                        {
                          "key": "take",
                          "value": "20",
                          "equals": true,
                          "description": "The index to take from"
                        },
                        {
                          "key": "email",
                          "value": "",
                          "equals": true,
                          "description": "Email to filter by"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "c5bc2aa4-ecd2-49f8-a200-717b01d4e5dd",
                      "name": "Get Users",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{orgApiIUrl}}v1/account/users?from=0&take=20&email=",
                          "host": [
                            "{{orgApiIUrl}}v1"
                          ],
                          "path": [
                            "account",
                            "users"
                          ],
                          "query": [
                            {
                              "key": "from",
                              "value": "0",
                              "equals": true,
                              "description": "Amount of results to return"
                            },
                            {
                              "key": "take",
                              "value": "20",
                              "equals": true,
                              "description": "The index to take from"
                            },
                            {
                              "key": "email",
                              "value": "",
                              "equals": true,
                              "description": "Email to filter by"
                            }
                          ]
                        }
                      },
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"currentPage\": 1,\n\t\"pageCount\": 1,\n\t\"rowCount\": 1,\n\t\"results\": [\n\t\t\"accountId\": \"\",\n\t\t\"userId\": \"\",\n\t\t\"roles\": []\n\t]\n}\n"
                    }
                  ]
                },
                {
                  "_postman_id": "aed6edd9-25f1-45be-9232-da62d9bbdb26",
                  "name": "Assign User",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n\t\"{{role1}}\",\n\t\"{{role2}}\"\n]"
                    },
                    "url": "{{orgApiIUrl}}v1/account/users/{{userId}}"
                  },
                  "response": [
                    {
                      "id": "d50da06d-b4c2-4566-b641-5c601c264170",
                      "name": "Assign User",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n\t\"{{role1}}\",\n\t\"{{role2}}\"\n]"
                        },
                        "url": "{{orgApiIUrl}}v1/account/users/{{userId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                },
                {
                  "_postman_id": "7eb50f74-570e-4482-9747-700f69afc9c2",
                  "name": "Remove user",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/account/users/{{userId}}"
                  },
                  "response": [
                    {
                      "id": "2a4bf219-c214-4fbb-888e-f2201caab7e1",
                      "name": "Remove user",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/account/users/{{userId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "3d3ef99c-2ae8-4cec-8eab-c2034155fcd1",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4b1e4156-1309-416d-ba90-fd32a5e0b00c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "2db95add-3a76-4424-ada5-fa1fc865011c",
          "name": "Tenants",
          "description": "",
          "item": [
            {
              "_postman_id": "a41b9350-8cff-475e-a747-b242bc1c1a83",
              "name": "Security Keys",
              "description": "",
              "item": [
                {
                  "_postman_id": "59d00071-d648-48e0-90e1-1ec41175c862",
                  "name": "Get All Keys",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/keys",
                    "description": "Gets all the keys for the current tenant"
                  },
                  "response": [
                    {
                      "id": "cee7c56a-c24a-42d9-b71d-9c0a4592f8ee",
                      "name": "Get All Keys",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/keys"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"tenantId\": \"\",\n        \"publicKey\": \"\",\n        \"roles\": []\n    }\n]"
                    }
                  ]
                },
                {
                  "_postman_id": "b3a432cb-2cf5-4263-a7d0-f69de94b10a4",
                  "name": "Get Key By PublicKey",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/keys/{{publicKey}}",
                    "description": "Gets a key for the current tenant by it's public key"
                  },
                  "response": [
                    {
                      "id": "8771bc08-d3a5-42f1-8e8c-ac97442d29ed",
                      "name": "Get Key By PublicKey",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/keys/{{publicKey}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"tenantId\": \"\",\n    \"publicKey\": \"\",\n    \"roles\": []\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "77350897-25c9-44f8-a79f-600b890ba378",
                  "name": "Remove Key by Public Key",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/keys/{{publicKey}}",
                    "description": "Removes a key from the system for the current tenant by it's public key. This is dangerous as it will stop the key from being used for future requests and will not be able to be undone."
                  },
                  "response": [
                    {
                      "id": "6a863216-e618-4b2d-8f0a-a3d6ba2856a6",
                      "name": "Remove Key by Public Key",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/keys/{{publicKey}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                },
                {
                  "_postman_id": "3bbc7e0a-c7b7-4b45-9d21-270b9c0d826a",
                  "name": "Create Key",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n\t\"{{role1}}\"\n]"
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/keys",
                    "description": "Gets all the keys for the account\n"
                  },
                  "response": [
                    {
                      "id": "3514510b-3aa1-486d-8c17-cd880d55696d",
                      "name": "Create Key",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n\t\"{{role1}}\"\n]"
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/keys"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"primaryGroupSid\": \"\",\n    \"publicKey\": \"\",\n    \"privateKey\": \"\",\n    \"roles\": []\n}"
                    }
                  ]
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "ec09be74-4f68-4b14-bad4-631c112467b2",
              "name": "Users",
              "description": "",
              "item": [
                {
                  "_postman_id": "dc71550f-7d85-40e5-987e-5f0579f919bb",
                  "name": "Get Users",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{orgApiIUrl}}v1/tenant/users?from=0&take=20&email=",
                      "host": [
                        "{{orgApiIUrl}}v1"
                      ],
                      "path": [
                        "tenant",
                        "users"
                      ],
                      "query": [
                        {
                          "key": "from",
                          "value": "0",
                          "equals": true,
                          "description": "Amount of results to return"
                        },
                        {
                          "key": "take",
                          "value": "20",
                          "equals": true,
                          "description": "he index to take from"
                        },
                        {
                          "key": "email",
                          "value": "",
                          "equals": true,
                          "description": "Email to filter by"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "0ce8d80f-deba-4679-9423-4a08a51ebd8f",
                      "name": "Get Users",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{orgApiIUrl}}v1/tenant/users?from=0&take=20&email=",
                          "host": [
                            "{{orgApiIUrl}}v1"
                          ],
                          "path": [
                            "tenant",
                            "users"
                          ],
                          "query": [
                            {
                              "key": "from",
                              "value": "0",
                              "equals": true,
                              "description": "Amount of results to return"
                            },
                            {
                              "key": "take",
                              "value": "20",
                              "equals": true,
                              "description": "he index to take from"
                            },
                            {
                              "key": "email",
                              "value": "",
                              "equals": true,
                              "description": "Email to filter by"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"currentPage\": 1,\n    \"pageCount\": 1,\n    \"rowCount\": 1,\n    \"results\": [\n        {\n            \"tenantId\": \"\",\n            \"userId\": \"\",\n            \"roles\": [],\n            \"enabled\": true,\n            \"deleted\": false\n        }\n    ]\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "9174dfda-ca00-48e0-b836-7e6f07927ec1",
                  "name": "Get Users By Id",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/users/{{userId}}"
                  },
                  "response": [
                    {
                      "id": "4228da35-1137-4de2-818b-ad531197d28d",
                      "name": "Get Users By Id",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/users/{{userId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"tenantId\": \"\",\n    \"userId\": \"\",\n    \"roles\": [],\n    \"enabled\": true,\n    \"deleted\": false\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "9014c9cd-b7f2-4bac-97a7-e0371c5a917a",
                  "name": "Assign User",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n\t\"{{role1}}\"\n]"
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/users/{{userId}}"
                  },
                  "response": [
                    {
                      "id": "b6185b08-f4b4-43e4-84dc-bcce9f10b6cf",
                      "name": "Assign User",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n\t\"{{role1}}\"\n]"
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/users/{{userId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                },
                {
                  "_postman_id": "2537f2ba-d886-40ce-8de2-50b24938d0b8",
                  "name": "Remove user",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{orgApiIUrl}}v1/tenant/users/{{userId}}"
                  },
                  "response": [
                    {
                      "id": "6a679977-2e46-4ff9-bb82-819a8621985e",
                      "name": "Remove user",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{token}}",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{orgApiIUrl}}v1/tenant/users/{{userId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "3d3ef99c-2ae8-4cec-8eab-c2034155fcd1",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4b1e4156-1309-416d-ba90-fd32a5e0b00c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": {
          "token": "{{bearerToken}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "f254ad29-49ef-47df-9dac-6a5e8644ebb3",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "6d9d08e4-674c-4145-a716-97057dca1901",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "_postman_id": "58efe9ec-1cee-4bea-9e64-419f71d32659",
      "name": "Providers API Reference",
      "description": "*Payment Service Provider* (PSP) configuration objects hold the connnection details that Imburse needs to connect to your PSP. With these details, we can carry out instructions on your behalf - such as credit card authorization and/or settlement. PSP configuration objects allow you to manage your PSP configurations for a given client. The API allows you to create, retrieve, and update your configurations.\r\n\r\n## The PSP configuration object\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\npspType | string | The name of the PSP. Currently only `BrainTree` is supported with these operations.\r\nconfiguration | [Configuration](#the-configuration-object) object | An object that represents the configuration for a PSP. The data in this object will vary depending on the `pspType`.\r\n\r\n## The configuration object\r\n\r\nThis object will vary depending on the `pspType` the PSP configuration is for.\r\n\r\nListed below are the all the configuration types that are currently supported.\r\n\r\n### The BrainTree configuration object\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nmerchantId | string | The `merchantId` for your BrainTree account\r\npublicKey | string  | The `publicKey` for your BrainTree account\r\nprivateKey | string  | The `privateKey` for your BrainTree account\r\n",
      "item": [
        {
          "_postman_id": "898cf1d0-5846-4398-82aa-901094e172f9",
          "name": "Payment Providers",
          "description": "",
          "item": [
            {
              "_postman_id": "3ebf3f13-38dd-45c7-87d4-04a9e9e5b9c9",
              "name": "Braintree SDK",
              "description": "",
              "item": [
                {
                  "_postman_id": "4d4032a3-573d-412f-ac9d-a0a01f9d8d17",
                  "name": "Create a Braintree SDK Configuration",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"\",\n    \"currency\": \"\",\n    \"merchantId\": \"\",\n    \"privateKey\": \"\",\n    \"publicKey\": \"\",\n    \"merchantAccountId\": \"\"\n}"
                    },
                    "url": "{{providersApiUrl}}/v1/payment-providers/braintree-sdk",
                    "description": "# Description\r\n\r\nCreate a Braintree SDK configuration.\r\n\r\n## Role required\r\n\r\n`t.psp.a`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrency | Yes | A currency ISO code.\r\nmerchantId | Yes | The Merchant Id.\r\npublicKey | Yes | The Public Key.\r\nprivateKey | Yes | The private Key.\r\nmerchantAccountId | Yes | The Merchant Account Id."
                  },
                  "response": [
                    {
                      "id": "cd15bd41-7063-4806-b4c8-1cbdfd2aad3f",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"\",\n    \"currency\": \"\",\n    \"merchantId\": \"\",\n    \"privateKey\": \"\",\n    \"publicKey\": \"\",\n    \"merchantAccountId\": \"\"\n}"
                        },
                        "url": "{{providersApiUrl}}/v1/payment-providers/braintree-sdk"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"paymentProvider\": {\n\t\t\"id\": \"BRAINTREE\",\n\t\t\"name\": \"Braintree\"\n\t},\n\t\"paymentApiProduct\": {\n\t\t\"id\": \"BRAINTREE_SDK\",\n\t\t\"name\": \"Braintree SDK\",\n\t\t\"description\": \"\"\n\t},\n\t\"paymentApiProductConfigurationId\": \"\",\n    \"name\": \"\",\n    \"currency\": \"\",\n    \"merchantId\": \"\",\n    \"publicKey\": \"\",\n    \"merchantAccountId\": \"\"\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "0d50f083-f421-468f-9326-4d8d2d80d1bd",
                  "name": "Update a Braintree SDK Configuration",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"\",\n    \"currency\": \"\",\n    \"merchantId\": \"\",\n    \"privateKey\": \"\",\n    \"publicKey\": \"\",\n    \"merchantAccountId\": \"\"\n}"
                    },
                    "url": "{{providersApiUrl}}/v1/payment-providers/braintree-sdk/{{paymentProviderConfigurationId}}",
                    "description": "#### Description\r\n\r\nUpdates a Braintree SDK configuration.\r\n\r\n#### Role required\r\n\r\n`t.psp.r`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\npaymentProviderConfigurationId | The id of the payment provider configuration to update.\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrency | Yes | A currency ISO code.\r\nmerchantId | Yes | The Merchant Id.\r\npublicKey | Yes | The Public Key.\r\nprivateKey | Yes | The private Key.\r\nmerchantAccountId | Yes | The Merchant Account Id."
                  },
                  "response": [
                    {
                      "id": "33c37ea9-4b60-4885-bf18-e9cb50b68b36",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"\",\n    \"currency\": \"\",\n    \"merchantId\": \"\",\n    \"privateKey\": \"\",\n    \"publicKey\": \"\",\n    \"merchantAccountId\": \"\"\n}"
                        },
                        "url": "{{providersApiUrl}}/v1/payment-providers/braintree-sdk/{{paymentProviderConfigurationId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "14ca8b82-4514-4292-b445-8377ccca6741",
              "name": "Paydirekt Merchant",
              "description": "",
              "item": [
                {
                  "_postman_id": "f20df3e7-5075-4660-ac58-915461af4cb9",
                  "name": "Create a Paydirekt Merchant Configuration",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"publicKey\": \"\",\r\n    \"privateKey\": \"\"\r\n}\r\n"
                    },
                    "url": "{{providersApiUrl}}/v1/payment-providers/paydirekt-merchant",
                    "description": "# Description\r\n\r\nCreate a Paydirekt Merchant configuration.\r\n\r\n## Role required\r\n\r\n`t.psp.a`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrencies | Yes | An array of currency ISO codes.\r\npublicKey | Yes | The Public Key.\r\nprivateKey | Yes | The private Key."
                  },
                  "response": [
                    {
                      "id": "7783cfb6-7426-4b24-99a2-5fa499156ccf",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"publicKey\": \"\",\r\n\t\"privateKey\": \"\"\r\n}"
                        },
                        "url": "{{providersApiUrl}}/v1/payment-providers/paydirekt-merchant"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\n\t\"paymentProvider\": {\r\n\t\t\"id\": \"PAYDIREKT\",\r\n\t\t\"name\": \"Paydirekt\"\r\n\t},\r\n\t\"paymentApiProduct\": {\r\n\t\t\"id\": \"PAYDIREKT_MERCHANT\",\r\n\t\t\"name\": \"Paydirekt Merchant\"\r\n\t\t\"description\": \"\"\r\n\t},\r\n\t\"paymentApiProductConfigurationId\": \"\",\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"publicKey\": \"\",\r\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "a8f1b539-f27c-4669-bf16-717c576edca3",
                  "name": "Update a Paydirekt Merchant Configuration",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"publicKey\": \"\",\r\n    \"privateKey\": \"\"\r\n}\r\n"
                    },
                    "url": "{{providersApiUrl}}/v1/payment-providers/paydirekt-merchant/{{paymentProviderConfigurationId}}",
                    "description": "#### Description\r\n\r\nUpdates a PSP configuration.\r\n\r\n#### Role required\r\n\r\n`t.psp.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\npaymentProviderConfigurationId | The id of the payment provider configuration to update\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nnname | Yes | A name for this configuration. \r\ncurrencies | Yes | An array of currency ISO codes.\r\npublicKey | Yes | The Public Key.\r\nprivateKey | Yes | The private Key."
                  },
                  "response": [
                    {
                      "id": "8148c7cc-757b-4828-8c7b-4c4952653ab5",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"publicKey\": \"\",\r\n    \"privateKey\": \"\"\r\n}\r\n"
                        },
                        "url": "{{providersApiUrl}}/v1/payment-providers/paydirekt-merchant/{{paymentProviderConfigurationId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "2bd8d701-f2d1-4d96-af6e-375e9350c3ae",
              "name": "Paydirekt OneKlick",
              "description": "",
              "item": [
                {
                  "_postman_id": "773cf0fe-5bbf-4a06-b38c-c309becc7231",
                  "name": "Create a Paydirekt OneKlick Configuration",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"parentPaymentProviderConfigurationId\": \"\",\r\n    \"companyName\": \"\",\r\n    \"streetAddress\": \"\",\r\n    \"extendedStreetAddress\": \"\",\r\n    \"locale\": \"\",\r\n    \"region\": \"\",\r\n    \"postCode\": \"\",\r\n    \"country\": \"\"\r\n}\r\n"
                    },
                    "url": "{{providersApiUrl}}/v1/payment-providers/paydirekt-oneklick",
                    "description": "# Description\r\n\r\nCreate a Paydirekt OneKlick configuration.\r\n\r\n## Role required\r\n\r\n`t.psp.a`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrencies | Yes | An array of currency ISO codes.\r\nparentPaymentProviderConfigurationId | Yes | The account-level parent configuration id.\r\ncompanyName | No | The company name.\r\nstreetAddress | Yes | The street address.\r\nextendedStreetAddress | No | The extended street address if required.\r\nlocale | Yes | The locale.\r\nregion | Yes | The region.\r\npostCode | Yes | The postcode.\r\ncountry | Yes | The country."
                  },
                  "response": [
                    {
                      "id": "0855aab0-9b5c-4eff-861c-fd4f1c12edd7",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"\",\n    \"currencies\": [],\n    \"parentPaymentApiProductConfigurationId\": \"\",\n    \"companyName\": \"\",\n    \"streetAddress\": \"\",\n    \"extendedStreetAddress\": \"\",\n    \"locale\": \"\",\n    \"region\": \"\",\n    \"postCode\": \"\",\n    \"country\": \"\"\n}"
                        },
                        "url": "{{providersApiUrl}}/v1/payment-providers/paydirekt-oneklick"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"paymentProvider\": {\n\t\t\"id\": \"PAYDIREKT\",\n\t\t\"name\": \"Paydirekt\"\n\t},\n\t\"paymentApiProduct\": {\n\t\t\"id\": \"PAYDIREKT_ONEKLICK\",\n\t\t\"name\": \"Paydirekt OneKlick\",\n\t\t\"description\": \"\"\n\t},\n\t\"paymentProviderConfigurationId\": \"\",\n    \"name\": \"\",\n    \"currencies\": [],\n    \"parentPaymentProviderConfigurationId\": \"\",\n    \"companyName\": \"\",\n    \"streetAddress\": \"\",\n    \"extendedStreetAddress\": \"\",\n    \"locale\": \"\",\n    \"region\": \"\",\n    \"postCode\": \"\",\n    \"country\": \"\"\n}\n"
                    }
                  ]
                },
                {
                  "_postman_id": "77547e7f-a691-43ad-b6ee-c6b1c8c890b2",
                  "name": "Update a Paydirekt OneKlick Configuration",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"parentPaymentProviderConfigurationId\": \"\",\r\n    \"companyName\": \"\",\r\n    \"streetAddress\": \"\",\r\n    \"extendedStreetAddress\": \"\",\r\n    \"locale\": \"\",\r\n    \"region\": \"\",\r\n    \"postCode\": \"\",\r\n    \"country\": \"\"\r\n}"
                    },
                    "url": "{{providersApiUrl}}/v1/payment-providers/paydirekt-oneklick/{{paymentProviderConfigurationId}}",
                    "description": "#### Description\r\n\r\nUpdates a Paydirekt OneKlick configuration.\r\n\r\n#### Role required\r\n\r\n`t.psp.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\npaymentProviderConfigurationId | The id of the payment provider configuration to update\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name for this configuration. \r\ncurrencies | Yes | An array of currency ISO codes.\r\nparentPaymentProviderConfigurationId | Yes | The account-level parent payment provider configuration id.\r\ncompanyName | No | The company name.\r\nstreetAddress | Yes | The street address.\r\nextendedStreetAddress | No | The extended street address if required.\r\nlocale | Yes | The locale.\r\nregion | Yes | The region.\r\npostCode | Yes | The postcode.\r\ncountry | Yes | The country."
                  },
                  "response": [
                    {
                      "id": "078acf3a-0032-450d-b819-ae86f391f975",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"\",\r\n    \"currencies\": [],\r\n    \"parentPaymentProviderConfigurationId\": \"\",\r\n    \"companyName\": \"\",\r\n    \"streetAddress\": \"\",\r\n    \"extendedStreetAddress\": \"\",\r\n    \"locale\": \"\",\r\n    \"region\": \"\",\r\n    \"postCode\": \"\",\r\n    \"country\": \"\"\r\n}\r\n"
                        },
                        "url": "{{providersApiUrl}}/v1/payment-providers/paydirekt-oneklick/{{paymentProviderConfigurationId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "d8a0acbb-2f12-49bc-b747-51d90428d74b",
              "name": "Get list of Payment Provider Configurations",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{providersApiUrl}}/v1/payment-providers/",
                "description": "#### Description\r\n\r\nGets a list Payment Provider configurations.\r\n\r\n#### Role required\r\n\r\n`t.psp.r`\r\n\r\n#### Response Object\r\n\r\nPlease note. The array of response object shape will vary depending on the type of provider configuration you requested. \r\nSee the response object documentation for your particular provider ie. Braintree SDK, Paydirekt Merchant etc."
              },
              "response": [
                {
                  "id": "0ab42881-d03a-452e-9d39-27cb90f4f7ad",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{providersApiUrl}}/v1/payment-providers/"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n\t{\n\t\t\"paymentProvider\": {\n\t\t\t\"id\": \"BRAINTREE\",\n\t\t\t\"name\": \"Braintree\"\n\t\t},\n\t\t\"paymentApiProduct\": {\n\t\t\t\"id\": \"BRAINTREE_SDK\",\n\t\t\t\"name\": \"Braintree SDK\",\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t\"paymentProviderConfigurationId\": \"\",\n\t    \"name\": \"\",\n\t    \"currencies\": [],\n\t    \"merchantId\": \"\",\n\t    \"publicKey\": \"\",\n\t    \"merchantAccountId\": \"\"\n\t}, \n\t{\n\t\t\"paymentProvider\": {\n\t\t\t\"id\": \"PAYDIREKT\",\n\t\t\t\"name\": \"Paydirekt\"\n\t\t},\n\t\t\"paymentApiProduct\": {\n\t\t\t\"id\": \"PAYDIREKT_MERCHANT\",\n\t\t\t\"name\": \"Paydirekt Merchant\"\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t\"paymentProviderConfigurationId\": \"\",\n\t    \"name\": \"\",\n\t    \"currencies\": [],\n\t    \"publicKey\": \"\",\n\t}\n]"
                }
              ]
            },
            {
              "_postman_id": "006f4533-4f2c-40bc-ac94-4cb799988576",
              "name": "Get a Payment Provider Configuration",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{providersApiUrl}}/v1/payment-providers/{{paymentProviderConfigurationId}}",
                "description": "#### Description\r\n\r\nGets a Payment Provider configuration.\r\n\r\n#### Role required\r\n\r\n`t.psp.r`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\npaymentProviderConfigurationId | The id of the payment provider configuration to retrieve\r\n\r\n#### Response Object\r\n\r\nPlease note. The response object shape will vary depending on the type of provider configuration you requested. \r\nSee the response object documentation for your particular provider ie. Braintree SDK, Paydirekt Merchant etc."
              },
              "response": [
                {
                  "id": "5e032f4d-a1ab-4955-87df-2317364a2ce9",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{providersApiUrl}}/v1/payment-providers/{{paymentProviderConfigurationId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\n\t\"paymentProvider\": {\r\n\t\t\"id\": \"BRAINTREE\",\r\n\t\t\"name\": \"Braintree\"\r\n\t},\r\n\t\"paymentApiProduct\": {\r\n\t\t\"id\": \"BRAINTREE_SDK\",\r\n\t\t\"name\": \"Braintree SDK\",\r\n\t\t\"description\": \"\"\r\n\t},\r\n\t\"paymentProviderConfigurationId\": \"\",\r\n    \"name\": \"\",\r\n    \"currency\": \"\",\r\n    \"merchantId\": \"\",\r\n    \"publicKey\": \"\",\r\n    \"merchantAccountId\": \"\"\r\n}"
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "7b3ea61e-90e6-4e99-959e-a1f82ea69c07",
          "name": "Reward Providers",
          "description": "",
          "item": [
            {
              "_postman_id": "07ac7816-d508-4736-bcd9-6b70aa50013b",
              "name": "Tangocard",
              "description": "",
              "item": [
                {
                  "_postman_id": "20c7338d-79f9-4e00-970b-40a9d685983e",
                  "name": "Create a Tangocard Configuration",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"\",\n    \"customerDisplayName\": \"\",\n    \"accountContactEmail\": \"\"\n}"
                    },
                    "url": "{{providersApiUrl}}/v1/reward-providers/tangocard",
                    "description": "# Description\r\n\r\nCreate a Tangocard Provider configuration.\r\n\r\n## Role required\r\n\r\n`t.rew.a`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A unique name of this configuration"
                  },
                  "response": [
                    {
                      "id": "92796b9e-7d45-4c80-b5a2-803e79b19203",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"name\": \"\",\n    \"customerDisplayName\": \"\",\n    \"accountContactEmail\": \"\"\n}"
                        },
                        "url": "{{providersApiUrl}}/v1/reward-providers/tangocard"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n\t\"rewardConfigurationId\": \"\",\n    \"name\": \"\",\n    \"customerIdentifier\": \"\",\n    \"customerDisplayName\": \"\",\n    \"accountIdentifier\": \"\",\n\t\"accountDisplayName\": \"\"\n    \"accountContactEmail\": \"\"\n}"
                    }
                  ]
                },
                {
                  "_postman_id": "60597b26-cf2d-4dec-a78c-54debb9a4ab3",
                  "name": "Update a Tangocard Configuration",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"name\": \"\"\r\n}"
                    },
                    "url": "{{providersApiUrl}}/v1/reward-providers/tangocard/{{rewardProviderConfigurationId}}",
                    "description": "#### Description\r\n\r\nUpdates a Tangocard Provider configuration.\r\n\r\n#### Role required\r\n\r\n`t.rew.a`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\nrewardProviderConfigurationId | The id of the reward provider configuration to update\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n--------- | ----------- | -----------\r\nname | Yes | A name of this reward provider configuration"
                  },
                  "response": [
                    {
                      "id": "2912f42a-51d2-496f-abdb-58297ae087c1",
                      "name": "Sucessful Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"rewardConfigurationId\": \"\",\n\t\"name\": \"\"\n}"
                        },
                        "url": "{{providersApiUrl}}/v1/reward-providers/tangocard/{{rewardProviderConfigurationId}}"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "json",
                      "header": [],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "cade02ed-ad5d-4d8d-b27e-0333233c12c8",
              "name": "Get list of Reward Provider Configurations",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{providersApiUrl}}/v1/reward-providers",
                "description": "#### Description\r\n\r\nGets a list Reward Provider configurations.\r\n\r\n#### Role required\r\n\r\n`t.rew.r`\r\n\r\n##### Response Object\r\nPlease note. The response object shape will vary depending on the type of provider configuration you requested. See the response object documentation for your particular provider ie. Tangocard etc."
              },
              "response": [
                {
                  "id": "e78f003a-d417-4402-bd4d-0e3bcc2ef00c",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{providersApiUrl}}/v1/reward-providers"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n\t{\n\t\t\"paymentProvider\": {\n\t\t\t\"id\": \"TANGOCARD\",\n\t\t\t\"name\": \"Tangocard\"\n\t\t}\n\t\t\"rewardConfigurationId\": \"\",\n\t    \"name\": \"\"\n\t}\n]"
                }
              ]
            },
            {
              "_postman_id": "2c7eb2a4-6ffd-4db1-81a7-a18604f6070a",
              "name": "Get a Reward Provider Configuration",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{providersApiUrl}}/v1/reward-providers/{{rewardProviderConfigurationId}}",
                "description": "#### Description\r\n\r\nGets a Reward Provider configuration.\r\n\r\n#### Role required\r\n\r\n`t.rew.r`\r\n\r\n#### Params\r\n\r\nParameter | Description\r\n--------- | -----------\r\nrewardProviderConfigurationId | The id of the reward provider configuration to retrieve\r\n\r\n##### Response Object\r\nPlease note. The response object shape will vary depending on the type of provider configuration you requested. See the response object documentation for your particular provider ie. Tangocard etc."
              },
              "response": [
                {
                  "id": "ab7a2d78-9d93-4ba2-908a-e3f05e410ec1",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{providersApiUrl}}/v1/reward-providers/{{rewardConfigurationId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\n\t\"paymentProvider\": {\r\n\t\t\"id\": \"TANGOCARD\",\r\n\t\t\"name\": \"Tangocard\"\r\n\t}\r\n\t\"rewardConfigurationId\": \"\",\r\n    \"name\": \"\"\r\n}"
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "4a062e0b-5c74-4437-b43e-e76481a5cb6f",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "4cd754cc-0dba-4965-b2b9-553c9e36bedb",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "_postman_id": "7165de6d-8e1c-40e4-b581-f69c55932177",
      "name": "Schemes API Reference",
      "description": "",
      "item": [
        {
          "_postman_id": "8ad29eec-f6ef-4c78-ad91-d57dba5f3843",
          "name": "Collection Schemes",
          "description": "\r\nCollection Scheme objects allow you to perform updates to your payment scheme collection settings. The API allows you to create new schemes, and add or update scheme country settings. You can retrieve individual schemes as well as a list of all your schemes for a given client.\r\n\r\n## The collection scheme object\r\n\r\nThe collection scheme object holds details about a collection scheme, and is the parent to one or many scheme settings.\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nid | guid | The unique identifier of the object\r\nname | string | The scheme name \r\nschemeSettings | array | An array of `SchemeSetting` objects \r\n\r\n## The scheme setting object\r\n\r\nThe scheme settings object holds details that concern individual countries' available payment methods. \r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nid | guid | The unique identifier of the object\r\ncountry | string | The country code this scheme setting will apply to\r\npaymentMethods | array | An array of `PaymentMethod` objects \r\n\r\n## The payment method object\r\n\r\nThe payment method object holds details that concern a particular payment method's availablilty.\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\npspId | guid | The unique identifier of the PSP (Payment Service Provider) providing services to the payment method\r\npaymentMethodType | string | The name of the payment payment. ie. `visa-debit`, `paypal`, etc.\r\nenabled | bool | Boolean value that determines if this payment method is currently enabled. \r\nkey | string | A composite value of `pspId` and `paymentMethodType`\r\n",
          "item": [
            {
              "_postman_id": "23d0f3a2-7922-487b-abe6-016e7f6caf8b",
              "name": "Create a Scheme",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"overrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                },
                "url": "{{schemesApiUrl}}/v1/collect",
                "description": "#### Description \n\nCreates a new collection scheme.\n\n#### Role required\n\n`t.sch.a`"
              },
              "response": [
                {
                  "id": "b4335f8a-6052-45aa-af91-d27beee91254",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"overrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                    },
                    "url": "{{schemesApiUrl}}/v1/collect"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"overrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                }
              ]
            },
            {
              "_postman_id": "bd083408-e583-4824-985b-67b902e39437",
              "name": "Get list of Schemes",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{schemesApiUrl}}/v1/collect",
                "description": "#### Description \n\nGet a list to collection schemes.\n\n#### Role required\n\n`t.sch.r`"
              },
              "response": [
                {
                  "id": "21b0f487-db0c-4df5-ac98-9a49f7d5f08b",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{schemesApiUrl}}/v1/collect"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n    \t\"id\": \"\",\n        \"name\": \"\",\n        \"paymentProviderConfigurations\": [],\n        \"collectSchemeOverrides\": [\n            {\n                \"isGlobal\": \"\",\n                \"country\": \"\",\n                \"paymentProviderConfigurationId\": \"\",\n                \"paymentMethod\": \"\",\n                \"enabled\": \"\"\n            }\n        ]\n    }\n]"
                }
              ]
            },
            {
              "_postman_id": "f7472dd1-2841-4e99-978b-a6bb91297c66",
              "name": "Get a Scheme",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{schemesApiUrl}}/v1/collect/{{schemeId}}",
                "description": "#### Description \n\nGet a collection scheme.\n\n#### Role required\n\n`t.sch.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nschemeId | The id of the scheme to get"
              },
              "response": [
                {
                  "id": "ea7263ae-2781-4db0-b20b-7b67232964a7",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{schemesApiUrl}}/v1/collect/{{schemeId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{ \r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"collectSchemeOverrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}\r\n"
                }
              ]
            },
            {
              "_postman_id": "3ecf0965-9615-4242-b441-10f2d476496c",
              "name": "Update a Scheme",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"collectSchemeOverrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                },
                "url": "{{schemesApiUrl}}/v1/collect/{{schemeId}}",
                "description": "#### Description \n\nUpdates a scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nschemeId | The id of the scheme to be updated"
              },
              "response": [
                {
                  "id": "ca194e66-3b2d-4af3-a926-9fe11ddf42b7",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"clientPspConfigurations\": [],\r\n\t\"collectSchemeOverrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"clientPspConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                    },
                    "url": "{{schemesApiUrl}}/v1/collect/{{schemeId}}"
                  },
                  "status": "Accepted",
                  "code": 202,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{ \r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"paymentProviderConfigurations\": [],\r\n\t\"collectSchemeOverrides\": [\r\n\t\t{\r\n\t\t\t\"isGlobal\": \"\",\r\n\t\t\t\"country\": \"\",\r\n\t\t\t\"paymentProviderConfigurationId\": \"\",\r\n\t\t\t\"paymentMethod\": \"\",\r\n\t\t\t\"enabled\": \"\"\r\n\t\t}\r\n\t]\r\n}"
                }
              ]
            },
            {
              "_postman_id": "96bda309-4b05-426a-8efe-0537d03f7c4e",
              "name": "Delete a Scheme",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{schemesApiUrl}}/v1/collect/{{schemeId}}",
                "description": "#### Description \n\nDeletes a collection scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nschemeId | The id of the scheme to delete"
              },
              "response": [
                {
                  "id": "3380f369-5032-46ca-8caf-13bdb5ab4d4a",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{schemesApiUrl}}/v1/collect/{{schemeId}}"
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "57551b22-20a1-4c0a-874c-9243c4a9eb10",
          "name": "Payout Schemes",
          "description": "Payout Scheme objects allow you to perform updates to your payout scheme settings. The API allows you to create and update schemes, retrieve individual schemes, as well as a list of all schemes for your tenant.\r\n\r\n## General Rewards vs Country Rewards\r\n\r\nOur [Reward Object](#the-reward-object) below defines both General and Country rewards. \r\n\r\nWe offer these guidelines when setting up scheme rewards:\r\n\r\n- Setup your General Rewards to contain rewards that you would like to be made available to **any** user, irrespective of the country the reward would normally be used in.\r\n- Setup Country Rewards to contain rewards that will only be available in a specific country. \r\n\r\nThe Whitelabel API has endpoints that allow you to request payout scheme payment methods based on a currency and country and it is these API endpoints that will filter the General and Country rewards accordingly.\r\n\r\n\r\n## The payout scheme object\r\n\r\nThe payout scheme object holds details about a payout scheme.\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nid | guid | The unique identifier of the scheme\r\nname | string | The scheme name \r\ncurrencies | string array | An array of `currency` codes this scheme supports\r\nrewardProviders | guid array | An array of reward provider configuration ids linked to this scheme\r\nrewards | reward array | An array of `reward` objects defining the rewards for this scheme \r\n\r\n## The reward object\r\n\r\nThe reward object holds details of the rewards available for a specific currency.\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\ncurrency | string | The `currency` code the rewards applies to\r\ngeneralRewards | guid array | An array of reward ids that could apply to any country.\r\ncountryRewards | country reward array | An array of `country reward` objects\r\n\r\n## The country reward object\r\n\r\nThe country reward object holds details of the rewards available for a single country\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\ncountry | string | The `country` code the rewards apply to\r\nrewards | guid array | An array of reward ids that apply to this country\r\n",
          "item": [
            {
              "_postman_id": "f37f0abb-065a-4904-848c-95dd716b36ee",
              "name": "Create a Scheme",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                },
                "url": "{{schemesApiUrl}}/v1/payout",
                "description": "#### Description \n\nCreates a new payout scheme.\n\n#### Role required\n\n`t.sch.a`"
              },
              "response": [
                {
                  "id": "bddcd0fe-28fb-417f-b736-941da7fedd8d",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                    },
                    "url": "{{schemesApiUrl}}/v1/payout"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{ \r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                }
              ]
            },
            {
              "_postman_id": "a6ec64f2-ea18-4872-a35e-058fb9fd9878",
              "name": "Get list of Schemes",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{schemesApiUrl}}/v1/payout",
                "description": "#### Description \n\nGet a list to payout schemes.\n\n#### Role required\n\n`t.sch.r`"
              },
              "response": [
                {
                  "id": "cc23e532-4f07-4ea8-bea9-f517602a9e3c",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Hmac {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{schemesApiUrl}}/v1/payout"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\r\n\t{ \r\n\t\t\"id\": \"\",\r\n\t\t\"name\": \"\",\r\n\t\t\"currencies\": [],\r\n\t\t\"rewardProviders\": [],\r\n\t\t\"rewards\": [\r\n\t\t\t{\r\n\t\t\t\t\"currency\": \"\",\r\n\t\t\t\t\"generalRewards\": [],\r\n\t\t\t\t\"countryRewards\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\t\"rewards\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t    \"brand\": {\r\n\t\t\t\t\t\t\t        \"brandKey\": \"\",\r\n\t\t\t\t\t\t\t        \"brandName\": \"\",\r\n\t\t\t\t\t\t\t        \"createdDate\": \"\",\r\n\t\t\t\t\t\t\t        \"description\": \"\",\r\n\t\t\t\t\t\t\t        \"disclaimer\": \"\",\r\n\t\t\t\t\t\t\t        \"imageUrls\": [\r\n\t\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t\t                \"width\": 80\r\n\t\t\t\t\t\t\t            },\r\n\t\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t\t                \"width\": 130\r\n\t\t\t\t\t\t\t            },\r\n\t\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t\t                \"width\": 200\r\n\t\t\t\t\t\t\t            },\r\n\t\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t\t                \"width\": 278\r\n\t\t\t\t\t\t\t            },\r\n\t\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t\t                \"width\": 300\r\n\t\t\t\t\t\t\t            },\r\n\t\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t\t                \"width\": 1200\r\n\t\t\t\t\t\t\t            }\r\n\t\t\t\t\t\t\t        ],\r\n\t\t\t\t\t\t\t        \"lastUpdateDate\": \"\",\r\n\t\t\t\t\t\t\t        \"requirements\": {\r\n\t\t\t\t\t\t\t            \"alwaysShowDisclaimer\": false,\r\n\t\t\t\t\t\t\t            \"disclaimerInstructions\": \"\",\r\n\t\t\t\t\t\t\t            \"displayInstructions\": \"\",\r\n\t\t\t\t\t\t\t            \"termsAndConditionsInstructions\": \"\"\r\n\t\t\t\t\t\t\t        },\r\n\t\t\t\t\t\t\t        \"shortDescription\": \"\",\r\n\t\t\t\t\t\t\t        \"status\": \"\",\r\n\t\t\t\t\t\t\t        \"terms\": \"\"\r\n\t\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t\t    \"countries\": [],\r\n\t\t\t\t\t\t\t    \"createdDate\": \"\",\r\n\t\t\t\t\t\t\t    \"credentialTypes\": [],\r\n\t\t\t\t\t\t\t    \"currencyCode\": \"\",\r\n\t\t\t\t\t\t\t    \"exchangeRateRule\": \"\",\r\n\t\t\t\t\t\t\t    \"isWholeAmountValueRequired\": false,\r\n\t\t\t\t\t\t\t    \"lastUpdateDate\": \"\",\r\n\t\t\t\t\t\t\t    \"provider\": {\r\n\t\t\t\t\t\t\t        \"id\": \"\",\r\n\t\t\t\t\t\t\t        \"name\": \"\"\r\n\t\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t\t    \"redemptionInstructions\": \"\",\r\n\t\t\t\t\t\t\t    \"rewardId\": \"\",\r\n\t\t\t\t\t\t\t    \"rewardName\": \"\",\r\n\t\t\t\t\t\t\t    \"rewardType\": \"\",\r\n\t\t\t\t\t\t\t    \"status\": \"\",\r\n\t\t\t\t\t\t\t    \"tags\": [],\r\n\t\t\t\t\t\t\t    \"value\": {\r\n\t\t\t\t\t\t\t        \"greaterThan\": null,\r\n\t\t\t\t\t\t\t        \"greaterThanOrEqualTo\": 0,\r\n\t\t\t\t\t\t\t        \"lessThan\": null,\r\n\t\t\t\t\t\t\t        \"lessThanOrEqualTo\": 0\r\n\t\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t\t    \"valueType\": \"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n]"
                }
              ]
            },
            {
              "_postman_id": "286b1557-3959-4d09-8a18-227b2268da46",
              "name": "Get a Scheme",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{schemesApiUrl}}/v1/payout/{schemeId}",
                "description": "#### Description \n\nGet a collection scheme.\n\n#### Role required\n\n`t.sch.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nschemeId | The id of the scheme to get"
              },
              "response": [
                {
                  "id": "ca089b62-52a4-46b4-9b90-ecd1c0d4accb",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{schemesApiUrl}}/v1/payout/{{schemeId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{ \r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t    \"brand\": {\r\n\t\t\t\t\t\t        \"brandKey\": \"\",\r\n\t\t\t\t\t\t        \"brandName\": \"\",\r\n\t\t\t\t\t\t        \"createdDate\": \"\",\r\n\t\t\t\t\t\t        \"description\": \"\",\r\n\t\t\t\t\t\t        \"disclaimer\": \"\",\r\n\t\t\t\t\t\t        \"imageUrls\": [\r\n\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t                \"width\": 80\r\n\t\t\t\t\t\t            },\r\n\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t                \"width\": 130\r\n\t\t\t\t\t\t            },\r\n\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t                \"width\": 200\r\n\t\t\t\t\t\t            },\r\n\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t                \"width\": 278\r\n\t\t\t\t\t\t            },\r\n\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t                \"width\": 300\r\n\t\t\t\t\t\t            },\r\n\t\t\t\t\t\t            {\r\n\t\t\t\t\t\t                \"ppi\": 326,\r\n\t\t\t\t\t\t                \"ratioHeight\": 5,\r\n\t\t\t\t\t\t                \"ratioWidth\": 8,\r\n\t\t\t\t\t\t                \"url\": \"\",\r\n\t\t\t\t\t\t                \"width\": 1200\r\n\t\t\t\t\t\t            }\r\n\t\t\t\t\t\t        ],\r\n\t\t\t\t\t\t        \"lastUpdateDate\": \"\",\r\n\t\t\t\t\t\t        \"requirements\": {\r\n\t\t\t\t\t\t            \"alwaysShowDisclaimer\": false,\r\n\t\t\t\t\t\t            \"disclaimerInstructions\": \"\",\r\n\t\t\t\t\t\t            \"displayInstructions\": \"\",\r\n\t\t\t\t\t\t            \"termsAndConditionsInstructions\": \"\"\r\n\t\t\t\t\t\t        },\r\n\t\t\t\t\t\t        \"shortDescription\": \"\",\r\n\t\t\t\t\t\t        \"status\": \"\",\r\n\t\t\t\t\t\t        \"terms\": \"\"\r\n\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t    \"countries\": [],\r\n\t\t\t\t\t\t    \"createdDate\": \"\",\r\n\t\t\t\t\t\t    \"credentialTypes\": [],\r\n\t\t\t\t\t\t    \"currencyCode\": \"\",\r\n\t\t\t\t\t\t    \"exchangeRateRule\": \"\",\r\n\t\t\t\t\t\t    \"isWholeAmountValueRequired\": false,\r\n\t\t\t\t\t\t    \"lastUpdateDate\": \"\",\r\n\t\t\t\t\t\t    \"provider\": {\r\n\t\t\t\t\t\t        \"id\": \"\",\r\n\t\t\t\t\t\t        \"name\": \"\"\r\n\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t    \"redemptionInstructions\": \"\",\r\n\t\t\t\t\t\t    \"rewardId\": \"\",\r\n\t\t\t\t\t\t    \"rewardName\": \"\",\r\n\t\t\t\t\t\t    \"rewardType\": \"\",\r\n\t\t\t\t\t\t    \"status\": \"\",\r\n\t\t\t\t\t\t    \"tags\": [],\r\n\t\t\t\t\t\t    \"value\": {\r\n\t\t\t\t\t\t        \"greaterThan\": null,\r\n\t\t\t\t\t\t        \"greaterThanOrEqualTo\": 0,\r\n\t\t\t\t\t\t        \"lessThan\": null,\r\n\t\t\t\t\t\t        \"lessThanOrEqualTo\": 0\r\n\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t    \"valueType\": \"\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                }
              ]
            },
            {
              "_postman_id": "1478d3ee-5421-4f6c-8304-db371163e870",
              "name": "Update a Scheme",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                },
                "url": "{{schemesApiUrl}}/v1/payout/{{schemeId}}",
                "description": "#### Description \n\nUpdates a scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nschemeId | The id of the scheme to be updated"
              },
              "response": [
                {
                  "id": "eeb75375-25cd-4b52-b855-8eefbe51476b",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{ \r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                    },
                    "url": "{{schemesApiUrl}}/v1/payout/{{schemeId}}"
                  },
                  "status": "Accepted",
                  "code": 202,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{ \r\n\t\"id\": \"\",\r\n\t\"name\": \"\",\r\n\t\"currencies\": [],\r\n\t\"rewardProviders\": [],\r\n\t\"rewards\": [\r\n\t\t{\r\n\t\t\t\"currency\": \"\",\r\n\t\t\t\"generalRewards\": [],\r\n\t\t\t\"countryRewards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"country\": \"\",\r\n\t\t\t\t\t\"rewards\": []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
                }
              ]
            },
            {
              "_postman_id": "81d05a45-db3a-4517-b351-884ad29c64b8",
              "name": "Delete a Scheme",
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{schemesApiUrl}}/v1/payout/{{schemeId}}",
                "description": "#### Description \n\nDeletes a collection scheme.\n\n#### Role required\n\n`t.sch.a`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nschemeId | The id of the scheme to delete"
              },
              "response": [
                {
                  "id": "342f2685-1982-49f3-82d6-faa5ca14e8f4",
                  "name": "Sucessful Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Hmac {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{schemesApiUrl}}/v1/payout/{{schemeId}}"
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "json",
                  "header": [],
                  "cookie": [],
                  "responseTime": null,
                  "body": ""
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "63085b5b-7027-4e15-95aa-185f185ced79",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b09366f8-89a3-464b-b986-774493cacf0a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "2d3ce1f5-408c-461c-ab73-f2ffb2f3cf35",
      "name": "Notifications API Reference",
      "description": "",
      "item": [
        {
          "_postman_id": "541b4c1b-866c-4864-a37b-11448d9f9e9b",
          "name": "Create a Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"eventType\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
            },
            "url": "{{notificationsApiUrl}}/v1/webhooks",
            "description": "# Description\r\n\r\nCreates a Webhook.\r\n\r\n## Role required\r\n\r\n`client-webhook-write`\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n- | - | -\r\neventType | Yes | The event type that the webhook will be subscribing to.\r\nurl | Yes | The url of the webhook.\r\nisEnabled | Yes | Sets if the webhook is enabled or not."
          },
          "response": [
            {
              "id": "3a93b10d-e231-4ee8-bed1-4d4913511d82",
              "name": "Succesful Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"eventType\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
                },
                "url": "https://{{notificationsApiUrl}}/v1/webhooks"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"id\": \"\",\n    \"eventType\": \"\",\n    \"url\": \"\",\n    \"isEnabled\": true\n}"
            }
          ]
        },
        {
          "_postman_id": "fb876542-d4cc-4566-a836-c5e475450690",
          "name": "Get list of Webhooks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{notificationsApiUrl}}/v1/webhooks",
            "description": "#### Description\r\n\r\nGets a list of Webhooks.\r\n\r\n#### Role required\r\n\r\n`t.whk.r`"
          },
          "response": [
            {
              "id": "f7e896b5-ef3a-4bac-98c2-4e46539b1a3c",
              "name": "Successful Request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{notificationsApiUrl}}/v1/webhooks"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n    {\n        \"id\": \"\",\n        \"eventType\": \"\",\n        \"url\": \"\",\n        \"isEnabled\": true\n    }\n]"
            }
          ]
        },
        {
          "_postman_id": "385b7c96-3e5b-4151-bef1-024ed0f4b751",
          "name": "Update a Webhook",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"eventType\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
            },
            "url": "{{notificationsApiUrl}}/v1/webhooks/{{clientWebhookId}}",
            "description": "# Description\r\n\r\nUpdates a Webhook.\r\n\r\n## Role required\r\n\r\n`t.whk.a`\r\n\r\n### Params\r\n\r\nParameter | Description\r\n- | -\r\nclientWebhookId | The id of the Webhook to update.\r\n\r\n#### Request body\r\n\r\nA JSON formatted object string.\r\n\r\nKey name | Required | Description\r\n- | - | -\r\neventType | Yes | The event type that the webhook will be subscribing to.\r\nurl | Yes | The url of the webhook.\r\nisEnabled | Yes | Sets if the webhook is enabled or not."
          },
          "response": [
            {
              "id": "35e022e1-1429-41d4-9ed5-e7d43a98adaa",
              "name": "Successful Request",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"eventType\": \"\",\n\t\"url\": \"\",\n\t\"isEnabled\": true\n}"
                },
                "url": "{{notificationsApiUrl}}/v1/webhooks/{{clientWebhookId}}"
              },
              "status": "Accepted",
              "code": 202,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"id\": \"\",\n    \"eventType\": \"\",\n    \"url\": \"\",\n    \"isEnabled\": true\n}"
            }
          ]
        },
        {
          "_postman_id": "7006f3b7-5d94-4d6f-bf68-4c3f2532af16",
          "name": "Delete a Webhook",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{notificationsApiUrl}}/v1/webhooks/{{clientWebhookId}}",
            "description": "# Description\r\n\r\nDeletes a Webhook.\r\n\r\n## Role required\r\n\r\n`t.whk.a`\r\n\r\n### Params\r\n\r\nParameter | Description\r\n- | -\r\nclientWebhookId | The id of the Webhook to delete."
          },
          "response": [
            {
              "id": "100d6a2e-26fe-4a27-a65c-c5df1da14ef3",
              "name": "Successful Request",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{notificationsApiUrl}}/v1/webhooks/{{clientWebhookId}}"
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": null
            }
          ]
        }
      ]
    },
    {
      "_postman_id": "cf290393-bf52-4b01-adf9-7273a3e3795a",
      "name": "Whitelabel Settings API Reference",
      "description": "Client objects allow you to perform updates to clients. The API allows you to create, delete, and update your clients. You can retrieve individual clients as well as a list of all your clients.\r\n\r\n## The client object\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nid | guid | The unique identifier of the object\r\nname | string | The clients name \r\naddress | [address](#the-address-object) object | The client address\r\nwhiteLabelSettings | [White Label document](#the-white-label-settings-object) object | The white label settings for the client. ie. logo, styling document etc.\r\n\r\n## The address object\r\n\r\nAttribute | Type | Description\r\n-|-|-\r\nstreetAddress | string | First line of address\r\nextendedAddress | string | Second line of an address if requried\r\nlocality | string | The locality / city\r\nregion | string | The region / state / county\r\npostCode | string | The post code / zip code\r\ncountry | string | The ISO 3166-1 alpha-2 country code",
      "item": [
        {
          "_postman_id": "fdd9a44f-7dce-4a3c-980c-f748779ef8cb",
          "name": "Get Whitelabel Settings",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{whitelabelApiUrl}}/v1/settings",
            "description": "#### Description\n\nRetrieves the a tenants white label settings.\n\n#### Role Required\n\n`client-read`"
          },
          "response": [
            {
              "id": "63960dfe-bec2-4459-be49-fc5ba50d502f",
              "name": "Successful request",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{whitelabelApiUrl}}/v1/settings"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": "{\r\n  \"id\": \"d929d6e2-0b43-4b24-87ef-0dd6c3bcdd02\",\r\n  \"name\": \"Capital Insurance AG\",\r\n  \"address\": {\r\n    \"streetAddress\": \"Suite 19 Argeles Grove\",\r\n    \"extendedAddress\": \"\",\r\n    \"locality\": \"London\",\r\n    \"region\": \"Middlesex\",\r\n    \"postCode\": \"SW1 1LA\",\r\n    \"country\": \"GB\"\r\n  }\r\n  \"whiteLabelSettings\": {\r\n    \"logoUri\": \"\",\r\n    \"styling\": {\r\n      \"stylesheet\": \"\",\r\n      \"inputFieldStyles\" : [\r\n        {\r\n          \"styleName\": \"\",\r\n          \"styles\": [\r\n            {\r\n              \"key\": \"\",\r\n              \"value\": \"\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
            }
          ]
        },
        {
          "_postman_id": "dcc42e79-ff65-48ab-ad7e-06496a283320",
          "name": "Upload Whitelabel Logo",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "file",
              "file": {
                "src": null
              }
            },
            "url": "{{whitelabelApiUrl}}/v1/settings/logo",
            "description": "#### Description\n\nUploads a logo for the tenants white label settings.\n\n#### Role required\n\n`client-write`"
          },
          "response": [
            {
              "id": "76785518-c5d2-44d0-ae82-ba6fc1953624",
              "name": "Successful request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "file",
                  "file": {}
                },
                "url": "{{whitelabelApiUrl}}/v1/settings/logo"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": "{\r\n  \"id\": \"d929d6e2-0b43-4b24-87ef-0dd6c3bcdd02\",\r\n  \"name\": \"Capital Insurance AG\",\r\n  \"address\": {\r\n    \"streetAddress\": \"Suite 19 Argeles Grove\",\r\n    \"extendedAddress\": \"\",\r\n    \"locality\": \"London\",\r\n    \"region\": \"Middlesex\",\r\n    \"postCode\": \"SW1 1LA\",\r\n    \"country\": \"GB\"\r\n  },\r\n  \"whiteLabelSettings\": {\r\n    \"logoUri\": \"\",\r\n    \"styling\": {\r\n      \"stylesheet\": \"\",\r\n      \"inputFieldStyles\" : [\r\n        {\r\n          \"styleName\": \"\",\r\n          \"styles\": [\r\n            {\r\n              \"key\": \"\",\r\n              \"value\": \"\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
            }
          ]
        },
        {
          "_postman_id": "106629ab-3716-4fd7-ba3b-a44a6c9a9606",
          "name": "Upload Whitelabel Styling",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "file",
              "file": {
                "src": null
              }
            },
            "url": "{{whitelabelApiUrl}}/v1/settings/styling",
            "description": "#### Description\n\nUploads a styling document for the tenant's white label settings.\n\n#### Role required\n\n`client-write`"
          },
          "response": [
            {
              "id": "dd9435f5-213d-4f2c-a9e4-418d7365ea37",
              "name": "Successful request",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "file",
                  "file": {}
                },
                "url": "{{whitelabelApiUrl}}/v1/settings/styling"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": "{\r\n  \"id\": \"d929d6e2-0b43-4b24-87ef-0dd6c3bcdd02\",\r\n  \"name\": \"Capital Insurance AG\",\r\n  \"address\": {\r\n    \"streetAddress\": \"Suite 19 Argeles Grove\",\r\n    \"extendedAddress\": \"\",\r\n    \"locality\": \"London\",\r\n    \"region\": \"Middlesex\",\r\n    \"postCode\": \"SW1 1LA\",\r\n    \"country\": \"GB\"\r\n  },\r\n  \"whiteLabelSettings\": {\r\n    \"logoUri\": \"\",\r\n    \"styling\": {\r\n      \"stylesheet\": \"\",\r\n      \"inputFieldStyles\" : [\r\n        {\r\n          \"styleName\": \"\",\r\n          \"styles\": [\r\n            {\r\n              \"key\": \"\",\r\n              \"value\": \"\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
            }
          ]
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "fd40b9f6-f0a7-4190-bb93-66e80fd039d8",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "d57342ab-7b4f-4df4-9bc3-eb3adc77d4ad",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "_postman_id": "e431af90-ea5d-468b-838f-64603b97999f",
      "name": "Payment Collection API Reference",
      "description": "\r\n##### Request structure\r\n\r\nThe following endpoints to manage customers, with orders and payment instructions. While the style is RESTful in nature, the collect API is not a fully REST service.\r\n\r\nIn most cases entities have an `/audit-history` endpoint which can be used to diagnose changes or problems a customer may have settling a payment.\r\n\r\n##### Error Handling\r\n\r\nValidation errors will return a common `400 Bad Request` HTTP status code with a response body in a common format.\r\n\r\nProperty | Type | Description\r\n- | - | -\r\n`errors` | Array[string] | One or many standardized error codes representing the failure.\r\n\r\n",
      "item": [
        {
          "_postman_id": "a429d1a1-5f36-4e69-b80d-7203302d6c57",
          "name": "Get Customer",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{collectApiUrl}}/v1/customer/{{customerRef}}",
            "description": "The following endpoint will return the current state of a customer.\n\nCustomers don't need to be created and as such an authorized API user can query non-existent customers.\n\nThe customer is identified by a `customerRef` - A value provided from your own system to ours."
          },
          "response": []
        },
        {
          "_postman_id": "e459f1de-3fd0-4a99-b365-1034e593fda2",
          "name": "Get Customer Audit History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{collectApiUrl}}/v1/customer/{{customerRef}}/audit-history",
            "description": "The following endpoint will return an unstructured list of customer events."
          },
          "response": []
        },
        {
          "_postman_id": "e38f98d3-3555-43b1-89a0-c8fbf6fc2ca6",
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"orderRef\": \"\",\r\n\t\"currency\": \"\",\r\n\t\"country\": \"\",\r\n\t\"scheme\": \"\"\r\n}"
            },
            "url": "https://{{collectApiUrl}}/v1/customer/{{customerRef}}/order",
            "description": "This is the first stage required to collect a payment.\r\n\r\nAn order must be given both a unique `customerRef` and `orderRef`. Both of these values are created and owned by you, the API consumer. In both cases the reference fields can be used query current status, view audit history or to cancel, void or reconcile payments.\r\n\r\n#### Request Body\r\n\r\nThe following parameters are sent in JSON format.\r\n\r\nParameter | Type | Description\r\n- | - | -\r\norderRef | string (50 char max) | A unique identifier used to group one or many payment instructions.\r\ncurrency | ISO3 | The currency to collect the payment in.\r\ncountry | ISO2 | The country in which the customer resides to localize payment options.\r\nscheme | string | The identifier of the `Scheme` in which to use.\r\n\r\n#### Validation errors\r\n\r\nOne or many of the following errors may be returned if there were issues validating the request.\r\n\r\nCode | Description\r\n- | - \r\n`CUSTOMER_REF_IS_REQUIRED` | Reference is required.\r\n`CUSTOMER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`CUSTOMER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`ORDER_REF_IS_REQUIRED` | Reference is required.\r\n`ORDER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`ORDER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`CURRENCY_IS_REQUIRED` | Currency is required.\r\n`CURRENCY_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 3 characters.\r\n`COUNTRY_IS_REQUIRED` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`COUNTRY_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 2 characters.\r\n`SCHEME_IS_REQUIRED` | Scheme is required.\r\n`SCHEME_FORMAT_NOT_RECOGNISED` | Scheme was not recognised as a valid `GUID`."
          },
          "response": []
        },
        {
          "_postman_id": "e0078fba-e825-41c2-bb85-ebc07e6f16d5",
          "name": "Get Order",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{collectApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}",
            "description": "The following endpoint will return the current state of an order.\n\nOrders must be created before they can be queried.\n\nThe order is identified by both a `customerRef` and an `orderRef`. Both of these values are provided from your own system to ours.\n\nAn `orderRef` needs to be unique to the customer but does not need to be globally unique."
          },
          "response": []
        },
        {
          "_postman_id": "7df35700-b39c-4b24-b2f4-e37f3482d2ec",
          "name": "Get Order Audit History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{collectApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}/audit-history",
            "description": "The following endpoint will return an unstructured list of order events."
          },
          "response": []
        },
        {
          "_postman_id": "62bfc7fb-172f-4a10-ae9d-1c82be2e413b",
          "name": "Create Instruction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"instructionRef\": \"\",\r\n\t\"amount\": \"\",\r\n\t\"openDate\": \"\",\r\n\t\"dueDate\": \"\"\r\n}"
            },
            "url": "https://{{collectApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}/instruction",
            "description": "An order requires one or many payment instructions to be set up. These instructions act as a payment schedule and contain the amount to be collected, the open date and the due date of the collection.\r\n\r\nAn instruction must be given a unique `instructionRef` (unique to the customer's order). This reference can be used in the future to look up or make amendments to an instruction.\r\n\r\n#### Request Body\r\n\r\nThe following parameters are sent in JSON format.\r\n\r\nParameter | Type | Description\r\n- | - | -\r\ninstructionRef | string (50 char max) | A unique identifier used to represent a single payment instruction.\r\namount | Decimal | The amount to collect.\r\nopenDate | Date (YYYY-MM-DD) | The date in which a manual payment can be made from.\r\ndueDate | Date (YYYY-MM-DD) | The date in which a manual payment is to be settled by, or if automated will be taken on.\r\n\r\n#### Validation errors\r\n\r\nOne or many of the following errors may be returned if there were issues validating the request.\r\n\r\nCode | Description\r\n- | - \r\n`CUSTOMER_REF_IS_REQUIRED` | Reference is required.\r\n`CUSTOMER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`CUSTOMER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`ORDER_REF_IS_REQUIRED` | Reference is required.\r\n`ORDER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`ORDER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`INSTRUCTION_REF_IS_REQUIRED` | Reference is required.\r\n`INSTRUCTION_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`INSTRUCTION_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`AMOUNT_IS_REQUIRED` | Amount is required.\r\n`AMOUNT_FORMAT_NOT_RECOGNISED` | Amount must be in decimal form.\r\n`AMOUNT_OUT_OF_RANGE` | Amount must be greater than zero.\r\n`OPEN_DATE_IS_REQUIRED` | Open Date is required.\r\n`OPEN_DATE_FORMAT_NOT_RECOGNISED` | Due Date could not be read as a valid date.\r\n`DUE_DATE_IS_REQUIRED` | Due Date is required.\r\n`DUE_DATE_FORMAT_NOT_RECOGNISED` | Due Date could not be read as a valid date."
          },
          "response": []
        },
        {
          "_postman_id": "5ef8499d-5779-408f-9380-eb5190612d35",
          "name": "Get Instruction",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{collectApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}/instruction/{{instructionRef}}",
            "description": "The following endpoint will return the current state of an instruction.\n\nInstructions must be created before they can be queried.\n\nThe instruction is identified by a `customerRef`, an `orderRef` and an `instructionRef`. These values are provided from your own system to ours.\n\nAn `instructionRef` needs to be unique to the order but does not need to be globally unique."
          },
          "response": []
        },
        {
          "_postman_id": "63f350c1-665a-4010-ab7c-00f30fe89e62",
          "name": "Get Instruction Audit History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://{{collectApiUrl}}/v1/customer/{{customerRef}}/order/{{orderRef}}",
            "description": "The following endpoint will return an unstructured list of instruction events."
          },
          "response": []
        },
        {
          "_postman_id": "d306ef84-da1b-4970-91b1-403f178c0af7",
          "name": "Create Payment Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"customerRef\": \"\",\r\n    \"orderRef\": \"\",\r\n    \"instructionRef\": \"\",\r\n    \"capture\": \"\",\r\n    \"successUri\": \"\",\r\n    \"rejectedUri\": \"\",\r\n    \"cancelledUri\": \"\"\r\n}"
            },
            "url": "https://{{collectApiUrl}}/v1/token",
            "description": "Once you have created an Order and an Instruction for a Customer you are ready to generate a customer payment token.\r\n\r\nThe following request will generate a single-use bearer token, allowing your customer to either capture a single payment (called a `DIRECT_SALE`) or to capture a customer's billing details (called `BILLING_DETAILS`) for recurring payments.\r\n\r\n#### Request Body\r\n\r\nThe following parameters are sent in JSON format.\r\n\r\nParameter | Type | Description\r\n- | - | -\r\ncustomerRef | string (50 char max) | The unique reference used to represent a customer.\r\norderRef | string (50 char max) | The unique reference used to represent an order.\r\ninstructionRef | string (50 char max) | The unique reference used to represent a payment instruction.\r\ncapture | Type | `DIRECT_SALE` or `BILLING_DETAILS`.\r\nsuccessUri | string (128 char max) | The URI the user journey should be redirected to in the event of an off-site payment.\r\nrejectedUri | string (128 char max) | The URI the user journey should be redirected to in the event of an off-site payment.\r\ncancelledUri | string (128 char max) | The URI the user journey should be redirected to in the event of an off-site payment.\r\n\r\n#### Validation errors\r\n\r\nOne or many of the following errors may be returned if there were issues validating the request.\r\n\r\nCode | Description\r\n- | - \r\n`CUSTOMER_REF_IS_REQUIRED` | Reference is required.\r\n`CUSTOMER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`CUSTOMER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`ORDER_REF_IS_REQUIRED` | Reference is required.\r\n`ORDER_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`ORDER_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`INSTRUCTION_REF_IS_REQUIRED` | Reference is required.\r\n`INSTRUCTION_REF_LENGTH_OUT_OF_RANGE` | Reference has a maximum of 50 characters.\r\n`INSTRUCTION_REF_CONTAINS_INVALID_CHARACTERS` | Reference can only contain the following characters `a-z0-9-_.`.\r\n`CAPTURE_IS_REQUIRED` | Capture is required.\r\n`CAPTURE_NOT_RECOGNISED` | Capture must be either `DIRECT_SALE` or `BILLING_DETAILS`.\r\n`SUCCESS_URI_IS_REQUIRED` | Success URI is required.\r\n`SUCCESS_URI_LENGTH_OUT_OF_RANGE` | Success URI cannot exceed 128 characters.\r\n`SUCCESS_URI_FORMAT_NOT_RECOGNISED` | Success URI format is invalid.\r\n`REJECTED_URI_IS_REQUIRED` | Rejected URI is required.\r\n`REJECTED_URI_LENGTH_OUT_OF_RANGE` | Rejected URI cannot exceed 128 characters.\r\n`REJECTED_URI_FORMAT_NOT_RECOGNISED` | Rejected URI format is invalid.\r\n`CANCELLED_URI_IS_REQUIRED` | Cancelled URI is required.\r\n`CANCELLED_URI_LENGTH_OUT_OF_RANGE` | Cancelled URI cannot exceed 128 characters.\r\n`CANCELLED_URI_FORMAT_NOT_RECOGNISED` | Cancelled URI format is invalid."
          },
          "response": [
            {
              "id": "a6865927-435a-43b6-8c47-4c22cf9ca2ce",
              "name": "Create Payment Token",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"customerRef\": \"\",\n    \"orderRef\": \"\",\n    \"instructionRef\": \"\",\n    \"capture\": \"\",\n    \"successUri\": \"\",\n    \"rejectedUri\": \"\",\n    \"cancelledUri\": \"\"\n}"
                },
                "url": "https://{{transactionApiUrl}}/v1/token"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\r\n\t\"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\r\n\t\"expires\": 1544717374\r\n}"
            }
          ]
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "7737b2e2-4b03-4a69-be26-4a37d2c57250",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "b217333c-bf6a-427c-a1fd-da42c032f13f",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "_postman_id": "7fba9a88-e916-43b1-955e-dd2efb7645d6",
      "name": "Catalog API Reference",
      "description": "",
      "item": [
        {
          "_postman_id": "318f17fc-5c2d-467d-8df9-641874e409da",
          "name": "Get a Reward",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{rewardsApiUrl}}/v1/catalog/{rewardId}",
            "description": "# Description\n\nGets a reward from the catalog by it's ID\n\n## Role required\n\n`t.cat.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nrewardId | The id of the reward to get"
          },
          "response": [
            {
              "id": "c899a464-a8e1-4c7b-88b6-bb23bfe14f3f",
              "name": "Successful request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{rewardsApiUrl}}/v1/catalog/{rewardId}"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8a",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"brand\": {\n        \"brandKey\": \"\",\n        \"brandName\": \"\",\n        \"createdDate\": \"\",\n        \"description\": \"\",\n        \"disclaimer\": \"\",\n        \"imageUrls\": [\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 80\n            },\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 130\n            },\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 200\n            },\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 278\n            },\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 300\n            },\n            {\n                \"ppi\": 326,\n                \"ratioHeight\": 5,\n                \"ratioWidth\": 8,\n                \"url\": \"\",\n                \"width\": 1200\n            }\n        ],\n        \"lastUpdateDate\": \"\",\n        \"requirements\": {\n            \"alwaysShowDisclaimer\": false,\n            \"disclaimerInstructions\": \"\",\n            \"displayInstructions\": \"\",\n            \"termsAndConditionsInstructions\": \"\"\n        },\n        \"shortDescription\": \"\",\n        \"status\": \"\",\n        \"terms\": \"\"\n    },\n    \"countries\": [],\n    \"createdDate\": \"\",\n    \"credentialTypes\": [],\n    \"currencyCode\": \"\",\n    \"exchangeRateRule\": \"\",\n    \"isWholeAmountValueRequired\": false,\n    \"lastUpdateDate\": \"\",\n    \"provider\": {\n        \"id\": \"\",\n        \"name\": \"\"\n    },\n    \"redemptionInstructions\": \"\",\n    \"rewardId\": \"\",\n    \"rewardName\": \"\",\n    \"rewardType\": \"\",\n    \"status\": \"\",\n    \"tags\": [],\n    \"value\": {\n        \"greaterThan\": null,\n        \"greaterThanOrEqualTo\": 0,\n        \"lessThan\": null,\n        \"lessThanOrEqualTo\": 0\n    },\n    \"valueType\": \"\"\n}"
            }
          ]
        },
        {
          "_postman_id": "1a4c0368-7977-41b6-9617-bf7eae739ca1",
          "name": "Get a list of Rewards",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"rewardIds\": []\n}"
            },
            "url": "{{rewardsApiUrl}}/v1/catalog/rewards",
            "description": "# Description\n\nGets a list of rewards from the catalog by their ID's\n\n## Role required\n\n`t.cat.r`\n\n#### Request body\n\nA JSON formatted object string.\n\nKey name | Required | Description\n- | - | -\nrewardIds | Yes | An array of GUID's for the requested rewards."
          },
          "response": [
            {
              "id": "6655c8f7-bcfd-4935-83cd-1df70a17ca0c",
              "name": "Successful request ",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rewardIds\": []\n}"
                },
                "url": "{{rewardsApiUrl}}/v1/catalog/rewards"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "[\n    {\n        \"brand\": {\n            \"brandKey\": \"\",\n            \"brandName\": \"\",\n            \"createdDate\": \"\",\n            \"description\": \"\",\n            \"disclaimer\": \"\",\n            \"imageUrls\": [\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 80\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 130\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 200\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 278\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 300\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 1200\n                }\n            ],\n            \"lastUpdateDate\": \"\",\n            \"requirements\": {\n                \"alwaysShowDisclaimer\": false,\n                \"disclaimerInstructions\": \"\",\n                \"displayInstructions\": \"\",\n                \"termsAndConditionsInstructions\": \"\"\n            },\n            \"shortDescription\": \"\",\n            \"status\": \"\",\n            \"terms\": \"\"\n        },\n        \"countries\": [],\n        \"createdDate\": \"\",\n        \"credentialTypes\": [],\n        \"currencyCode\": \"\",\n        \"exchangeRateRule\": \"\",\n        \"isWholeAmountValueRequired\": false,\n        \"lastUpdateDate\": \"\",\n        \"provider\": {\n            \"id\": \"\",\n            \"name\": \"\"\n        },\n        \"redemptionInstructions\": \"\",\n        \"rewardId\": \"\",\n        \"rewardName\": \"\",\n        \"rewardType\": \"\",\n        \"status\": \"\",\n        \"tags\": [],\n        \"value\": {\n            \"greaterThan\": null,\n            \"greaterThanOrEqualTo\": 0,\n            \"lessThan\": null,\n            \"lessThanOrEqualTo\": 0\n        },\n        \"valueType\": \"\"\n    }\n]"
            }
          ]
        },
        {
          "_postman_id": "f15191e6-1145-489d-9b53-ed214edd84eb",
          "name": "Search Catalog for Rewards",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{rewardsApiUrl}}/v1/catalog?brandName={{brandNames}}&countries={{countries}}&currencies={{currencies}}",
              "host": [
                "{{rewardsApiUrl}}"
              ],
              "path": [
                "v1",
                "catalog"
              ],
              "query": [
                {
                  "key": "brandName",
                  "value": "{{brandNames}}",
                  "equals": true
                },
                {
                  "key": "countries",
                  "value": "{{countries}}",
                  "equals": true
                },
                {
                  "key": "currencies",
                  "value": "{{currencies}}",
                  "equals": true
                }
              ]
            },
            "description": "# Description\n\nSearches the catalog for rewards that match the given parameters\n\n## Role required\n\n`t.cat.r`\n\n#### Params\n\nParameter | Description\n--------- | -----------\nbrandNames | A comma seperated string of the brand names to search for.\ncountries | A comma seperated string of the countries to search for.\ncurrencies | A comma seperated string of the currencies to search for."
          },
          "response": [
            {
              "id": "7bc3759e-7e4a-4b7b-a10e-24e9984fb859",
              "name": "Successful request",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{rewardsApiUrl}}/v1/catalog?brandName={{brandNames}}&countries={{countries}}&currencies={{currencies}}",
                  "host": [
                    "{{rewardsApiUrl}}"
                  ],
                  "path": [
                    "v1",
                    "catalog"
                  ],
                  "query": [
                    {
                      "key": "brandName",
                      "value": "{{brandNames}}",
                      "equals": true
                    },
                    {
                      "key": "countries",
                      "value": "{{countries}}",
                      "equals": true
                    },
                    {
                      "key": "currencies",
                      "value": "{{currencies}}",
                      "equals": true
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "content-type",
                  "value": "application/json; charset=utf-8a",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "[\n    {\n        \"brand\": {\n            \"brandKey\": \"\",\n            \"brandName\": \"\",\n            \"createdDate\": \"\",\n            \"description\": \"\",\n            \"disclaimer\": \"\",\n            \"imageUrls\": [\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 80\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 130\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 200\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 278\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 300\n                },\n                {\n                    \"ppi\": 326,\n                    \"ratioHeight\": 5,\n                    \"ratioWidth\": 8,\n                    \"url\": \"\",\n                    \"width\": 1200\n                }\n            ],\n            \"lastUpdateDate\": \"\",\n            \"requirements\": {\n                \"alwaysShowDisclaimer\": false,\n                \"disclaimerInstructions\": \"\",\n                \"displayInstructions\": \"\",\n                \"termsAndConditionsInstructions\": \"\"\n            },\n            \"shortDescription\": \"\",\n            \"status\": \"\",\n            \"terms\": \"\"\n        },\n        \"countries\": [],\n        \"createdDate\": \"\",\n        \"credentialTypes\": [],\n        \"currencyCode\": \"\",\n        \"exchangeRateRule\": \"\",\n        \"isWholeAmountValueRequired\": false,\n        \"lastUpdateDate\": \"\",\n        \"provider\": {\n            \"id\": \"\",\n            \"name\": \"\"\n        },\n        \"redemptionInstructions\": \"\",\n        \"rewardId\": \"\",\n        \"rewardName\": \"\",\n        \"rewardType\": \"\",\n        \"status\": \"\",\n        \"tags\": [],\n        \"value\": {\n            \"greaterThan\": null,\n            \"greaterThanOrEqualTo\": 0,\n            \"lessThan\": null,\n            \"lessThanOrEqualTo\": 0\n        },\n        \"valueType\": \"\"\n    }\n]"
            }
          ]
        }
      ]
    },
    {
      "_postman_id": "09f68806-2b90-433d-9f6d-684cfef1d890",
      "name": "Transactions API Reference",
      "description": "Use this API for getting the payment options to present to your users and to process the payment instructions.",
      "item": [
        {
          "_postman_id": "f346e216-428b-4d94-a054-a3a3b5f342ab",
          "name": "Get Payout Options",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{transactionsApiUrl}}/v1/payout/options",
            "description": "Gets the payout options available filtered by the customer order contents in the supplied bearer token."
          },
          "response": []
        },
        {
          "_postman_id": "dc76a6ca-66a3-4d13-b316-0a687e16c931",
          "name": "Process Reward Payout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{transactionsApiUrl}}/v1/payout/reward/{{rewardId}}",
            "description": "Submit a payout instruction for processing."
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "6b830cb6-c43e-457a-80f6-cf0878582b3c",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "4248736c-140b-42fe-b8cb-97c97ac87565",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "a7688ccc-61d4-4ff6-9e15-bbb7186f3915",
        "type": "text/javascript",
        "exec": [
          "var CryptoJS = require(\"crypto-js\");",
          "",
          "var publicKey = pm.environment.get(\"publicKey\");",
          "var privateKey = CryptoJS.enc.Base64.parse(pm.environment.get(\"privateKey\"));",
          "",
          "var timestamp = (new Date).getTime() / 1000;",
          "",
          "var nonce = timestamp;",
          "    ",
          "var body = request.data;",
          "",
          "if (body.length > 0){",
          "    var utf8Body = CryptoJS.enc.Utf8.parse(body);",
          "    var hashedBody = CryptoJS.SHA256(utf8Body);",
          "    var bodySignature = CryptoJS.enc.Base64.stringify(hashedBody);",
          "}",
          "else {",
          "    var bodySignature = \"\";",
          "}",
          "",
          "var unsignedSignature = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + bodySignature;",
          "",
          "var utf8Signature = CryptoJS.enc.Utf8.parse(unsignedSignature);",
          "var hashedSignature = CryptoJS.HmacSHA256(utf8Signature, privateKey);",
          "var signedSignature = CryptoJS.enc.Base64.stringify(hashedSignature);",
          "",
          "var hmac = publicKey + \":\" + nonce + \":\" + timestamp + \":\" + signedSignature;",
          "",
          "pm.variables.set(\"token\", hmac);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "38581210-06a1-4804-a74f-878b9511e8aa",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}